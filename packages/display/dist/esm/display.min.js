const t="noscale",e="center",i="fit",n="stretch";class s extends HTMLElement{static get observedAttributes(){return["width","height","disabled","debug","id","class"]}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='<div>\n<style>\n    :host {\n        display: inline-block;\n        color: #555555;\n    }\n    div {\n        display: flex;\n        position: relative;\n        width: 100%;\n        height: 100%;\n    }\n    canvas {\n        background: #000000;\n        margin: auto;\n    }\n    label {\n        font-family: monospace;\n        color: currentColor;\n        position: absolute;\n    }\n    #title {\n        left: 0.5rem;\n        top: 0.5rem;\n    }\n    #fps {\n        right: 0.5rem;\n        top: 0.5rem;\n    }\n    #dimension {\n        left: 0.5rem;\n        bottom: 0.5rem;\n    }\n    .hidden {\n        display: none;\n    }\n    :host([debug]) div {\n        outline: 8px dashed rgba(0, 0, 0, 0.4);\n        outline-offset: -4px;\n        background-color: rgba(0, 0, 0, 0.1);\n    }\n    :host([mode="noscale"]) canvas {\n        margin: 0;\n        top: 0;\n        left: 0;\n    }\n    :host([mode="fit"]), :host([mode="center"]), :host([mode="stretch"]) {\n        width: 100%;\n        height: 100%;\n    }\n    :host([full]) {\n        width: 100vw!important;\n        height: 100vh!important;\n    }\n    :host([disabled]) {\n        display: none;\n    }\n</style>\n<label class="hidden" id="title">display-port</label>\n<label class="hidden" id="fps">00</label>\n<label class="hidden" id="dimension">0x0</label>\n<canvas></canvas></div>',this._canvasElement=this.shadowRoot.querySelector("canvas"),this._canvasContext=this._canvasElement.getContext("2d"),this._canvasContext.imageSmoothingEnabled=!1,this._titleElement=this.shadowRoot.querySelector("#title"),this._fpsElement=this.shadowRoot.querySelector("#fps"),this._dimensionElement=this.shadowRoot.querySelector("#dimension"),this._animationRequestHandle=0,this._prevAnimationFrameTime=0,this._width=640,this._height=480,this.update=this.update.bind(this)}connectedCallback(){this.hasAttribute("mode")||(this.mode="center"),this.updateCanvasSize(),this.resume()}disconnectedCallback(){this.pause()}attributeChangedCallback(t,e,i){switch(t){case"width":this._width=i;break;case"height":this._height=i;break;case"disabled":i?(this.update(0),this.pause()):this.resume();break;case"id":case"class":this._titleElement.innerHTML=`display-port${this.className?"."+this.className:""}${this.hasAttribute("id")?"#"+this.getAttribute("id"):""}`;break;case"debug":this._titleElement.classList.toggle("hidden",i),this._fpsElement.classList.toggle("hidden",i),this._dimensionElement.classList.toggle("hidden",i)}}update(t){if(this._animationRequestHandle=requestAnimationFrame(this.update),this.updateCanvasSize(),this.debug){const e=t-this._prevAnimationFrameTime,i=e<=0?"--":String(Math.round(1e3/e)).padStart(2,"0");if(this._prevAnimationFrameTime=t,this._fpsElement.innerText!==i&&(this._fpsElement.innerText=i),"noscale"===this.mode){let t=`${this._width}x${this._height}`;this._dimensionElement.innerText!==t&&(this._dimensionElement.innerText=t)}else{let t=`${this._width}x${this._height}|${this.shadowRoot.host.clientWidth}x${this.shadowRoot.host.clientHeight}`;this._dimensionElement.innerText!==t&&(this._dimensionElement.innerText=t)}}this.dispatchEvent(new CustomEvent("frame",{detail:{now:t,context:this._canvasContext},bubbles:!1,composed:!0}))}pause(){cancelAnimationFrame(this._animationRequestHandle)}resume(){this._animationRequestHandle=requestAnimationFrame(this.update)}updateCanvasSize(){let t=this.shadowRoot.host.getBoundingClientRect();const e=t.width,i=t.height;let n=this._canvasElement,s=this._width,a=this._height;const h=this.mode;if("stretch"===h)s=e,a=i;else if("noscale"!==h){if(e<s||i<a||"fit"===h){let t=e/s,n=i/a;t<n?(s=e,a*=t):(s*=n,a=i)}}s=Math.floor(s),a=Math.floor(a),n.width===s&&n.height===a||(n.width=s,n.height=a,n.style=`width: ${s}px; height: ${a}px`,this.dispatchEvent(new CustomEvent("resize",{detail:{width:s,height:a},bubbles:!1,composed:!0})))}getCanvas(){return this._canvasElement}getContext(){return this._canvasContext}get width(){return this._width}set width(t){this.setAttribute("width",t)}get height(){return this._height}set height(t){this.setAttribute("height",t)}get mode(){return this.getAttribute("mode")}set mode(t){this.setAttribute("mode",t)}get disabled(){return this.hasAttribute("disabled")}set disabled(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get debug(){return this.hasAttribute("debug")}set debug(t){t?this.setAttribute("debug",""):this.removeAttribute("debug")}}var a,h;function o(t,e,i=320,n=i){h=e,(a=t).width=i,a.height=n}function d(){return h}function l(){return a.clientWidth}function r(){return a.clientHeight}window.customElements.define("display-port",s),window.addEventListener("DOMContentLoaded",()=>{if(!a){let t=null,e=null,i=document.querySelector("display-port");i?(t=i.getCanvas(),e=i.getContext()):t=document.querySelector("canvas"),t&&(e||(e=t.getContext("2d")),o(t,e))}});var c=Object.freeze({__proto__:null,createCanvas:function(t=320,e=t,i=document.body){const n=document.createElement("canvas");i.appendChild(n),o(n,t,e)},attachCanvas:o,drawBufferToScreen:function(t,e=0,i=0,n=l(),s=r()){d().drawImage(t.canvas,e,i,n,s)},getCanvas:function(){return a},getDrawContext:d,getClientWidth:l,getClientHeight:r,getClientOffsetX:function(){return a.offsetLeft},getClientOffsetY:function(){return a.offsetTop}});export{c as Display,s as DisplayPort,e as MODE_CENTER,i as MODE_FIT,t as MODE_NOSCALE,n as MODE_STRETCH};
