!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Input={})}(this,(function(t){"use strict";const e={NULL:0,DOWN:1,UP:2,MOVE:3,parse(t){if("string"!=typeof t)return e.NULL;switch(t.toLowerCase()){case"down":return e.DOWN;case"up":return e.UP;case"move":return e.MOVE;default:return e.NULL}}};class s{static createAdapter(t,e,s,i,n,r){return{target:t,adapterId:e,deviceName:s,keyCode:i,scale:n,eventCode:r}}constructor(){this.adapters={"*":i()}}add(t){for(let e of t){const{deviceName:t,keyCode:s}=e;let n;t in this.adapters?n=this.adapters[t]:(n=i(),this.adapters[t]=n),s in n?n[s].push(e):n[s]=[e]}}delete(t){for(let e of t){const{deviceName:t,keyCode:s}=e;if(t in this.adapters){let i=this.adapters[t];if(s in i){let t=i[s],n=t.indexOf(e);n>=0&&t.splice(n,1)}}}}clear(){for(let t in this.adapters)this.adapters[t]=i()}poll(t,s,i){const n=this.findAdapters(t,s);for(let t of n){const s=t.eventCode;if(s===e.NULL){const{target:e,scale:s}=t,n=i.value*s;e.poll(n,t)}else{const{target:e,scale:n}=t,r=i.getEvent(s)*n;e.poll(r,t)}}return n.length>0}update(t,s,i){let n=!1;for(let r of this.findAdapters(t,s)){const t=r.eventCode;if(t!==e.NULL){const{target:e,scale:s}=r,o=i.getEvent(t)*s;e.update(o,r),n=!0}}return n}reset(t,e,s){let i=!1;for(let s of this.findAdapters(t,e))s.target.reset(),i=!0;return i}findAdapters(t,e){let s=[];if(t in this.adapters){let i=this.adapters[t];e in i&&s.push(...i[e]),s.push(...i["*"])}let i=this.adapters["*"];return e in i&&s.push(...i[e]),s.push(...i["*"]),s}}function i(){return{"*":[]}}class n extends class{constructor(){this.value=0}update(t){this.value=t}poll(){this.value=0}getEvent(t){return 0}getState(){return this.value}}{constructor(t){super(),this.update=this.update.bind(this),Array.isArray(t)||(t=[t]);let i=[],n=0;for(let o of t){"string"==typeof o&&(o={key:o});const{key:t,scale:a=1,event:u="null"}=o,{deviceName:l,keyCode:d}=r(t),p=e.parse(u),h=Number(a);let c=s.createAdapter(this,n,l,d,h,p);i.push(c),++n}this.adapters=i,this.values=new Array(i.length).fill(0),this.next={values:new Array(i.length).fill(0),value:0}}poll(t,e){const s=e.adapterId;let i=this.values[s];this.values[s]=t,this.value=this.value-i+t,this.next.values[s]=0,this.next.value+=t-i}update(t,e){const s=e.adapterId;let i=this.next.values[s];this.next.values[s]=t,this.next.value+=t-i}reset(){this.values.fill(0),this.value=0,this.next.values.fill(0),this.next.value=0}}function r(t){let e=t.indexOf(":");if(e>=0)return{deviceName:t.substring(0,e),keyCode:t.substring(e+1)};throw new Error("Invalid key string - missing device separator ':'.")}function o(t,e){return`${t}:${e}`}const a=1,u=2;const l=Symbol("inputRefCounts");function d(t,e,s){const i=o(e,s);let n=t[l],r=n[i]+1||1;return n[i]=r,r}function p(t,e,s){const i=o(e,s);let n=t[l],r=n[i]-1||0;return n[i]=Math.max(r,0),r}t.InputContext=class{constructor(t={}){const{disabled:e=!0}=t;this.inputSource=null,this._disabled=e,this._ignoreInput=e,this.adapters=new s,this.inputs={},this.onSourceInput=this.onSourceInput.bind(this),this.onSourcePoll=this.onSourcePoll.bind(this)}get disabled(){return this._disabled}set disabled(t){this.toggle(!t)}setInputMap(t){return this._setupInputs(this.inputSource,t),this}attach(t){return this._setupInputs(t,null),this.toggle(!0),this}detach(){return this.toggle(!1),this._setupInputs(null,null),this}_setupInputs(t,e){const s=this.disabled;this.disabled=!0;const i=this.inputSource,r=this.inputs,o=i!==t&&i,a=this.inputs&&e;if(o||a){o&&(i.removeEventListener("poll",this.onSourcePoll),i.removeEventListener("input",this.onSourceInput));for(let t in r){let{adapters:e}=r[t];for(let t of e){const{deviceName:e,keyCode:s}=t;0===p(i,e,s)&&i.delete(e,s)}}a&&(this.adapters.clear(),this.inputs={})}if(e){let t={};for(let s in e){let i=e[s],r=new n(i),o=r.adapters;this.adapters.add(o),t[s]=r}this.inputs=t}if(t){!function(t){l in t||(t[l]={})}(t);const e=this.inputs;for(let s in e){let{adapters:i}=e[s];for(let e of i){const{deviceName:s,keyCode:i}=e;1===d(t,s,i)&&t.add(s,i)}}this.inputSource!==t&&(t.addEventListener("poll",this.onSourcePoll),t.addEventListener("input",this.onSourceInput),this.inputSource=t)}this.disabled=s}onSourceInput(t){if(t.consumed||this._ignoreInput){const{deviceName:e,keyCode:s,input:i}=t;this.adapters.reset(e,s,i)}else{const{stage:e,deviceName:s,keyCode:i,input:n}=t;switch(e){case u:this.adapters.poll(s,i,n);break;case a:this.adapters.update(s,i,n)}t.consumed=!0}}onSourcePoll(t){this._ignoreInput!==this.disabled&&(this._ignoreInput=this.disabled)}toggle(t=this._disabled){if(t){if(!this.inputSource)throw new Error("Input source must be set before enabling input context.");Object.keys(this.inputs).length<=0&&console.warn("No inputs found for enabled input context - did you forget to setInputMap()?")}return this._disabled=!t,this}getInput(t){return this.inputs[t]}getInputValue(t){return t in this.inputs?this.inputs[t].value:0}},Object.defineProperty(t,"__esModule",{value:!0})}));
