!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("gl-matrix")):"function"==typeof define&&define.amd?define(["exports","gl-matrix"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Scene={},t.glMatrix)}(this,(function(t,e){"use strict";const r=e.vec3.fromValues(0,1,0);class i{constructor(t,e,r){this.canvas=t,this.projectionMatrix=e,this.viewMatrix=r,this.resize=this.resize.bind(this),t.addEventListener("resize",this.resize),setTimeout(this.resize,0)}destroy(){this.canvas.removeEventListener("resize",this.resize)}resize(){}}const a=Math.PI/3;class s extends i{constructor(t,r=a,i=.1,s=1e3){super(t,e.mat4.create(),e.mat4.create()),this.fieldOfView=r,this.clippingPlane={near:i,far:s}}resize(){const t=this.canvas.width/this.canvas.height,{near:r,far:i}=this.clippingPlane;e.mat4.perspective(this.projectionMatrix,this.fieldOfView,t,r,i)}}class o extends i{constructor(t,r,i,a,s,o,n){super(t,e.mat4.create(),e.mat4.create()),this.bounds={left:r,top:i,right:a,bottom:s},this.clippingPlane={near:o,far:n}}resize(){const t=this.canvas.width/this.canvas.height,{near:r,far:i}=this.clippingPlane,{left:a,top:s,right:o,bottom:n}=this.bounds;e.mat4.ortho(this.projectionMatrix,a*t,o*t,n,s,r,i)}}const n=Math.PI/180;class c{constructor(t={locky:!1}){this.locky=t.locky,this.position=e.vec3.create(),this.forward=e.vec3.fromValues(0,0,-1),this.right=e.vec3.fromValues(1,0,0),this.up=e.vec3.fromValues(0,1,0),this.forwardAmount=0,this.rightAmount=0,this.upAmount=0,this.pitch=0,this.yaw=-90}look(t,e,r=1){return this.pitch=Math.min(89.9,Math.max(-89.9,this.pitch+e*r)),this.yaw=(this.yaw+t*r)%360,this}move(t,e=0,r=0,i=1){return this.forwardAmount+=t*i,this.rightAmount+=e*i,this.upAmount+=r*i,this}apply(t){let{position:r,forward:i,right:a,up:s,forwardAmount:o,rightAmount:c,upAmount:h,pitch:l,yaw:m}=this,u=m*n,f=l*n,p=Math.cos(u),v=Math.cos(f),d=Math.sin(u),g=p*v,w=Math.sin(f),y=d*v;e.vec3.normalize(i,e.vec3.set(i,g,w,y)),e.vec3.normalize(a,e.vec3.cross(a,i,s));let M=e.vec3.create(),A=r[1];e.vec3.scale(M,i,o),e.vec3.add(r,r,M),e.vec3.scale(M,a,c),e.vec3.add(r,r,M),this.locky&&(r[1]=A),e.vec3.scale(M,s,h),e.vec3.add(r,r,M),this.forwardAmount=0,this.rightAmount=0,this.upAmount=0;let x=e.vec3.add(M,r,i);return e.mat4.lookAt(t,r,x,s),t}}t.Camera=i,t.FirstPersonCameraController=c,t.OrthographicCamera=o,t.PerspectiveCamera=s,t.createFirstPersonCameraController=function(t={}){return new c(t)},t.createOrthographicCamera=function(t,e,r,i,a,s=-1e3,n=1e3){return new o(t,e,r,i,a,s,n)},t.createPerspectiveCamera=function(t,e=a,r=.1,i=1e3){return new s(t,e,r,i)},t.lookAt=function(t,i,a,s=0,o=1){let n=e.vec3.create(),c=e.quat.create();e.mat4.getTranslation(n,t),e.mat4.getRotation(c,t);let h=e.vec3.fromValues(i,a,s);e.mat4.lookAt(t,n,h,r);let l=e.quat.create();e.mat4.getRotation(t,l),e.quat.slerp(c,c,l,o),e.mat4.fromRotationTranslation(t,c,n)},t.panTo=function(t,r,i,a=0,s=1){let o=e.vec3.create();e.mat4.getTranslation(o,t);let n=e.vec3.fromValues((r-o[0])*s,(i-o[1])*s,(a-o[2])*s);e.mat4.translate(t,t,n)},t.screenToWorldRay=function(t,r,i,a){let s=e.vec4.fromValues(t,r,-1,1),o=e.mat4.create();e.mat4.invert(o,i),e.vec4.transformMat4(s,s,o),s[2]=-1,s[3]=0,e.mat4.invert(o,a),e.vec4.transformMat4(s,s,o);let n=e.vec3.fromValues(s[0],s[1],s[2]);return e.vec3.normalize(n,n),n},Object.defineProperty(t,"__esModule",{value:!0})}));
