{"version":3,"file":"index.js","sources":["../../../packages/milque/dist/esm/DisplayPort-9958052f.js","../../../packages/milque/dist/esm/InputContext-37718782.js","../../../node_modules/gl-matrix/esm/common.js","../../../node_modules/gl-matrix/esm/vec3.js","../../../packages/milque/dist/esm/index-6b4d0fe1.js","../../../packages/milque/dist/esm/index-96bf38e3.js","../src/main.js"],"sourcesContent":["const MODE_NOSCALE = 'noscale';\nconst MODE_CENTER = 'center';\nconst MODE_FIT = 'fit';\nconst MODE_STRETCH = 'stretch';\n\nconst DEFAULT_MODE = MODE_NOSCALE;\nconst DEFAULT_WIDTH = 300;\nconst DEFAULT_HEIGHT = 150;\n\nconst INNER_HTML = `\n<div class=\"container\">\n    <label class=\"hidden\" id=\"title\">display-port</label>\n    <label class=\"hidden\" id=\"fps\">00</label>\n    <label class=\"hidden\" id=\"dimension\">0x0</label>\n    <canvas></canvas>\n    <slot></slot>\n</div>`;\nconst INNER_STYLE = `\n:host {\n    display: inline-block;\n    color: #555555;\n}\n.container {\n    display: flex;\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\ncanvas {\n    background: #000000;\n    margin: auto;\n    image-rendering: pixelated;\n}\nlabel {\n    font-family: monospace;\n    color: currentColor;\n    position: absolute;\n}\n#title {\n    left: 0.5rem;\n    top: 0.5rem;\n}\n#fps {\n    right: 0.5rem;\n    top: 0.5rem;\n}\n#dimension {\n    left: 0.5rem;\n    bottom: 0.5rem;\n}\n.hidden {\n    display: none;\n}\n:host([debug]) .container {\n    outline: 6px dashed rgba(0, 0, 0, 0.1);\n    outline-offset: -4px;\n    background-color: rgba(0, 0, 0, 0.1);\n}\n:host([mode=\"${MODE_NOSCALE}\"]) canvas {\n    margin: 0;\n    top: 0;\n    left: 0;\n}\n:host([mode=\"${MODE_FIT}\"]), :host([mode=\"${MODE_CENTER}\"]), :host([mode=\"${MODE_STRETCH}\"]) {\n    width: 100%;\n    height: 100%;\n}\n:host([full]) {\n    width: 100vw!important;\n    height: 100vh!important;\n}\n:host([disabled]) {\n    display: none;\n}\nslot {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n\n    pointer-events: none;\n}\n::slotted(*) {\n    pointer-events: auto;\n}`;\n\nconst TEMPLATE_KEY = Symbol('template');\nconst STYLE_KEY = Symbol('style');\n\n/**\n * @version 1.2.2\n * @description\n * # Changelog\n * ## 1.2.2\n * - Removed 'contexttype'\n * ## 1.2.1\n * - Added 'contexttype' for getContext()\n * ## 1.2.0\n * - Moved template creation to static time\n * - Removed default export\n * ## 1.1.2\n * - Added clear()\n * - Added delta time for frame events\n * ## 1.1.1\n * - Added onframe and onresize attribute callbacks\n * - Added \"stretch\" mode\n * ## 1.1.0\n * - Changed \"topleft\" to \"noscale\"\n * - Changed default size to 640 x 480\n * - Changed \"center\" and \"fit\" to fill container instead of viewport\n * - Added \"full\" property to override and fill viewport\n * ## 1.0.2\n * - Moved default values to the top\n * ## 1.0.1\n * - Fixed scaling issues when dimensions do not match\n * ## 1.0.0\n * - Created DisplayPort\n * \n * @fires frame Every time a new frame is rendered.\n * @fires resize When the display is resized.\n */\nclass DisplayPort extends HTMLElement\n{\n    static get [TEMPLATE_KEY]()\n    {\n        let template = document.createElement('template');\n        template.innerHTML = INNER_HTML;\n        Object.defineProperty(this, TEMPLATE_KEY, { value: template });\n        return template;\n    }\n\n    static get [STYLE_KEY]()\n    {\n        let style = document.createElement('style');\n        style.innerHTML = INNER_STYLE;\n        Object.defineProperty(this, STYLE_KEY, { value: style });\n        return style;\n    }\n\n    /** @override */\n    static get observedAttributes()\n    {\n        return [\n            'width',\n            'height',\n            'disabled',\n            // Event handlers...\n            'onframe',\n            /*\n            // NOTE: Already handled by GlobalEventHandlers...\n            'onresize',\n            */\n            // NOTE: For debuggin purposes...\n            'debug',\n            // ...listening for built-in attribs...\n            'id',\n            'class',\n        ];\n    }\n\n    constructor()\n    {\n        super();\n\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.constructor[TEMPLATE_KEY].content.cloneNode(true));\n        this.shadowRoot.appendChild(this.constructor[STYLE_KEY].cloneNode(true));\n\n        this._canvasElement = this.shadowRoot.querySelector('canvas');\n\n        this._titleElement = this.shadowRoot.querySelector('#title');\n        this._fpsElement = this.shadowRoot.querySelector('#fps');\n        this._dimensionElement = this.shadowRoot.querySelector('#dimension');\n\n        this._animationRequestHandle = 0;\n        this._prevAnimationFrameTime = 0;\n\n        this._width = DEFAULT_WIDTH;\n        this._height = DEFAULT_HEIGHT;\n\n        this._onframe = null;\n        /*\n        // NOTE: Already handled by GlobalEventHandlers...\n        this._onresize = null;\n        */\n\n        this.update = this.update.bind(this);\n    }\n\n    get canvas() { return this._canvasElement; }\n    \n    /** @override */\n    connectedCallback()\n    {\n        if (!this.hasAttribute('mode')) this.mode = DEFAULT_MODE;\n        \n        // Allows this element to be focusable\n        if (!this.hasAttribute('tabindex')) this.setAttribute('tabindex', 0);\n\n        this.updateCanvasSize();\n        this.resume();\n    }\n\n    /** @override */\n    disconnectedCallback()\n    {\n        this.pause();\n    } \n\n    /** @override */\n    attributeChangedCallback(attribute, prev, value)\n    {\n        switch(attribute)\n        {\n            case 'width':\n                this._width = value;\n                break;\n            case 'height':\n                this._height = value;\n                break;\n            case 'disabled':\n                if (value)\n                {\n                    this.update(0);\n                    this.pause();\n                }\n                else\n                {\n                    this.resume();\n                }\n                break;\n            // Event handlers...\n            case 'onframe':\n                this.onframe = new Function('event', `with(document){with(this){${value}}}`).bind(this);\n                break;\n            /*\n            // NOTE: Already handled by GlobalEventHandlers...\n            case 'onresize':\n                this.onresize = new Function('event', `with(document){with(this){${value}}}`).bind(this);\n                break;\n            */\n            // NOTE: For debugging purposes...\n            case 'id':\n            case 'class':\n                this._titleElement.innerHTML = `display-port${this.className ? '.' + this.className : ''}${this.hasAttribute('id') ? '#' + this.getAttribute('id') : ''}`;\n                break;\n            case 'debug':\n                this._titleElement.classList.toggle('hidden', value);\n                this._fpsElement.classList.toggle('hidden', value);\n                this._dimensionElement.classList.toggle('hidden', value);\n                break;\n        }\n    }\n\n    update(now)\n    {\n        this._animationRequestHandle = requestAnimationFrame(this.update);\n\n        this.updateCanvasSize();\n        const deltaTime = now - this._prevAnimationFrameTime;\n        this._prevAnimationFrameTime = now;\n\n        // NOTE: For debugging purposes...\n        if (this.debug)\n        {\n            // Update FPS...\n            const frames = deltaTime <= 0 ? '--' : String(Math.round(1000 / deltaTime)).padStart(2, '0');\n            if (this._fpsElement.innerText !== frames)\n            {\n                this._fpsElement.innerText = frames;\n            }\n\n            // Update dimensions...\n            if (this.mode === MODE_NOSCALE)\n            {\n                let result = `${this._width}x${this._height}`;\n                if (this._dimensionElement.innerText !== result)\n                {\n                    this._dimensionElement.innerText = result;\n                }\n            }\n            else\n            {\n                let result = `${this._width}x${this._height}|${this.shadowRoot.host.clientWidth}x${this.shadowRoot.host.clientHeight}`;\n                if (this._dimensionElement.innerText !== result)\n                {\n                    this._dimensionElement.innerText = result;\n                }\n            }\n        }\n\n        this.dispatchEvent(new CustomEvent('frame', {\n            detail: {\n                now,\n                prevTime: this._prevAnimationFrameTime,\n                deltaTime: deltaTime,\n                canvas: this._canvasElement,\n                /** @deprecated */\n                get context() { let ctx = this.canvas.getContext('2d'); ctx.imageSmoothingEnabled = false; return ctx; },\n            },\n            bubbles: false,\n            composed: true\n        }));\n    }\n\n    pause()\n    {\n        cancelAnimationFrame(this._animationRequestHandle);\n    }\n\n    resume()\n    {\n        this._animationRequestHandle = requestAnimationFrame(this.update);\n    }\n    \n    updateCanvasSize()\n    {\n        let clientRect = this.shadowRoot.host.getBoundingClientRect();\n        const clientWidth = clientRect.width;\n        const clientHeight = clientRect.height;\n\n        let canvas = this._canvasElement;\n        let canvasWidth = this._width;\n        let canvasHeight = this._height;\n\n        const mode = this.mode;\n\n        if (mode === MODE_STRETCH)\n        {\n            canvasWidth = clientWidth;\n            canvasHeight = clientHeight;\n        }\n        else if (mode !== MODE_NOSCALE)\n        {\n            let flag = clientWidth < canvasWidth || clientHeight < canvasHeight || mode === MODE_FIT;\n            if (flag)\n            {\n                let ratioX = clientWidth / canvasWidth;\n                let ratioY = clientHeight / canvasHeight;\n\n                if (ratioX < ratioY)\n                {\n                    canvasWidth = clientWidth;\n                    canvasHeight = canvasHeight * ratioX;\n                }\n                else\n                {\n                    canvasWidth = canvasWidth * ratioY;\n                    canvasHeight = clientHeight;\n                }\n            }\n        }\n\n        canvasWidth = Math.floor(canvasWidth);\n        canvasHeight = Math.floor(canvasHeight);\n\n        if (canvas.clientWidth !== canvasWidth || canvas.clientHeight !== canvasHeight)\n        {\n            canvas.width = this._width;\n            canvas.height = this._height;\n            canvas.style = `width: ${canvasWidth}px; height: ${canvasHeight}px`;\n            this.dispatchEvent(new CustomEvent('resize', { detail: { width: canvasWidth, height: canvasHeight }, bubbles: false, composed: true }));\n        }\n    }\n\n    /*\n    // NOTE: Already handled by GlobalEventHandlers...\n    get onresize() { return this._onresize; }\n    set onresize(value)\n    {\n        if (this._onresize) this.removeEventListener('resize', this._onresize);\n        this._onresize = value;\n        if (this._onresize) this.addEventListener('resize', value);\n    }\n    */\n\n    get onframe() { return this._onframe; }\n    set onframe(value)\n    {\n        if (this._onframe) this.removeEventListener('frame', this._onframe);\n        this._onframe = value;\n        if (this._onframe) this.addEventListener('frame', value);\n    }\n\n    get width() { return this._width; }\n    set width(value) { this.setAttribute('width', value); }\n\n    get height() { return this._height; }\n    set height(value) { this.setAttribute('height', value); }\n\n    get mode() { return this.getAttribute('mode'); }\n    set mode(value) { this.setAttribute('mode', value); }\n\n    get disabled() { return this.hasAttribute('disabled'); }\n    set disabled(value) { if (value) this.setAttribute('disabled', ''); else this.removeAttribute('disabled'); }\n\n    // NOTE: For debugging purposes...\n    get debug() { return this.hasAttribute('debug'); }\n    set debug(value) { if (value) this.setAttribute('debug', ''); else this.removeAttribute('debug'); }\n}\nwindow.customElements.define('display-port', DisplayPort);\n\nexport { DisplayPort as D };\n","class InputDevice\n{\n    /** @abstract */\n    static addInputEventListener(elementTarget, listener) {}\n    \n    /** @abstract */\n    static removeInputEventListener(elementTarget, listener) {}\n\n    constructor(eventTarget)\n    {\n        this.eventTarget = eventTarget;\n    }\n}\n\nclass Button\n{\n    constructor()\n    {\n        this.down = 0;\n        this.up = 0;\n        this.value = 0;\n\n        this.next = {\n            up: 0,\n            down: 0,\n        };\n    }\n\n    update(event, value)\n    {\n        if (event === 'down')\n        {\n            this.next.down = value;\n        }\n        else\n        {\n            this.next.up = value;\n        }\n    }\n\n    poll()\n    {\n        if (this.value)\n        {\n            if (this.up && !this.next.up)\n            {\n                this.value = 0;\n            }\n        }\n        else if (this.next.down)\n        {\n            this.value = 1;\n        }\n\n        this.down = this.next.down;\n        this.up = this.next.up;\n\n        this.next.down = 0;\n        this.next.up = 0;\n    }\n\n    /** @override */\n    toString()\n    {\n        return this.value;\n    }\n}\n\nclass Axis\n{\n    constructor()\n    {\n        this.value = 0;\n    }\n\n    update(event, value)\n    {\n        this.value = value;\n    }\n\n    poll() {}\n\n    /** @override */\n    toString()\n    {\n        return this.value;\n    }\n}\n\nclass AggregatedAxis extends Axis\n{\n    constructor()\n    {\n        super();\n\n        this.next = 0;\n    }\n\n    /** @override */\n    update(event, value)\n    {\n        this.next += value;\n    }\n\n    /** @override */\n    poll()\n    {\n        this.value = this.next;\n        this.next = 0;\n    }\n}\n\nconst KEYBOARD_CONTEXT_KEY = Symbol('keyboardEventContext');\n\nclass Keyboard extends InputDevice\n{\n    /** @override */\n    static addInputEventListener(eventTarget, listener)\n    {\n        let ctx;\n        if (!(KEYBOARD_CONTEXT_KEY in listener))\n        {\n            ctx = {\n                handler: listener,\n                target: eventTarget,\n                down: null,\n                up: null,\n                _keyEvent: {\n                    type: 'key',\n                    target: eventTarget,\n                    device: 'keyboard',\n                    key: null,\n                    event: null,\n                    value: null,\n                    control: false,\n                    shift: false,\n                    alt: false,\n                },\n            };\n    \n            let down = onKeyDown.bind(ctx);\n            let up = onKeyUp.bind(ctx);\n        \n            ctx.down = down;\n            ctx.up = up;\n        \n            listener[KEYBOARD_CONTEXT_KEY] = ctx;\n        }\n        else\n        {\n            ctx = listener[KEYBOARD_CONTEXT_KEY];\n        }\n\n        eventTarget.addEventListener('keyup', ctx.up);\n        eventTarget.addEventListener('keydown', ctx.down);\n    \n        return eventTarget;\n    }\n\n    /** @override */\n    static removeInputEventListener(eventTarget, listener)\n    {\n        if (KEYBOARD_CONTEXT_KEY in listener)\n        {\n            let ctx = listener[KEYBOARD_CONTEXT_KEY];\n        \n            eventTarget.removeEventListener('keyup', ctx.up);\n            eventTarget.removeEventListener('keydown', ctx.down);\n        }\n    \n        return eventTarget;\n    }\n\n    constructor(eventTarget, keyList = undefined)\n    {\n        super(eventTarget);\n\n        this._buttons = [];\n        this._managed = Array.isArray(keyList);\n\n        this.onManagedKeyEvent = this.onManagedKeyEvent.bind(this);\n        this.onUnmanagedKeyEvent = this.onUnmanagedKeyEvent.bind(this);\n\n        if (this._managed)\n        {\n            for(let key of keyList)\n            {\n                let button = new Button();\n                this[key] = button;\n                this._buttons.push(button);\n            }\n\n            Keyboard.addInputEventListener(eventTarget, this.onManagedKeyEvent);\n        }\n        else\n        {\n            Keyboard.addInputEventListener(eventTarget, this.onUnmanagedKeyEvent);\n        }\n    }\n\n    get Up() { return Math.min((this.ArrowUp || 0) + (this.KeyW || 0), 1); }\n    get Down() { return Math.min((this.ArrowDown || 0) + (this.KeyS || 0), 1); }\n    get Left() { return Math.min((this.ArrowLeft || 0) + (this.KeyA || 0), 1); }\n    get Right() { return Math.min((this.ArrowRight || 0) + (this.KeyD || 0), 1); }\n\n    destroy()\n    {\n        if (this._managed)\n        {\n            Keyboard.removeInputEventListener(this.eventTarget, this.onManagedKeyEvent);\n        }\n        else\n        {\n            Keyboard.removeInputEventListener(this.eventTarget, this.onUnmanagedKeyEvent);\n        }\n        this.eventTarget = null;\n    }\n\n    poll()\n    {\n        for(let button of this._buttons)\n        {\n            button.poll();\n        }\n        return this;\n    }\n\n    onUnmanagedKeyEvent(e)\n    {\n        if (!(e.key in this))\n        {\n            let button = new Button();\n            this[e.key] = button;\n            this._buttons.push(button);\n        }\n        \n        this[e.key].update(e.event, e.value);\n        \n        return true;\n    }\n\n    onManagedKeyEvent(e)\n    {\n        if (e.key in this)\n        {\n            this[e.key].update(e.event, e.value);\n\n            return true;\n        }\n    }\n}\n\nfunction onKeyDown(e)\n{\n    // Ignore repeat events.\n    if (e.repeat)\n    {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    let event = this._keyEvent;\n    // NOTE: You could use `e.key`, but we care about location rather than printable character.\n    event.key = e.code;\n    event.event = 'down';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.handler.call(undefined, event);\n\n    if (result)\n    {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n}\n\nfunction onKeyUp(e)\n{\n    let event = this._keyEvent;\n    // NOTE: You could use `e.key`, but we care about location rather than printable character.\n    event.key = e.code;\n    event.event = 'up';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.handler.call(undefined, event);\n\n    if (result)\n    {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n}\n\nconst MOUSE_CONTEXT_KEY = Symbol('mouseEventContext');\n\nclass Mouse extends InputDevice\n{\n    /** @override */\n    static addInputEventListener(eventTarget, listener)\n    {\n        let ctx;\n        if (!(MOUSE_CONTEXT_KEY in listener))\n        {\n            ctx = {\n                handler: listener,\n                target: eventTarget,\n                down: null,\n                up: null,\n                move: null,\n                contextmenu: null,\n                _down: false,\n                _keyEvent: {\n                    type: 'key',\n                    target: eventTarget,\n                    device: 'mouse',\n                    key: null,\n                    event: null,\n                    value: null,\n                },\n                _posEvent: {\n                    type: 'pos',\n                    target: eventTarget,\n                    device: 'mouse',\n                    key: 'pos',\n                    event: 'move',\n                    x: 0, y: 0, dx: 0, dy: 0,\n                },\n            };\n    \n            let down = onMouseDown.bind(ctx);\n            let up = onMouseUp.bind(ctx);\n            let move = onMouseMove.bind(ctx);\n            let contextmenu = onContextMenu.bind(ctx);\n        \n            ctx.down = down;\n            ctx.up = up;\n            ctx.move = move;\n            ctx.contextmenu = contextmenu;\n        \n            listener[MOUSE_CONTEXT_KEY] = ctx;\n        }\n        else\n        {\n            ctx = listener[MOUSE_CONTEXT_KEY];\n        }\n    \n        eventTarget.addEventListener('mousedown', ctx.down);\n        document.addEventListener('mouseup', ctx.up);\n        eventTarget.addEventListener('contextmenu', ctx.contextmenu);\n        document.addEventListener('mousemove', ctx.move);\n    \n        return eventTarget;\n    }\n\n    /** @override */\n    static removeInputEventListener(eventTarget, listener)\n    {\n        if (MOUSE_CONTEXT_KEY in listener)\n        {\n            let ctx = listener[MOUSE_CONTEXT_KEY];\n        \n            eventTarget.removeEventListener('mousedown', ctx.down);\n            document.removeEventListener('mouseup', ctx.up);\n            eventTarget.removeEventListener('contextmenu', ctx.contextmenu);\n            document.removeEventListener('mousemove', ctx.move);\n        }\n    \n        return eventTarget;\n    }\n\n    constructor(eventTarget)\n    {\n        super(eventTarget);\n\n        this.x = new Axis();\n        this.y = new Axis();\n        this.dx = new AggregatedAxis();\n        this.dy = new AggregatedAxis();\n        this.Button0 = new Button();\n        this.Button1 = new Button();\n        this.Button2 = new Button();\n        this.Button3 = new Button();\n        this.Button4 = new Button();\n\n        this.onMouseEvent = this.onMouseEvent.bind(this);\n\n        Mouse.addInputEventListener(eventTarget, this.onMouseEvent);\n    }\n\n    get Left() { return this.Button0; }\n    get Middle() { return this.Button1; }\n    get Right() { return this.Button2; }\n\n    destroy()\n    {\n        Mouse.removeInputEventListener(this.eventTarget, this.onMouseEvent);\n        this.eventTarget = null;\n    }\n\n    poll()\n    {\n        this.x.poll();\n        this.y.poll();\n        this.dx.poll();\n        this.dy.poll();\n        this.Button0.poll();\n        this.Button1.poll();\n        this.Button2.poll();\n        this.Button3.poll();\n        this.Button4.poll();\n\n        return this;\n    }\n\n    onMouseEvent(e)\n    {\n        let { key, event } = e;\n        switch(key)\n        {\n            case 0:\n                this.Button0.update(event, e.value);\n                break;\n            case 1:\n                this.Button1.update(event, e.value);\n                break;\n            case 2:\n                this.Button2.update(event, e.value);\n                break;\n            case 3:\n                this.Button3.update(event, e.value);\n                break;\n            case 4:\n                this.Button4.update(event, e.value);\n                break;\n            case 'pos':\n                this.x.update(event, e.x);\n                this.y.update(event, e.y);\n                this.dx.update(event, e.dx);\n                this.dy.update(event, e.dy);\n                \n                // Cannot consume a position event.\n                return;\n        }\n\n        return true;\n    }\n}\n\nfunction onMouseDown(e)\n{\n    this._down = true;\n\n    let event = this._keyEvent;\n    event.key = e.button;\n    event.event = 'down';\n    event.value = 1;\n\n    let result = this.handler.call(undefined, event);\n\n    if (result)\n    {\n        if (document.activeElement === this.target)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n    }\n}\n\nfunction onMouseUp(e)\n{\n    if (this._down)\n    {\n        this._down = false;\n\n        let event = this._keyEvent;\n        event.key = e.button;\n        event.event = 'up';\n        event.value = 1;\n        \n        let result = this.handler.call(undefined, event);\n    \n        if (result)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n    }\n}\n\nfunction onMouseMove(e)\n{\n    let element = this.target;\n    let { clientWidth, clientHeight } = element;\n\n    let rect = this.target.getBoundingClientRect();\n\n    let dx = e.movementX / clientWidth;\n    let dy = e.movementY / clientHeight;\n    let x = (e.clientX - rect.left) / clientWidth;\n    let y = (e.clientY - rect.top) / clientHeight;\n\n    let event = this._posEvent;\n    event.x = x;\n    event.y = y;\n    event.dx = dx;\n    event.dy = dy;\n\n    let result = this.handler.call(undefined, event);\n\n    if (typeof result !== 'undefined')\n    {\n        throw new Error(`Return value must be 'undefined'. Mouse position and movement events cannot be consumed.`);\n    }\n}\n\nfunction onContextMenu(e)\n{\n    e.preventDefault();\n    e.stopPropagation();\n    return false;\n}\n\nconst INNER_HTML = `\n<kbd></kbd>`;\nconst INNER_STYLE = `\n:host {\n    display: inline-block;\n}\nkbd {\n    background-color: #EEEEEE;\n    border-radius: 3px;\n    border: 1px solid #B4B4B4;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, .2), 0 2px 0 0 rgba(255, 255, 255, .7) inset;\n    color: #333333;\n    font-size: 0.85em;\n    font-weight: 700;\n    line-height: 1;\n    padding: 2px 4px;\n    white-space: nowrap;\n}\n`;\n\nconst TEMPLATE_KEY = Symbol('template');\nconst STYLE_KEY = Symbol('style');\n\nclass InputKey extends HTMLElement\n{\n    static toInputMap(nodes)\n    {\n        let inputMap = {};\n        \n        for(let node of nodes)\n        {\n            if (node instanceof InputKey)\n            {\n                let inputName = node.input;\n    \n                let keys;\n                if (inputName in inputMap)\n                {\n                    keys = inputMap[inputName];\n                }\n                else\n                {\n                    inputMap[inputName] = keys = [];\n                }\n    \n                let inputType = node.type;\n                switch(inputType)\n                {\n                    case 'action':\n                        keys.push({\n                            key: node.key,\n                            event: node.event,\n                        });\n                        break;\n                    case 'range':\n                        keys.push({\n                            key: node.key,\n                            scale: node.scale,\n                        });\n                        break;\n                    default:\n                        throw new Error('Unknown input type.');\n                }\n            }\n        }\n\n        return inputMap;\n    }\n\n    static get [TEMPLATE_KEY]()\n    {\n        let template = document.createElement('template');\n        template.innerHTML = INNER_HTML;\n        Object.defineProperty(this, TEMPLATE_KEY, { value: template });\n        return template;\n    }\n\n    static get [STYLE_KEY]()\n    {\n        let style = document.createElement('style');\n        style.innerHTML = INNER_STYLE;\n        Object.defineProperty(this, STYLE_KEY, { value: style });\n        return style;\n    }\n\n    /** @override */\n    static get observedAttributes()\n    {\n        return [\n            'input',\n            'key',\n            'scale',\n            'event'\n        ];\n    }\n\n    constructor()\n    {\n        super();\n\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.constructor[TEMPLATE_KEY].content.cloneNode(true));\n        this.shadowRoot.appendChild(this.constructor[STYLE_KEY].cloneNode(true));\n\n        this.keyElement = this.shadowRoot.querySelector('kbd');\n    }\n\n    /** @override */\n    attributeChangedCallback(attribute, prev, value)\n    {\n        switch(attribute)\n        {\n            case 'key':\n                this.keyElement.textContent = value;\n                break;\n        }\n    }\n\n    get type() { return this.hasAttribute('event') ? 'action' : 'range'; }\n\n    get input() { return this.getAttribute('input'); }\n    set input(value) { this.setAttribute('input', value); }\n\n    get key() { return this.getAttribute('key'); }\n    set key(value) { this.setAttribute('key', value); }\n\n    get scale() { return Number(this.getAttribute('scale')); }\n    set scale(value) { this.setAttribute('scale', value); }\n\n    get event() { return this.getAttribute('event'); }\n    set event(value) { this.setAttribute('event', value); }\n}\nwindow.customElements.define('input-key', InputKey);\n\nclass Input\n{\n    constructor(inputName, inputType)\n    {\n        this.inputName = inputName;\n        this.inputType = inputType;\n        \n        this.value = 0;\n\n        this._onchange = null;\n        this._eventListeners = new Map();\n    }\n\n    update(value)\n    {\n        if (this.value !== value)\n        {\n            this.value = value;\n            \n            if (this._eventListeners.has('change'))\n            {\n                for(let listener of this._eventListeners.get('change'))\n                {\n                    listener.call(undefined, this);\n                }\n            }\n\n            return true;\n        }\n        return false;\n    }\n\n    get onchange()\n    {\n        return this._onchange;\n    }\n\n    set onchange(callback)\n    {\n        if (this._onchange)\n        {\n            this.removeEventListener('change', this._onchange);\n        }\n\n        this._onchange = callback;\n        this.addEventListener('change', callback);\n    }\n\n    addEventListener(event, listener)\n    {\n        if (this._eventListeners.has(event))\n        {\n            let listeners = this._eventListeners.get(event);\n            listeners.push(listener);\n        }\n        else\n        {\n            this._eventListeners.set(event, [ listener ]);\n        }\n    }\n\n    removeEventListener(event, listener)\n    {\n        if (this._eventListeners.has(event))\n        {\n            let listeners = this._eventListeners.get(event);\n            listeners.splice(listeners.indexOf(listener), 1);\n        }\n    }\n\n    /** @override */\n    toString()\n    {\n        return this.value;\n    }\n}\n\n// TODO: Maybe this should be InputMap.getContext()?\n\nconst INNER_HTML$1 = `\n<table>\n    <thead>\n        <tr class=\"header\">\n            <th id=\"title\" colspan=3>input-context</th>\n            <th id=\"poll\">&nbsp;</th>\n        </tr>\n        <tr class=\"hint\">\n            <th>input</th>\n            <th>key</th>\n            <th>mod</th>\n            <th>value</th>\n        </tr>\n    </thead>\n    <tbody>\n    </tbody>\n</table>\n<slot></slot>`;\nconst INNER_STYLE$1 = `\n:host {\n    display: inline-block;\n}\nslot {\n    display: none;\n}\ntable {\n    border-collapse: collapse;\n}\ntable, th, td {\n    border: 1px solid gray;\n}\n#poll {\n    position: relative;\n    font-size: 0.9em;\n}\n#poll:after {\n    content: \"(poll)\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: -1;\n    opacity: 0.1;\n    font-family: monospace;\n    letter-spacing: 3px;\n    overflow: hidden;\n}\n.hint > th {\n    font-size: 0.5em;\n    font-family: monospace;\n    padding: 0 10px;\n    letter-spacing: 3px;\n    background-color: #AAA;\n    color: #666666;\n}\nth, td {\n    padding: 5px 10px;\n}\ntd {\n    text-align: center;\n}\nkbd {\n    display: inline-block;\n    background-color: #EEEEEE;\n    border-radius: 3px;\n    border: 1px solid #B4B4B4;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, .2), 0 2px 0 0 rgba(255, 255, 255, .7) inset;\n    color: #333333;\n    font-size: 0.85em;\n    font-weight: 700;\n    line-height: 1;\n    padding: 2px 4px;\n    white-space: nowrap;\n}\noutput {\n    font-family: monospace;\n    border-radius: 0.3em;\n    padding: 3px;\n}\n.flash {\n    animation: fadein 4s;\n}\n@keyframes fadein {\n    0%, 10% { background-color: rgba(0, 0, 255, 0.3); }\n    100% { background-color: rgba(0, 0, 255, 0); }\n}\n`;\n\nclass InputKeyPair\n{\n    constructor(keyName, keyEvent, scale)\n    {\n        this.keyName = keyName;\n        this.keyEvent = keyEvent;\n        this.scale = scale;\n\n        this.value = 0;\n    }\n\n    consumeKey()\n    {\n        this.value = 0;\n    }\n\n    updateKey(e, keyName)\n    {\n        // NOTE: This condition is only really used for parameterized key events.\n        if (keyName === this.keyName)\n        {\n            if (this.keyEvent)\n            {\n                if (this.keyEvent === e.event)\n                {\n                    this.value = e.value * this.scale;\n                    return true;\n                }\n            }\n            else\n            {\n                switch(e.event)\n                {\n                    case 'down':\n                        this.value = this.scale;\n                        return true;\n                    case 'up':\n                        this.value = 0;\n                        return true;\n                    default:\n                        this.value = e.value * this.scale;\n                        return;\n                }\n            }\n        }\n    }\n}\n\nconst NONE_POLL_TEXT = '✗';\nconst ACTIVE_POLL_TEXT = '✓';\n\nconst TEMPLATE_KEY$1 = Symbol('template');\nconst STYLE_KEY$1 = Symbol('style');\n\nconst POLL_WARNING_TIME = 3000;\n\nclass InputContext extends HTMLElement\n{\n    static get [TEMPLATE_KEY$1]()\n    {\n        let template = document.createElement('template');\n        template.innerHTML = INNER_HTML$1;\n        Object.defineProperty(this, TEMPLATE_KEY$1, { value: template });\n        return template;\n    }\n\n    static get [STYLE_KEY$1]()\n    {\n        let style = document.createElement('style');\n        style.innerHTML = INNER_STYLE$1;\n        Object.defineProperty(this, STYLE_KEY$1, { value: style });\n        return style;\n    }\n\n    /** @override */\n    static get observedAttributes()\n    {\n        return [\n            'for',\n            'strict',\n            'onattach',\n            'ondetach',\n            // ...listening for built-in attribs...\n            'id',\n            'class',\n        ];\n    }\n\n    constructor(inputMap = null)\n    {\n        super();\n\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.constructor[TEMPLATE_KEY$1].content.cloneNode(true));\n        this.shadowRoot.appendChild(this.constructor[STYLE_KEY$1].cloneNode(true));\n\n        this._onattach = null;\n        this._ondetach = null;\n\n        this._titleElement = this.shadowRoot.querySelector('#title');\n        this._pollElement = this.shadowRoot.querySelector('#poll');\n\n        this._tableBody = this.shadowRoot.querySelector('tbody');\n        this._children = this.shadowRoot.querySelector('slot');\n        this._tableInputs = {};\n\n        this._lastPollTime = 0;\n        this._pollWarningTimeoutHandle = 0;\n        this._animationFrameHandle = 0;\n\n        this._inputTarget = null;\n        this._inputMap = inputMap;\n        this._inputs = {};\n        this._inputKeys = {};\n        this._keys = {};\n\n        this.onInputEvent = this.onInputEvent.bind(this);\n        this.onAnimationFrame = this.onAnimationFrame.bind(this);\n\n        if (inputMap)\n        {\n            parseInputMapping(this, inputMap);\n        }\n    }\n\n    /** @override */\n    connectedCallback()\n    {\n        if (!this.hasAttribute('for')) this.setAttribute('for', '');\n\n        // Setup keys and inputs from the input mapping\n        if (!this._inputMap)\n        {\n            this._inputMap = {};\n\n            const childInputMap = InputKey.toInputMap(this._children.assignedNodes());\n            const inputMapSource = this.src;\n    \n            if (inputMapSource)\n            {\n                fetch(inputMapSource)\n                    .then(blob => blob.json())\n                    .then(data => {\n                        this._inputMap = { ...data, ...childInputMap };\n                        parseInputMapping(this, this._inputMap);\n                    });\n            }\n            else\n            {\n                this._inputMap = { ...childInputMap };\n                parseInputMapping(this, this._inputMap);\n            }\n        }\n\n        // Check to see if polling cause it is easy to forget it :P\n        this._lastPollTime = 0;\n        this._pollWarningTimeoutHandle = setTimeout(() => {\n            if (this._lastPollTime <= 0)\n            {\n                this._pollElement.textContent = NONE_POLL_TEXT;\n                console.warn('[INPUT] No input updated. Did you forget to poll() the input context?');\n            }\n            else\n            {\n                this._pollElement.textContent = ACTIVE_POLL_TEXT;\n            }\n        }, POLL_WARNING_TIME);\n\n        this._animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n    }\n\n    /** @override */\n    disconnectedCallback()\n    {\n        cancelAnimationFrame(this._animationFrameHandle);\n        clearTimeout(this._pollWarningTimeoutHandle);\n    }\n\n    /** @override */\n    attributeChangedCallback(attribute, prev, value)\n    {\n        switch(attribute)\n        {\n            case 'for':\n                let target;\n                if (value)\n                {\n                    target = document.getElementById(value);\n                }\n                else\n                {\n                    target = document.querySelector('display-port') || document.querySelector('canvas');\n                }\n\n                if (this._inputTarget)\n                {\n                    this.detach();\n                }\n\n                if (target)\n                {\n                    this.attach(target);\n                }\n                break;\n            // Event handlers...\n            case 'onattach':\n                this.onattach = new Function('event', `with(document){with(this){${value}}}`).bind(this);\n                break;\n            case 'ondetach':\n                this.ondetach = new Function('event', `with(document){with(this){${value}}}`).bind(this);\n                break;\n            // NOTE: For debugging purposes...\n            case 'id':\n            case 'class':\n                this._titleElement.innerHTML = `input-context${this.className ? '.' + this.className : ''}${this.hasAttribute('id') ? '#' + this.getAttribute('id') : ''}`;\n                break;\n        }\n    }\n\n    get src() { return this.getAttribute('src'); }\n    set src(value) { this.setAttribute('src', value); }\n\n    get for() { return this.getAttribute('for'); }\n    set for(value) { this.setAttribute('for', value); }\n\n    get strict() { return this.hasAttribute('strict'); }\n    set strict(value) { if (value) this.setAttribute('strict', ''); else this.removeAttribute('strict'); }\n\n    get auto() { return this.hasAttribute('auto'); }\n    set auto(value) { if (value) this.setAttribute('auto', ''); else this.removeAttribute('auto'); }\n\n    get onattach() { return this._onattach; }\n    set onattach(value)\n    {\n        if (this._onattach) this.removeEventListener('attach', this._onattach);\n        this._onattach = value;\n        if (this._onattach) this.addEventListener('attach', value);\n    }\n\n    get ondetach() { return this._ondetach; }\n    set ondetach(value)\n    {\n        if (this._ondetach) this.removeEventListener('detach', this._ondetach);\n        this._ondetach = value;\n        if (this._ondetach) this.addEventListener('detach', value);\n    }\n\n    attach(targetElement)\n    {\n        if (!targetElement)\n        {\n            throw new Error('Cannot attach input context to null.');\n        }\n\n        if (this._inputTarget)\n        {\n            if (this._inputTarget !== targetElement)\n            {\n                throw new Error('Input context already attached to another element.');\n            }\n            else\n            {\n                // It's already attached.\n                return this;\n            }\n        }\n\n        let target = targetElement;\n        if (target)\n        {\n            if (target.canvas)\n            {\n                Keyboard.addInputEventListener(target, this.onInputEvent);\n                Mouse.addInputEventListener(target.canvas, this.onInputEvent);\n            }\n            else\n            {\n                Keyboard.addInputEventListener(target, this.onInputEvent);\n                Mouse.addInputEventListener(target, this.onInputEvent);\n            }\n\n            this.dispatchEvent(new CustomEvent('attach', {\n                composed: true, bubbles: false, detail: { eventTarget: target, inputCallback: this.onInputEvent }\n            }));\n        }\n\n        this._inputTarget = target;\n        return this;\n    }\n\n    detach()\n    {\n        if (!this._inputTarget) return this;\n\n        let target = this._inputTarget;\n        this._inputTarget = null;\n\n        if (target.canvas)\n        {\n            Keyboard.removeInputEventListener(target, this.onInputEvent);\n            Mouse.removeInputEventListener(target.canvas, this.onInputEvent);\n        }\n        else\n        {\n            Keyboard.removeInputEventListener(target, this.onInputEvent);\n            Mouse.removeInputEventListener(target, this.onInputEvent);\n        }\n\n        this.dispatchEvent(new CustomEvent('detach', {\n            composed: true, bubbles: false, detail: { eventTarget: target, inputCallback: this.onInputEvent }\n        }));\n\n        return this;\n    }\n\n    poll()\n    {\n        this._lastPollTime = performance.now();\n\n        // Update all inputs to the current key's values.\n        for(let inputName in this._inputs)\n        {\n            let input = this._inputs[inputName];\n            let inputType = input.inputType;\n            switch(inputType)\n            {\n                case 'action':\n                    // Action should be any key value.\n                    let consumed = false;\n                    for(let inputKey of this._inputKeys[inputName])\n                    {\n                        let value = inputKey.value;\n                        if (value)\n                        {\n                            input.update(value, inputKey);\n                            inputKey.consumeKey();\n                            consumed = true;\n                            break;\n                        }\n                    }\n                    if (!consumed)\n                    {\n                        input.update(0, null);\n                    }\n                    break;\n                case 'range':\n                    // Range should be sum of keys.\n                    let value = 0;\n                    for(let inputKey of this._inputKeys[inputName])\n                    {\n                        value += inputKey.value;\n                    }\n                    input.update(value, null);\n                    break;\n                default:\n                    throw new Error('Unknown input type.');\n            }\n        }\n    }\n\n    onInputEvent(e)\n    {\n        let eventType = e.type;\n        switch(eventType)\n        {\n            case 'key':\n                {\n                    const keyName = e.device + ':' + e.key;\n                    if (keyName in this._keys)\n                    {\n                        let flag = false;\n                        for(let key of this._keys[keyName])\n                        {\n                            if (key.updateKey(e, keyName))\n                            {\n                                flag = true;\n                            }\n                        }\n                        if (flag)\n                        {\n                            return true;\n                        }\n                    }\n                }\n                break;\n            case 'pos':\n                {\n                    const params = [\n                        'x',\n                        'y',\n                        'dx',\n                        'dy'\n                    ];\n                    for(let param of params)\n                    {\n                        e.value = e[param];\n                        const keyName = e.device + ':' + e.key + '.' + param;\n                        if (keyName in this._keys)\n                        {\n                            let flag = false;\n                            for(let key of this._keys[keyName])\n                            {\n                                if (key.updateKey(e, keyName))\n                                {\n                                    flag = true;\n                                }\n                            }\n                            if (flag)\n                            {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                break;\n            default:\n                throw new Error(`Unknown input event type '${eventType}'.`);\n        }\n    }\n\n    onAnimationFrame(now)\n    {\n        this._animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n\n        // If enabled, do auto-polling\n        if (this.auto) this.poll();\n\n        // Update all inputs to the current key's values.\n        for(let inputName in this._inputs)\n        {\n            let input = this._inputs[inputName];\n            let result;\n            if (input.value)\n            {\n                result = Number(input.value).toFixed(2);\n            }\n            else\n            {\n                result = 0;\n            }\n            let element = this._tableInputs[inputName];\n            if (element.textContent != result)\n            {\n                element.textContent = result;\n                let parent = element.parentNode;\n                element.parentNode.removeChild(element);\n                parent.appendChild(element);\n            }\n        }\n    }\n\n    getInput(inputName)\n    {\n        if (inputName in this._inputs)\n        {\n            return this._inputs[inputName];\n        }\n        else if (!this.strict)\n        {\n            let result = new Input(inputName, 'range');\n            this._inputs[inputName] = result;\n            return result;\n        }\n        else\n        {\n            throw new Error(`Cannot find input with name '${inputName}'.`);\n        }\n    }\n\n    getInputValue(inputName)\n    {\n        if (inputName in this._inputs)\n        {\n            return this._inputs[inputName].value;\n        }\n        else if (!this.strict)\n        {\n            return 0;\n        }\n        else\n        {\n            throw new Error(`Cannot find input with name '${inputName}'.`);\n        }\n    }\n}\nwindow.customElements.define('input-context', InputContext);\n\nfunction parseInputMapping(inputContext, inputMapping)\n{\n    for(let inputName in inputMapping)\n    {\n        let inputOptions = inputMapping[inputName];\n        if (Array.isArray(inputOptions))\n        {\n            for(let inputOption of inputOptions)\n            {\n                parseInputOption(inputContext, inputName, inputOption);\n                if (typeof inputOption === 'string')\n                {\n                    inputOption = { key: inputOption, event: 'down' };\n                }\n                appendInputOption(inputContext, inputName, inputOption);\n            }\n        }\n        else\n        {\n            parseInputOption(inputContext, inputName, inputOptions);\n            if (typeof inputOptions === 'string')\n            {\n                inputOptions = { key: inputOptions, event: 'down' };\n            }\n            appendInputOption(inputContext, inputName, inputOptions);\n        }\n    }\n}\n\nfunction evaluateInputOptionType(inputOption)\n{\n    if (typeof inputOption === 'object')\n    {\n        if ('type' in inputOption)\n        {\n            return inputOption.type;\n        }\n        else if ('scale' in inputOption)\n        {\n            return 'range';\n        }\n        else if ('event' in inputOption)\n        {\n            return 'action';\n        }\n        else\n        {\n            throw new Error(`Missing 'scale' or 'event' for input option '${inputName}'.`);\n        }\n    }\n    else if (typeof inputOption === 'string')\n    {\n        return 'action';\n    }\n    else\n    {\n        throw new Error('Invalid type for input mapping option.');\n    }\n}\n\nfunction appendInputOption(inputContext, inputName, inputOption)\n{\n    let row = document.createElement('tr');\n    \n    // Name\n    {\n        let inputCell = document.createElement('td');\n        inputCell.textContent = inputName;\n        inputCell.classList.add('name');\n        row.appendChild(inputCell);\n    }\n\n    // Key\n    {\n        let keyCell = document.createElement('td');\n        keyCell.classList.add('key');\n        let keyLabel = document.createElement('kbd');\n        keyLabel.textContent = inputOption.key;\n        keyCell.appendChild(keyLabel);\n        row.appendChild(keyCell);\n    }\n\n    // Mods\n    {\n        let modCell = document.createElement('td');\n        let modSample = document.createElement('samp');\n        let inputType = evaluateInputOptionType(inputOption);\n        switch(inputType)\n        {\n            case 'action':\n                modSample.textContent = inputOption.event;\n                break;\n            case 'range':\n                modSample.textContent = Number(inputOption.scale).toFixed(2);\n                break;\n            default:\n                modSample.textContent = '<?>';\n        }\n        modCell.classList.add('mod');\n        modCell.appendChild(modSample);\n        row.appendChild(modCell);\n    }\n\n    // Value\n    if (!(inputName in inputContext._tableInputs))\n    {\n        let outputCell = document.createElement('td');\n        let outputValue = document.createElement('output');\n        outputValue.textContent = 0;\n        outputValue.classList.add('flash');\n        outputCell.classList.add('value');\n        outputCell.appendChild(outputValue);\n        row.appendChild(outputCell);\n        inputContext._tableInputs[inputName] = outputValue;\n    }\n    else\n    {\n        let outputCell = document.createElement('td');\n        outputCell.classList.add('value');\n        row.appendChild(outputCell);\n    }\n\n    inputContext._tableBody.appendChild(row);\n}\n\nfunction parseInputOption(inputContext, inputName, inputOption)\n{\n    let inputType = evaluateInputOptionType(inputOption);\n    switch(inputType)\n    {\n        case 'action':\n            if (typeof inputOption === 'string')\n            {\n                parseActionOption(inputContext, inputName, { key: inputOption, event: 'down' });\n            }\n            else\n            {\n                parseActionOption(inputContext, inputName, inputOption);\n            }\n            break;\n        case 'range':\n            parseRangeOption(inputContext, inputName, inputOption);\n            break;\n        default:\n            throw new Error(`Unknown input type '${inputType}'.`);\n    }\n}\n\nfunction parseRangeOption(inputContext, inputName, inputOption)\n{\n    const { key, scale } = inputOption;\n\n    // Update _inputs, _inputKeys, _keys\n    let input;\n    let inputKeys;\n    if (inputName in inputContext._inputs)\n    {\n        input = inputContext._inputs[inputName];\n        inputKeys = inputContext._inputKeys[inputName];\n\n        if (input.inputType !== 'range')\n        {\n            throw new Error(`Cannot register mismatched 'range' type input for '${input.inputType}' type input '${inputName}'.`);\n        }\n    }\n    else\n    {\n        input = new Input(inputName, 'range');\n        inputKeys = [];\n\n        inputContext._inputs[inputName] = input;\n        inputContext._inputKeys[inputName] = inputKeys;\n    }\n\n    let keys;\n    if (key in inputContext._keys)\n    {\n        keys = inputContext._keys[key];\n    }\n    else\n    {\n        keys = [];\n        inputContext._keys[key] = keys;\n    }\n    \n    let inputKey = new InputKeyPair(key, null, scale);\n    keys.push(inputKey);\n    inputKeys.push(inputKey);\n}\n\nfunction parseActionOption(inputContext, inputName, inputOption)\n{\n    const { key, event } = inputOption;\n\n    // Update _inputs, _inputKeys, _keys\n    let input;\n    let inputKeys;\n    if (inputName in inputContext._inputs)\n    {\n        input = inputContext._inputs[inputName];\n        inputKeys = inputContext._inputKeys[inputName];\n\n        if (input.inputType !== 'action')\n        {\n            throw new Error(`Cannot register mismatched 'action' type input for '${input.inputType}' type input '${inputName}'.`);\n        }\n    }\n    else\n    {\n        input = new Input(inputName, 'action');\n        inputKeys = [];\n\n        inputContext._inputs[inputName] = input;\n        inputContext._inputKeys[inputName] = inputKeys;\n    }\n\n    let keys;\n    if (key in inputContext._keys)\n    {\n        keys = inputContext._keys[key];\n    }\n    else\n    {\n        keys = [];\n        inputContext._keys[key] = keys;\n    }\n    \n    let inputKey = new InputKeyPair(key, event, 1);\n    keys.push(inputKey);\n    inputKeys.push(inputKey);\n}\n\nexport { InputContext as I, Keyboard as K, Mouse as M, InputKey as a };\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import { vec3 as vec3$1, quat, mat4, mat3 } from 'gl-matrix';\n\nconst ORIGIN = vec3$1.fromValues(0, 0, 0);\nconst XAXIS = vec3$1.fromValues(1, 0, 0);\nconst YAXIS = vec3$1.fromValues(0, 1, 0);\nconst ZAXIS = vec3$1.fromValues(0, 0, 1);\n\nfunction create()\n{\n    return {\n        translation: vec3$1.create(),\n        rotation: quat.create(),\n        scale: vec3$1.fromValues(1, 1, 1)\n    };\n}\n\n/** This is the INVERSE of gluLookAt(). */\nfunction lookAt(transform, target = ORIGIN)\n{\n    const result = vec3$1.create();\n    vec3$1.subtract(result, target, transform.position);\n    vec3$1.normalize(result, result);\n    \n    const dotProduct = vec3$1.dot(ZAXIS, result);\n    if (Math.abs(dotProduct - (-1)) < Number.EPSILON)\n    {\n        quat.set(transform.rotation, 0, 0, 1, Math.PI);\n        return transform;\n    }\n    if (Math.abs(dot - 1) < Number.EPSILON)\n    {\n        quat.set(transform.rotation, 0, 0, 0, 1);\n        return transform;\n    }\n\n    vec3$1.cross(result, ZAXIS, result);\n    vec3$1.normalize(result, result);\n    const halfAngle = Math.acos(dotProduct) / 2;\n    const sineAngle = Math.sin(halfAngle);\n    transform.rotation[0] = result[0] * sineAngle;\n    transform.rotation[1] = result[1] * sineAngle;\n    transform.rotation[2] = result[2] * sineAngle;\n    transform.rotation[3] = Math.cos(halfAngle);\n    return transform;\n}\n\nfunction getTransformationMatrix(transform, dst = mat4.create())\n{\n    return mat4.fromRotationTranslationScale(dst, transform.rotation, transform.translation, transform.scale);\n}\n\nfunction getForwardVector(transform, dst = vec3$1.create())\n{\n    vec3$1.transformQuat(dst, ZAXIS, transform.rotation);\n    return dst;\n}\n\nfunction getUpVector(transform, dst = vec3$1.create())\n{\n    vec3$1.transformQuat(dst, YAXIS, transform.rotation);\n    return dst;\n}\n\nfunction getRightVector(transform, dst = vec3$1.create())\n{\n    vec3$1.transformQuat(dst, XAXIS, transform.rotation);\n    return dst;\n}\n\nvar Transform = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ORIGIN: ORIGIN,\n    XAXIS: XAXIS,\n    YAXIS: YAXIS,\n    ZAXIS: ZAXIS,\n    create: create,\n    lookAt: lookAt,\n    getTransformationMatrix: getTransformationMatrix,\n    getForwardVector: getForwardVector,\n    getUpVector: getUpVector,\n    getRightVector: getRightVector\n});\n\nclass SceneGraph\n{\n    constructor()\n    {\n        this.root = this.createSceneNode(create(), null);\n    }\n    \n    update()\n    {\n        this.root.updateWorldMatrix();\n    }\n\n    createSceneNode(transform = create(), parent = this.root)\n    {\n        const result = {\n            sceneGraph: this,\n            transform,\n            localMatrix: mat4.create(),\n            worldMatrix: mat4.create(),\n            parent: null,\n            children: [],\n            setParent(sceneNode)\n            {\n                if (this.parent)\n                {\n                    const index = this.parent.children.indexOf(this);\n                    this.parent.children.splice(index, 1);\n                }\n\n                if (sceneNode)\n                {\n                    sceneNode.children.push(this);\n                }\n\n                this.parent = parent;\n                return this;\n            },\n            updateWorldMatrix(parentWorldMatrix)\n            {\n                // NOTE: The reason we don't just use local matrix is because of accumulating errors on matrix updates.\n                // Consider when you scale from 0 to 1 over time. It would get stuck at 0. Using a \"source\" of data where we\n                // recompute the matrix prevents this.\n                getTransformationMatrix(this.transform, this.localMatrix);\n\n                if (parentWorldMatrix)\n                {\n                    mat4.multiply(this.worldMatrix, parentWorldMatrix, this.localMatrix);\n                }\n                else\n                {\n                    mat4.copy(this.worldMatrix, this.localMatrix);\n                }\n\n                for(const child of this.children)\n                {\n                    child.updateWorldMatrix(this.worldMatrix);\n                }\n            }\n        };\n\n        if (parent)\n        {\n            result.setParent(parent);\n        }\n        return result;\n    }\n}\n\nfunction create$1(position, texcoord, normal, indices, color = undefined)\n{\n    if (!color)\n    {\n        const r = Math.random();\n        const g = Math.random();\n        const b = Math.random();\n        color = [];\n        for(let i = 0; i < position.length; i += 3)\n        {\n            color.push(r, g, b);\n        }\n    }\n\n    return {\n        position,\n        texcoord,\n        normal,\n        indices,\n        color,\n        elementSize: 3,\n        elementCount: indices.length,\n    };\n}\n\nfunction applyColor(r, g, b, geometry)\n{\n    for(let i = 0; i < geometry.color.length; i += 3)\n    {\n        geometry.color[i + 0] = r;\n        geometry.color[i + 1] = g;\n        geometry.color[i + 2] = b;\n    }\n    return geometry;\n}\n\nfunction applyTransformation(transformationMatrix, geometry)\n{\n    const position = geometry.position;\n    const normal = geometry.normal;\n\n    const inverseTransposeMatrix = mat3.create();\n    mat3.normalFromMat4(inverseTransposeMatrix, transformationMatrix);\n\n    const result = vec3$1.create();\n    for(let i = 0; i < position.length; i += 3)\n    {\n        result[0] = position[i + 0];\n        result[1] = position[i + 1];\n        result[2] = position[i + 2];\n        vec3$1.transformMat4(result, result, transformationMatrix);\n        position[i + 0] = result[0];\n        position[i + 1] = result[1];\n        position[i + 2] = result[2];\n\n        result[0] = normal[i + 0];\n        result[1] = normal[i + 1];\n        result[2] = normal[i + 2];\n        vec3$1.transformMat3(result, result, inverseTransposeMatrix);\n        normal[i + 0] = result[0];\n        normal[i + 1] = result[1];\n        normal[i + 2] = result[2];\n    }\n\n    return geometry;\n}\n\nfunction joinGeometry(...geometries)\n{\n    const position = [];\n    const texcoord = [];\n    const normal = [];\n    const indices = [];\n    const color = [];\n\n    let indexCount = 0;\n    for(const geometry of geometries)\n    {\n        position.push(...geometry.position);\n        texcoord.push(...geometry.texcoord);\n        normal.push(...geometry.normal);\n        color.push(...geometry.color);\n        indices.push(...geometry.indices.map((value) => value + indexCount));\n\n        indexCount += geometry.position.length / 3;\n    }\n\n    return create$1(position, texcoord, normal, indices, color);\n}\n\nfunction create$2(centered = false)\n{\n    const x = 0;\n    const y = 0;\n    const z = 0;\n    const width = 1;\n    const height = 1;\n    \n    let position;\n    if (centered)\n    {\n        const halfWidth = width * 0.5;\n        const halfHeight = height * 0.5;\n        position = [\n            x - halfWidth, y - halfHeight, z,\n            x + halfWidth, y - halfHeight, z,\n            x - halfWidth, y + halfHeight, z,\n            x + halfWidth, y + halfHeight, z,\n        ];\n    }\n    else\n    {\n        position = [\n            x, y, z,\n            x + width, y, z,\n            x, y + height, z,\n            x + width, y + height, z,\n        ];\n    }\n\n    const texcoord = [\n        0, 0,\n        1, 0,\n        0, 1,\n        1, 1,\n    ];\n    const normal = [\n        0, 0, 1,\n        0, 0, 1,\n        0, 0, 1,\n        0, 0, 1,\n    ];\n    const indices = [\n        0, 1, 2,\n        2, 1, 3,\n    ];\n    \n    return create$1(position, texcoord, normal, indices);\n}\n\nvar QuadGeometry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$2\n});\n\nfunction create$3(doubleSided = true)\n{\n    const frontPlane = create$2(true);\n    if (doubleSided)\n    {\n        const backPlane = create$2(true);\n        const transformationMatrix = mat4.fromYRotation(mat4.create(), Math.PI);\n        applyTransformation(transformationMatrix, backPlane);\n        applyColor(frontPlane.color[0], frontPlane.color[1], frontPlane.color[2], backPlane);\n        return joinGeometry(frontPlane, backPlane);\n    }\n    else\n    {\n        return frontPlane;\n    }\n}\n\nvar PlaneGeometry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$3\n});\n\nfunction create$4(front = true, back = true, top = true, bottom = true, left = true, right = true)\n{\n    const HALF_PI = Math.PI / 2;\n    const halfWidth = 0.5;\n    const halfHeight = 0.5;\n    const halfDepth = 0.5;\n\n    const transformationMatrix = mat4.create();\n    const faces = [];\n    \n    // Front\n    if (front)\n    {\n        const frontPlane = create$3(false);\n        mat4.fromTranslation(transformationMatrix, [0, 0, halfDepth]);\n        applyTransformation(transformationMatrix, frontPlane);\n        faces.push(frontPlane);\n    }\n    // Top\n    if (top)\n    {\n        const topPlane = create$3(false);\n        mat4.fromXRotation(transformationMatrix, -HALF_PI);\n        mat4.translate(transformationMatrix, transformationMatrix, [0, 0, halfHeight]);\n        applyTransformation(transformationMatrix, topPlane);\n        faces.push(topPlane);\n    }\n    // Back\n    if (back)\n    {\n        const backPlane = create$3(false);\n        mat4.fromYRotation(transformationMatrix, Math.PI);\n        mat4.translate(transformationMatrix, transformationMatrix, [0, 0, halfDepth]);\n        applyTransformation(transformationMatrix, backPlane);\n        faces.push(backPlane);\n    }\n    // Bottom\n    if (bottom)\n    {\n        const bottomPlane = create$3(false);\n        mat4.fromXRotation(transformationMatrix, HALF_PI);\n        mat4.translate(transformationMatrix, transformationMatrix, [0, 0, halfHeight]);\n        applyTransformation(transformationMatrix, bottomPlane);\n        faces.push(bottomPlane);\n    }\n    // Left\n    if (left)\n    {\n        const leftPlane = create$3(false);\n        mat4.fromYRotation(transformationMatrix, -HALF_PI);\n        mat4.translate(transformationMatrix, transformationMatrix, [0, 0, halfWidth]);\n        applyTransformation(transformationMatrix, leftPlane);\n        faces.push(leftPlane);\n    }\n    // Right\n    if (right)\n    {\n        const rightPlane = create$3(false);\n        mat4.fromYRotation(transformationMatrix, HALF_PI);\n        mat4.translate(transformationMatrix, transformationMatrix, [0, 0, halfWidth]);\n        applyTransformation(transformationMatrix, rightPlane);\n        faces.push(rightPlane);\n    }\n\n    return joinGeometry(...faces);\n}\n\nvar CubeGeometry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$4\n});\n\nfunction create$5()\n{\n    const size = 1;\n    const fifthSize = size * 0.2;\n\n    const transformationMatrix = mat4.create();\n\n    const topRung = create$4(true, true, true, true, false, true);\n    mat4.fromTranslation(transformationMatrix, [fifthSize / 2, fifthSize * 2, 0]);\n    mat4.scale(transformationMatrix, transformationMatrix, [fifthSize * 2, fifthSize, fifthSize]);\n    applyTransformation(transformationMatrix, topRung);\n    applyColor(topRung.color[0], topRung.color[1], topRung.color[2], topRung);\n    \n    const bottomRung = create$4(true, true, true, true, false, true);\n    mat4.fromScaling(transformationMatrix, [fifthSize, fifthSize, fifthSize]);\n    applyTransformation(transformationMatrix, bottomRung);\n    applyColor(topRung.color[0], topRung.color[1], topRung.color[2], bottomRung);\n\n    const leftBase = create$4(true, true, true, true, true, true);\n    mat4.fromTranslation(transformationMatrix, [-fifthSize, 0, 0]);\n    mat4.scale(transformationMatrix, transformationMatrix, [fifthSize, size, fifthSize]);\n    applyTransformation(transformationMatrix, leftBase);\n    applyColor(topRung.color[0], topRung.color[1], topRung.color[2], leftBase);\n\n    return joinGeometry(leftBase, topRung, bottomRung);\n}\n\nvar GlyphFGeometry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$5\n});\n\nvar Geometry3D = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Quad: QuadGeometry,\n    Plane: PlaneGeometry,\n    Cube: CubeGeometry,\n    GlyphF: GlyphFGeometry,\n    create: create$1,\n    applyColor: applyColor,\n    applyTransformation: applyTransformation,\n    joinGeometry: joinGeometry\n});\n\nfunction create$6(position, texcoord, indices, color = undefined)\n{\n    if (!color)\n    {\n        const r = Math.random();\n        const g = Math.random();\n        const b = Math.random();\n        color = [];\n        for(let i = 0; i < position.length; i += 3)\n        {\n            color.push(r, g, b);\n        }\n    }\n\n    return {\n        position,\n        texcoord,\n        indices,\n        color,\n        elementSize: 2,\n        elementCount: indices.length,\n    };\n}\n\nfunction applyTransformation2D(transformationMatrix, geometry)\n{\n    const position = geometry.position;\n\n    const result = vec2.create();\n    for(let i = 0; i < position.length; i += 2)\n    {\n        result[0] = position[i + 0];\n        result[1] = position[i + 1];\n        vec3.transformMat3(result, result, transformationMatrix);\n        position[i + 0] = result[0];\n        position[i + 1] = result[1];\n    }\n\n    return geometry;\n}\n\nfunction joinGeometry2D(...geometries)\n{\n    const position = [];\n    const texcoord = [];\n    const indices = [];\n    const color = [];\n\n    let indexCount = 0;\n    for(const geometry of geometries)\n    {\n        position.push(...geometry.position);\n        texcoord.push(...geometry.texcoord);\n        color.push(...geometry.color);\n\n        for(let i = 0; i < geometry.indices.length; ++i)\n        {\n            const index = geometry.indices[i];\n            indices.push(index + indexCount);\n        }\n\n        indexCount += geometry.position.length / 2;\n    }\n\n    return create$6(position, texcoord, indices, color);\n}\n\nfunction create$7(centered = false)\n{\n    const x = 0;\n    const y = 0;\n    const width = 1;\n    const height = 1;\n    \n    let position;\n    if (centered)\n    {\n        const halfWidth = width * 0.5;\n        const halfHeight = height * 0.5;\n        position = [\n            x - halfWidth, y - halfHeight,\n            x + halfWidth, y - halfHeight,\n            x - halfWidth, y + halfHeight,\n            x + halfWidth, y + halfHeight,\n        ];\n    }\n    else\n    {\n        position = [\n            x, y,\n            x + width, y,\n            x, y + height,\n            x + width, y + height,\n        ];\n    }\n\n    const texcoord = [\n        0, 0,\n        1, 0,\n        0, 1,\n        1, 1,\n    ];\n    const indices = [\n        0, 1, 2,\n        2, 1, 3,\n    ];\n    \n    return create$6(position, texcoord, indices);\n}\n\nvar Quad2DGeometry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$7\n});\n\nfunction create$8()\n{\n    const size = 1;\n    const fifthSize = size * 0.2;\n\n    const transformationMatrix = mat3.create();\n\n    const topRung = create$7();\n    mat3.fromTranslation(transformationMatrix, [fifthSize / 2, fifthSize * 2]);\n    mat3.scale(transformationMatrix, transformationMatrix, [fifthSize * 2, fifthSize]);\n    applyTransformation2D(transformationMatrix, topRung);\n    applyColor(topRung.color[0], topRung.color[1], topRung.color[2], topRung);\n    \n    const bottomRung = create$7();\n    mat3.fromScaling(transformationMatrix, [fifthSize, fifthSize]);\n    applyTransformation2D(transformationMatrix, bottomRung);\n    applyColor(topRung.color[0], topRung.color[1], topRung.color[2], bottomRung);\n\n    const leftBase = create$7();\n    mat3.fromTranslation(transformationMatrix, [-fifthSize, 0]);\n    mat3.scale(transformationMatrix, transformationMatrix, [fifthSize, size]);\n    applyTransformation2D(transformationMatrix, leftBase);\n    applyColor(topRung.color[0], topRung.color[1], topRung.color[2], leftBase);\n\n    return joinGeometry2D(leftBase, topRung, bottomRung);\n}\n\nvar GlyphF2DGeometry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$8\n});\n\nvar Geometry2D = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Quad2D: Quad2DGeometry,\n    GlyphF2D: GlyphF2DGeometry,\n    applyColor2D: applyColor,\n    create: create$6,\n    applyTransformation2D: applyTransformation2D,\n    joinGeometry2D: joinGeometry2D\n});\n\nfunction createShaderProgramInfo(gl, vertexShaderSource, fragmentShaderSource, sharedAttributeLayout = [])\n{\n    const vertexShaderHandle = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n    const fragmentShaderHandle = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n    const programHandle = createShaderProgram(gl, vertexShaderHandle, fragmentShaderHandle, sharedAttributeLayout);\n\n    // Don't forget to clean up the shaders! It's no longer needed...\n    gl.detachShader(programHandle, vertexShaderHandle);\n    gl.detachShader(programHandle, fragmentShaderHandle);\n    gl.deleteShader(vertexShaderHandle);\n    gl.deleteShader(fragmentShaderHandle);\n\n    // But do keep around the program :P\n    return {\n        handle: programHandle,\n        _gl: gl,\n        uniforms: createShaderProgramUniformSetters(gl, programHandle),\n        attributes: createShaderProgramAttributeSetters(gl, programHandle),\n        uniform(name, value)\n        {\n            // If the uniform exists, since it may have been optimized away by the compiler :(\n            if (name in this.uniforms)\n            {\n                this.uniforms[name](this._gl, value);\n            }\n            return this;\n        },\n        attribute(name, bufferInfo)\n        {\n            // If the attribute exists, since it may have been optimized away by the compiler :(\n            if (name in this.attributes)\n            {\n                this.attributes[name](this._gl, bufferInfo);\n            }\n            return this;\n        },\n        elementAttribute(bufferInfo)\n        {\n            this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, bufferInfo);\n            return this;\n        }\n    };\n}\n\nfunction createShader(gl, type, source)\n{\n    const shaderHandle = gl.createShader(type);\n    gl.shaderSource(shaderHandle, source);\n    gl.compileShader(shaderHandle);\n    if (!gl.getShaderParameter(shaderHandle, gl.COMPILE_STATUS))\n    {\n        const result = gl.getShaderInfoLog(shaderHandle);\n        gl.deleteShader(shaderHandle);\n        throw new Error(result);\n    }\n    return shaderHandle;\n}\n\nfunction createShaderProgram(gl, vertexShaderHandle, fragmentShaderHandle, sharedAttributeLayout = [])\n{\n    const programHandle = gl.createProgram();\n    gl.attachShader(programHandle, vertexShaderHandle);\n    gl.attachShader(programHandle, fragmentShaderHandle);\n\n    // Bind the attribute locations, (either this or use 'layout(location = ?)' in the shader)\n    // NOTE: Unfortunately, this must happen before program linking to take effect.\n    for(let i = 0; i < sharedAttributeLayout.length; ++i)\n    {\n        gl.bindAttribLocation(programHandle, i, sharedAttributeLayout[i]);\n    }\n\n    gl.linkProgram(programHandle);\n    if (!gl.getProgramParameter(programHandle, gl.LINK_STATUS))\n    {\n        const result = gl.getProgramInfoLog(programHandle);\n        gl.deleteProgram(programHandle);\n        throw new Error(result);\n    }\n    return programHandle;\n}\n\nfunction createShaderProgramAttributeSetters(gl, programHandle)\n{\n    const dst = {};\n    const attributeCount = gl.getProgramParameter(programHandle, gl.ACTIVE_ATTRIBUTES);\n    for(let i = 0; i < attributeCount; ++i)\n    {\n        const activeAttributeInfo = gl.getActiveAttrib(programHandle, i);\n        if (!activeAttributeInfo) break;\n        const attributeName = activeAttributeInfo.name;\n        const attributeIndex = gl.getAttribLocation(programHandle, attributeName);\n        dst[attributeName] = createShaderProgramAttributeSetter(attributeIndex);\n    }\n    return dst;\n}\n\nfunction createShaderProgramAttributeSetter(attributeIndex)\n{\n    const result = (function(attributeIndex, gl, bufferInfo) {\n        gl.enableVertexAttribArray(attributeIndex);\n        gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.handle);\n        gl.vertexAttribPointer(attributeIndex,\n            bufferInfo.size,\n            bufferInfo.type,\n            bufferInfo.normalize,\n            bufferInfo.stride,\n            bufferInfo.offset);\n    }).bind(null, attributeIndex);\n    result.location = attributeIndex;\n    return result;\n}\n\nfunction createShaderProgramUniformSetters(gl, programHandle)\n{\n    const dst = {};\n    const ctx = {\n        textureUnit: 0\n    };\n    const uniformCount = gl.getProgramParameter(programHandle, gl.ACTIVE_UNIFORMS);\n    for(let i = 0; i < uniformCount; ++i)\n    {\n        const activeUniformInfo = gl.getActiveUniform(programHandle, i);\n        if (!activeUniformInfo) break;\n\n        let uniformName = activeUniformInfo.name;\n        if (uniformName.substring(uniformName.length - 3) === '[0]')\n        {\n            uniformName = uniformName.substring(0, uniformName.length - 3);\n        }\n        const uniformSetter = createShaderProgramUniformSetter(gl, programHandle, activeUniformInfo, ctx);\n        dst[uniformName] = uniformSetter;\n    }\n    return dst;\n}\n\nfunction createShaderProgramUniformSetter(gl, programHandle, uniformInfo, ctx)\n{\n    const name = uniformInfo.name;\n    const location = gl.getUniformLocation(programHandle, name);\n    const type = uniformInfo.type;\n    const array = (uniformInfo.size > 1 && name.substring(name.length - 3) === '[0]');\n\n    const uniformTypeInfo = getUniformTypeInfo(gl, type);\n    if (!uniformTypeInfo)\n    {\n        throw new Error(`Unknown uniform type 0x${type.toString(16)}.`);\n    }\n\n    switch(type)\n    {\n        case gl.FLOAT:\n        case gl.INT:\n        case gl.BOOL:\n            return uniformTypeInfo.setter(location, array);\n        case gl.SAMPLER_2D:\n        case gl.SAMPLER_CUBE:\n            let textureUnit;\n            if (array)\n            {\n                textureUnit = [];\n                for(let i = 0; i < uniformInfo.size; ++i)\n                {\n                    textureUnit.push(ctx.textureUnit++);\n                }\n            }\n            else\n            {\n                textureUnit = ctx.textureUnit++;\n            }\n            return uniformTypeInfo.setter(location, array, textureUnit);\n        default:\n            return uniformTypeInfo.setter(location);\n    }\n}\n\nlet UNIFORM_TYPE_MAP = null;\nfunction getUniformTypeInfo(gl, type)\n{\n    if (UNIFORM_TYPE_MAP) return UNIFORM_TYPE_MAP[type];\n\n    // NOTE: Instead of setting the active texture index for the sampler, we instead designate\n    // active texture indices based on the program and number of sampler uniforms it has.\n    // This way, we simply pass the texture handle to the uniform setter and it will find\n    // the associated texture index by name. This is okay since we usually expect each\n    // program to have it's own unqiue active texture list, therefore we can take advantage\n    // of the reassignment of sampler uniforms to perform a lookup first instead.\n    // This does mean that when creating a texture, you don't need to specify which active\n    // texture index it should be in. This is handled by the shader program initialization,\n    // and is assigned when the program is used.\n    function samplerSetter(textureTarget, location, array = false, textureUnit = 0)\n    {\n        if (array && !Array.isArray(textureUnit)) throw new Error('Cannot create sampler array for non-array texture unit.');\n        const result = (array\n            ? function(location, textureUnits, textureTarget, gl, textures) {\n                gl.uniform1fv(location, textureUnits);\n                textures.forEach((texture, index) => {\n                    gl.activeTexture(gl.TEXTURE0 + textureUnits[index]);\n                    gl.bindTexture(textureTarget, texture);\n                });\n            }\n            : function(location, textureUnit, textureTarget, gl, texture) {\n                gl.uniform1i(location, textureUnit);\n                gl.activeTexture(gl.TEXTURE0 + textureUnit);\n                gl.bindTexture(textureTarget, texture);\n            })\n            .bind(null, location, textureUnit, textureTarget);\n        result.location = location;\n        return result;\n    }\n\n    UNIFORM_TYPE_MAP = {\n        [gl.FLOAT]: {\n            TypedArray: Float32Array,\n            size: 4,\n            setter(location, array = false)\n            {\n                const result = (array\n                    ? function(location, gl, value) { gl.uniform1fv(location, value); }\n                    : function(location, gl, value) { gl.uniform1f(location, value); })\n                    .bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.FLOAT_VEC2]: {\n            TypedArray: Float32Array,\n            size: 8,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform2fv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.FLOAT_VEC3]: {\n            TypedArray: Float32Array,\n            size: 12,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform3fv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.FLOAT_VEC4]: {\n            TypedArray: Float32Array,\n            size: 16,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform4fv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.INT]: {\n            TypedArray: Int32Array,\n            size: 4,\n            setter(location, array = false)\n            {\n                const result = (array\n                    ? function(location, gl, value) { gl.uniform1iv(location, value); }\n                    : function(location, gl, value) { gl.uniform1i(location, value); })\n                    .bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.INT_VEC2]: {\n            TypedArray: Int32Array,\n            size: 8,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform2iv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.INT_VEC3]: {\n            TypedArray: Int32Array,\n            size: 12,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform3iv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.INT_VEC4]: {\n            TypedArray: Int32Array,\n            size: 16,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform4iv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.BOOL]: {\n            TypedArray: Uint32Array,\n            size: 4,\n            setter(location, array = false)\n            {\n                const result = (array\n                    ? function(location, gl, value) { gl.uniform1iv(location, value); }\n                    : function(location, gl, value) { gl.uniform1i(location, value); })\n                    .bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.BOOL_VEC2]: {\n            TypedArray: Uint32Array,\n            size: 8,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform2iv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.BOOL_VEC3]: {\n            TypedArray: Uint32Array,\n            size: 12,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform3iv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.BOOL_VEC4]: {\n            TypedArray: Uint32Array,\n            size: 16,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform4iv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.FLOAT_MAT2]: {\n            TypedArray: Float32Array,\n            size: 16,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniformMatrix2fv(location, false, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.FLOAT_MAT3]: {\n            TypedArray: Float32Array,\n            size: 36,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniformMatrix3fv(location, false, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.FLOAT_MAT4]: {\n            TypedArray: Float32Array,\n            size: 64,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniformMatrix4fv(location, false, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.SAMPLER_2D]: {\n            TypedArray: null,\n            size: 0,\n            setter: samplerSetter.bind(null, gl.TEXTURE_2D)\n        },\n        [gl.SAMPLER_CUBE]: {\n            TypedArray: null,\n            size: 0,\n            setter: samplerSetter.bind(null, gl.TEXTURE_CUBE)\n        },\n        // UNSIGNED_INT\n        // UNSIGNED_INT_VEC2\n        // UNSIGNED_INT_VEC3\n        // UNSIGNED_INT_VEC4\n        // FLOAT_MAT2x3\n        // FLOAT_MAT2x4\n        // FLOAT_MAT3x2\n        // FLOAT_MAT3x4\n        // FLOAT_MAT4x2\n        // FLOAT_MAT4x3\n        // SAMPLER_3D\n        // SAMPLER_2D_SHADOW\n        // SAMPLER_2D_ARRAY\n        // SAMPLER_2D_ARRAY_SHADOW\n        // INT_SAMPLER_2D\n        // INT_SAMPLER_3D\n        // INT_SAMPLER_CUBE\n        // INT_SAMPLER_2D_ARRAY\n        // UNSIGNED_INT_SAMPLER_2D\n        // UNSIGNED_INT_SAMPLER_3D\n        // UNSIGNED_INT_SAMPLER_CUBE\n        // UNSIGNED_INT_SAMPLER_2D_ARRAY\n    };\n    return UNIFORM_TYPE_MAP[type];\n}\n\nfunction createBufferInfo(gl, type, data, size, normalize = false, stride = 0, offset = 0, bufferTarget = gl.ARRAY_BUFFER, usage = gl.STATIC_DRAW)\n{\n    const bufferHandle = gl.createBuffer();\n\n    const bufferTypeInfo = getBufferTypeInfo(gl, type);\n    if (!bufferTypeInfo) throw new Error(`Unknown uniform type 0x${type.toString(16)}.`);    \n\n    if (data instanceof bufferTypeInfo.TypedArray)\n    {\n        gl.bindBuffer(bufferTarget, bufferHandle);\n        gl.bufferData(bufferTarget, data, usage);\n    }\n    else if (Array.isArray(data))\n    {\n        data = new bufferTypeInfo.TypedArray(data);\n        gl.bindBuffer(bufferTarget, bufferHandle);\n        gl.bufferData(bufferTarget, data, usage);\n    }\n    else if (typeof data === 'number')\n    {\n        gl.bindBuffer(bufferTarget, bufferHandle);\n        gl.bufferData(bufferTarget, data, usage);\n    }\n    else\n    {\n        throw new Error(`Unknown buffer data type - can only be a TypedArray, an Array, or a number.`);\n    }\n\n    return {\n        handle: bufferHandle,\n        size,\n        type,\n        normalize,\n        stride,\n        offset,\n        /** TODO: It binds the buffer to ARRAY_BUFFER, does this still work for ELEMENT_ARRAY_BUFFER? */\n        updateData(gl, data, offset = 0, usage = gl.STATIC_DRAW)\n        {\n            // NOTE: All vertex array objects should NOT be bound. Otherwise, it will cause weird errors.\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.handle);\n            const bufferTypeInfo = getBufferTypeInfo(gl, type);\n            if (!(data instanceof bufferTypeInfo.TypedArray))\n            {\n                data = new bufferTypeInfo.TypedArray(data);\n            }\n\n            if (offset > 0)\n            {\n                gl.bufferSubData(gl.ARRAY_BUFFER, offset, data);\n            }\n            else\n            {\n                gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n            }\n        }\n    };\n}\n\nfunction createElementBufferInfo(gl, type, data, stride = 0, offset = 0, usage = gl.STATIC_DRAW)\n{\n    // NOTE: Element buffer arrays can only be UNSIGNED bytes/shorts/ints.\n    return createBufferInfo(gl, type, data, 1, false, stride, offset, gl.ELEMENT_ARRAY_BUFFER, usage);\n}\n\nlet BUFFER_TYPE_MAP = null;\nfunction getBufferTypeInfo(gl, type)\n{\n    if (BUFFER_TYPE_MAP) return BUFFER_TYPE_MAP[type];\n\n    BUFFER_TYPE_MAP = {\n        [gl.BYTE]: {\n            TypedArray: Int8Array,\n            size: 1\n        },\n        [gl.SHORT]: {\n            TypedArray: Int16Array,\n            size: 2\n        },\n        [gl.UNSIGNED_BYTE]: {\n            TypedArray: Uint8Array,\n            size: 1\n        },\n        [gl.UNSIGNED_SHORT]: {\n            TypedArray: Uint16Array,\n            size: 2\n        },\n        [gl.FLOAT]: {\n            TypedArray: Float32Array,\n            size: 4\n        },\n        // HALF_FLOAT\n    };\n\n    return BUFFER_TYPE_MAP[type];\n}\n\nfunction createVertexArrayInfo(gl, sharedAttributeLayout = [])\n{\n    const vertexArrayHandle = gl.createVertexArray();\n\n    const attributes = {};\n    for(let i = 0; i < sharedAttributeLayout.length; ++i)\n    {\n        attributes[sharedAttributeLayout[i]] = {\n            location: i,\n            setter: createShaderProgramAttributeSetter(i)\n        };\n    }\n\n    return {\n        handle: vertexArrayHandle,\n        attributes: attributes,\n        _gl: gl,\n        elementBuffer: null,\n        elementType: null,\n        elementCount: 0,\n        attributeBuffers: {},\n        setElementCount(count)\n        {\n            this.elementCount = count;\n            return this;\n        },\n        elementAttribute(bufferInfo)\n        {\n            this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, bufferInfo.handle);\n\n            const bufferTypeInfo = getBufferTypeInfo(this._gl, bufferInfo.type);\n            // NOTE: Number of bytes in buffer divided by the number of bytes of element type\n            this.elementCount = this._gl.getBufferParameter(this._gl.ELEMENT_ARRAY_BUFFER, this._gl.BUFFER_SIZE) / bufferTypeInfo.size;\n            this.elementBuffer = bufferInfo;\n            this.elementType = bufferInfo.type;\n            return this;\n        },\n        sharedAttribute(name, bufferInfo)\n        {\n            if (name in this.attributes)\n            {\n                this.attributes[name].setter(this._gl, bufferInfo);\n            }\n            this.attributeBuffers[name] = bufferInfo;\n            return this;\n        },\n        programAttribute(name, bufferInfo, ...programInfos)\n        {\n            for(const program of programInfos)\n            {\n                program.attribute(name, bufferInfo);\n            }\n            this.attributeBuffers[name] = bufferInfo;\n            return this;\n        }\n    };\n}\n\nfunction createTextureInfo(gl)\n{\n    const textureHandle = gl.createTexture();\n    return {\n        handle: textureHandle\n    };\n}\n\nfunction createDrawInfo(programInfo, vertexArrayInfo, uniforms, drawArrayOffset = 0, drawMode = null)\n{\n    return {\n        programInfo,\n        vertexArrayInfo,\n        uniforms,\n        drawArrayOffset,\n        drawMode\n    };\n}\n\nfunction draw(gl, drawInfos, sharedUniforms = {})\n{\n    for(const drawInfo of drawInfos)\n    {\n        const programInfo = drawInfo.programInfo;\n        const vertexArrayInfo = drawInfo.vertexArrayInfo;\n        const uniforms = drawInfo.uniforms;\n        const drawArrayOffset = drawInfo.drawArrayOffset;\n        const drawMode = drawInfo.drawMode || gl.TRIANGLES;\n\n        // Prepare program...\n        gl.useProgram(programInfo.handle);\n\n        // Prepare vertex array...\n        gl.bindVertexArray(vertexArrayInfo.handle);\n\n        // Prepare shared uniforms...\n        for(const [name, value] of Object.entries(sharedUniforms))\n        {\n            programInfo.uniform(name, value);\n        }\n\n        // Prepare uniforms...\n        for(const [name, value] of Object.entries(uniforms))\n        {\n            programInfo.uniform(name, value);\n        }\n\n        // Depends on buffers in attributes...\n        if (vertexArrayInfo.elementBuffer)\n        {\n            // NOTE: The offset is in BYTES, whereas drawArrayOffset is the number of elements.\n            gl.drawElements(drawMode, vertexArrayInfo.elementCount, vertexArrayInfo.elementType, drawArrayOffset * vertexArrayInfo.elementBuffer.size);\n        }\n        else\n        {\n            gl.drawArrays(drawMode, drawArrayOffset, vertexArrayInfo.elementCount);\n        }\n    }\n}\n\nexport { Geometry3D as G, SceneGraph as S, Transform as T, Geometry2D as a, createDrawInfo as b, createBufferInfo as c, createElementBufferInfo as d, createShader as e, createShaderProgram as f, createShaderProgramAttributeSetter as g, createShaderProgramAttributeSetters as h, createShaderProgramInfo as i, createShaderProgramUniformSetter as j, createShaderProgramUniformSetters as k, createTextureInfo as l, createVertexArrayInfo as m, draw as n, getBufferTypeInfo as o, getUniformTypeInfo as p };\n","async function loadImage(filepath, opts)\n{\n    return new Promise((resolve, reject) => {\n        let img = new Image();\n        img.addEventListener('load', () => {\n            resolve(img);\n        });\n        img.addEventListener('error', ev => {\n            reject(ev);\n        });\n        img.src = filepath;\n    });\n}\n\nvar ImageLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadImage: loadImage\n});\n\nasync function loadText(filepath, opts)\n{\n    let result = await fetch(filepath);\n    return result.text();\n}\n\nvar TextLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadText: loadText\n});\n\nasync function loadBytes(filepath, opts)\n{\n    let result = await fetch(filepath);\n    let buffer = await result.arrayBuffer();\n    return buffer;\n}\n\nvar ByteLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadBytes: loadBytes\n});\n\nasync function loadJSON(filepath, opts)\n{\n    let result = await fetch(filepath);\n    let json = await result.json();\n    return json;\n}\n\nvar JSONLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadJSON: loadJSON\n});\n\nasync function loadOBJ(filepath, opts)\n{\n    let result = await fetch(filepath);\n    let string = await result.text();\n    {\n        // console.log('ORIGINAL');\n        const attempts = 10;\n        for(let i = 0; i < attempts; ++i)\n        {\n            let then = performance.now();\n            parse(string);\n            let now = performance.now();\n        }\n        // console.log(sum / attempts);\n    }\n    {\n        // console.log('UPDATE');\n        const attempts = 10;\n        for(let i = 0; i < attempts; ++i)\n        {\n            let then = performance.now();\n            parse2(string);\n            let now = performance.now();\n        }\n        // console.log(sum / attempts);\n    }\n    return parse2(string);\n}\n\nfunction parse2(string)\n{\n    const vertexList = [];\n    const texcoordList = [];\n    const normalList = [];\n\n    const vertexIndices = [];\n    const texcoordIndices = [];\n    const normalIndices = [];\n\n    // # comments\n    const commentPattern = /^#.*/g;\n    // v float float float\n    const vertexPattern = /v\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/g;\n    // vn float float float\n    const normalPattern = /vn\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/g;\n    // vt float float float\n    const texcoordPattern = /vt\\s+(\\S+)\\s+(\\S+)/g;\n    // f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n    const facePattern = /f\\s+(([^\\/\\s]*)\\/([^\\/\\s]*)\\/?([^\\/\\s]*))\\s+(([^\\/\\s]*)\\/([^\\/\\s]*)\\/?([^\\/\\s]*))\\s+(([^\\/\\s]*)\\/([^\\/\\s]*)\\/?([^\\/\\s]*))(\\s+(([^\\/\\s]*)\\/([^\\/\\s]*)\\/?([^\\/\\s]*)))?/g;\n    // f float float float\n    const faceVertexPattern = /f\\s+([^\\/\\s]+)\\s+([^\\/\\s]+)\\s+([^\\/\\s]+)/g;\n\n    let quad = false;\n    let result = null;\n    let x, y, z, w;\n\n    // Remove all comments\n    string = string.replace(commentPattern, '');\n\n    // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n    while ((result = vertexPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        z = Number.parseFloat(result[3]);\n        vertexList.push(x);\n        vertexList.push(y);\n        vertexList.push(z);\n    }\n\n    // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n    while ((result = normalPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        z = Number.parseFloat(result[3]);\n        normalList.push(x);\n        normalList.push(y);\n        normalList.push(z);\n    }\n\n    // [\"vt 1.0 2.0\", \"1.0\", \"2.0\"]\n    while ((result = texcoordPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        texcoordList.push(x);\n        texcoordList.push(y);\n    }\n\n    // [\"f 1/1/1 2/2/2 3/3/3\", \"1/1/1\", \"1\", \"1\", \"1\", \"2/2/2\", \"2\", \"2\", \"2\", \"3/3/3\", \"3\", \"3\", \"3\", \"4/4/4\", \"4\", \"4\", \"4\"]\n    while ((result = facePattern.exec(string)) != null) {\n        // Vertex indices\n        x = Number.parseInt(result[2]);\n        if (Number.isNaN(x)) x = 1;\n        y = Number.parseInt(result[6]);\n        if (Number.isNaN(y)) y = 1;\n        z = Number.parseInt(result[10]);\n        if (Number.isNaN(z)) z = 1;\n        vertexIndices.push(x);\n        vertexIndices.push(y);\n        vertexIndices.push(z);\n\n        // Normal indices\n        x = Number.parseInt(result[4]);\n        if (Number.isNaN(x))\n        {\n            // No UVs.\n            x = Number.parseInt(result[3]);\n            y = Number.parseInt(result[7]);\n            z = Number.parseInt(result[11]);\n            normalIndices.push(x);\n            normalIndices.push(y);\n            normalIndices.push(z);\n\n            texcoordIndices.push(1);\n            texcoordIndices.push(1);\n            texcoordIndices.push(1);\n        }\n        else\n        {\n            // Maybe UVs.\n            y = Number.parseInt(result[8]);\n            if (Number.isNaN(y)) y = 1;\n            z = Number.parseInt(result[12]);\n            if (Number.isNaN(z)) z = 1;\n            normalIndices.push(x);\n            normalIndices.push(y);\n            normalIndices.push(z);\n\n            // UV indices\n            x = Number.parseInt(result[3]);\n            if (Number.isNaN(x)) x = 1;\n            y = Number.parseInt(result[7]);\n            if (Number.isNaN(y)) y = 1;\n            z = Number.parseInt(result[11]);\n            if (Number.isNaN(z)) z = 1;\n            texcoordIndices.push(x);\n            texcoordIndices.push(y);\n            texcoordIndices.push(z);\n        }\n\n        // Quad face\n        if (typeof result[13] !== 'undefined') {\n            \n            // Vertex indices\n            w = Number.parseInt(result[15]);\n            if (Number.isNaN(w)) w = 1;\n            vertexIndices.push(w);\n\n            // Normal indices\n            w = Number.parseInt(result[17]);\n            if (Number.isNaN(w))\n            {\n                // No UVs.\n                w = Number.parseInt(result[16]);\n                normalIndices.push(w);\n                texcoordIndices.push(1);\n            }\n            else\n            {\n                // Maybe UVs.\n                normalIndices.push(w);\n\n                w = Number.parseInt(result[16]);\n                texcoordIndices.push(w);\n            }\n\n            quad = true;\n        }\n    }\n\n    // [\"f 1 2 3 4\", \"1\", \"2\", \"3\", \"4\"]\n    while ((result = faceVertexPattern.exec(string)) != null) {\n        // Vertex indices\n        x = Number.parseInt(result[2]);\n        y = Number.parseInt(result[6]);\n        z = Number.parseInt(result[10]);\n        vertexIndices.push(x);\n        vertexIndices.push(y);\n        vertexIndices.push(z);\n\n        // UV indices\n        texcoordIndices.push(1);\n        texcoordIndices.push(1);\n        texcoordIndices.push(1);\n\n        // Normal indices\n        normalIndices.push(1);\n        normalIndices.push(1);\n        normalIndices.push(1);\n\n        // Quad face\n        if (typeof result[13] !== 'undefined') {\n\n            // Vertex indices\n            w = Number.parseInt(result[14]);\n            vertexIndices.push(w);\n\n            // UV indices\n            texcoordIndices.push(1);\n            // Normal indices\n            normalIndices.push(1);\n\n            quad = true;\n        }\n    }\n\n    let index, size;\n\n    size = vertexIndices.length;\n    const positions = new Float32Array(size * 3);\n    for (let i = 0; i < size; ++i) {\n        index = vertexIndices[i] - 1;\n        positions[i * 3 + 0] = vertexList[index * 3 + 0];\n        positions[i * 3 + 1] = vertexList[index * 3 + 1];\n        positions[i * 3 + 2] = vertexList[index * 3 + 2];\n    }\n\n    size = texcoordIndices.length;\n    const texcoords = new Float32Array(size * 2);\n    for (let i = 0; i < size; ++i) {\n        index = texcoordIndices[i] - 1;\n        texcoords[i * 2 + 0] = texcoordList[index * 2 + 0];\n        texcoords[i * 2 + 1] = texcoordList[index * 2 + 1];\n    }\n\n    size = normalIndices.length;\n    const normals = new Float32Array(size * 3);\n    for (let i = 0; i < size; ++i) {\n        index = normalIndices[i] - 1;\n        normals[i * 3 + 0] = normalList[index * 3 + 0];\n        normals[i * 3 + 1] = normalList[index * 3 + 1];\n        normals[i * 3 + 2] = normalList[index * 3 + 2];\n    }\n\n    // Must be either unsigned short or unsigned byte.\n    size = vertexIndices.length;\n    const indices = new Uint16Array(size);\n    for (let i = 0; i < size; ++i) {\n        indices[i] = i;\n    }\n\n    if (quad) {\n        console.warn('WebGL does not support quad faces, only triangles.');\n    }\n\n    return {\n        positions,\n        texcoords,\n        normals,\n        indices,\n    };\n}\n\nfunction parse(string)\n{\n    const vertexList = [];\n    const texcoordList = [];\n    const normalList = [];\n\n    const vertexIndices = [];\n    const texcoordIndices = [];\n    const normalIndices = [];\n\n    // # comments\n    const commentPattern = /^#.*/g;\n    // v float float float\n    const vertexPattern = /v( +[\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)/g;\n    // vn float float float\n    const normalPattern = /vn( +[\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)/g;\n    // vt float float float\n    const texcoordPattern = /vt( +[\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)/g;\n    // f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n    const facePattern = /f( +([\\d]*)\\/([\\d]*)\\/([\\d]*))( ([\\d]*)\\/([\\d]*)\\/([\\d]*))( ([\\d]*)\\/([\\d]*)\\/([\\d]*))( ([\\d]*)\\/([\\d]*)\\/([\\d]*))?/g;\n    // f float float float\n    const faceVertexPattern = /f( +[\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)/g;\n\n    let quad = false;\n    let result = null;\n    let x, y, z, w;\n\n    // Remove all comments\n    string = string.replace(commentPattern, '');\n\n    // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n    while ((result = vertexPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        z = Number.parseFloat(result[3]);\n        vertexList.push(x);\n        vertexList.push(y);\n        vertexList.push(z);\n    }\n\n    // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n    while ((result = normalPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        z = Number.parseFloat(result[3]);\n        normalList.push(x);\n        normalList.push(y);\n        normalList.push(z);\n    }\n\n    // [\"vt 1.0 2.0\", \"1.0\", \"2.0\"]\n    while ((result = texcoordPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        texcoordList.push(x);\n        texcoordList.push(y);\n    }\n\n    // [\"f 1/1/1 2/2/2 3/3/3\", \"1/1/1\", \"1\", \"1\", \"1\", \"2/2/2\", \"2\", \"2\", \"2\", \"3/3/3\", \"3\", \"3\", \"3\", \"4/4/4\", \"4\", \"4\", \"4\"]\n    while ((result = facePattern.exec(string)) != null) {\n        // Vertex indices\n        x = Number.parseInt(result[2]);\n        if (Number.isNaN(x)) x = 1;\n        y = Number.parseInt(result[6]);\n        if (Number.isNaN(y)) y = 1;\n        z = Number.parseInt(result[10]);\n        if (Number.isNaN(z)) z = 1;\n        vertexIndices.push(x);\n        vertexIndices.push(y);\n        vertexIndices.push(z);\n\n        // UV indices\n        x = Number.parseInt(result[3]);\n        if (Number.isNaN(x)) x = 1;\n        y = Number.parseInt(result[7]);\n        if (Number.isNaN(y)) y = 1;\n        z = Number.parseInt(result[11]);\n        if (Number.isNaN(z)) z = 1;\n        texcoordIndices.push(x);\n        texcoordIndices.push(y);\n        texcoordIndices.push(z);\n\n        // Normal indices\n        x = Number.parseInt(result[4]);\n        if (Number.isNaN(x)) x = 1;\n        y = Number.parseInt(result[8]);\n        if (Number.isNaN(y)) y = 1;\n        z = Number.parseInt(result[12]);\n        if (Number.isNaN(z)) z = 1;\n        normalIndices.push(x);\n        normalIndices.push(y);\n        normalIndices.push(z);\n\n        // Quad face\n        if (typeof result[13] !== 'undefined') {\n            \n            // Vertex indices\n            w = Number.parseInt(result[14]);\n            if (Number.isNaN(w)) w = 1;\n            vertexIndices.push(w);\n\n            // UV indices\n            w = Number.parseInt(result[15]);\n            if (Number.isNaN(w)) w = 1;\n            texcoordIndices.push(w);\n\n            // Normal indices\n            w = Number.parseInt(result[16]);\n            if (Number.isNaN(w)) w = 1;\n            normalIndices.push(w);\n\n            quad = true;\n        }\n    }\n\n    // [\"f 1 2 3 4\", \"1\", \"2\", \"3\", \"4\"]\n    while ((result = faceVertexPattern.exec(string)) != null) {\n        // Vertex indices\n        x = Number.parseInt(result[2]);\n        y = Number.parseInt(result[6]);\n        z = Number.parseInt(result[10]);\n        vertexIndices.push(x);\n        vertexIndices.push(y);\n        vertexIndices.push(z);\n\n        // UV indices\n        texcoordIndices.push(1);\n        texcoordIndices.push(1);\n        texcoordIndices.push(1);\n\n        // Normal indices\n        normalIndices.push(1);\n        normalIndices.push(1);\n        normalIndices.push(1);\n\n        // Quad face\n        if (typeof result[13] !== 'undefined') {\n\n            // Vertex indices\n            w = Number.parseInt(result[14]);\n            vertexIndices.push(w);\n\n            // UV indices\n            texcoordIndices.push(1);\n            // Normal indices\n            normalIndices.push(1);\n\n            quad = true;\n        }\n    }\n\n    let index, size;\n\n    size = vertexIndices.length;\n    const positions = new Float32Array(size * 3);\n    for (let i = 0; i < size; ++i) {\n        index = vertexIndices[i] - 1;\n        positions[i * 3 + 0] = vertexList[index * 3 + 0];\n        positions[i * 3 + 1] = vertexList[index * 3 + 1];\n        positions[i * 3 + 2] = vertexList[index * 3 + 2];\n    }\n\n    size = texcoordIndices.length;\n    const texcoords = new Float32Array(size * 2);\n    for (let i = 0; i < size; ++i) {\n        index = texcoordIndices[i] - 1;\n        texcoords[i * 2 + 0] = texcoordList[index * 2 + 0];\n        texcoords[i * 2 + 1] = texcoordList[index * 2 + 1];\n    }\n\n    size = normalIndices.length;\n    const normals = new Float32Array(size * 3);\n    for (let i = 0; i < size; ++i) {\n        index = normalIndices[i] - 1;\n        normals[i * 3 + 0] = normalList[index * 3 + 0];\n        normals[i * 3 + 1] = normalList[index * 3 + 1];\n        normals[i * 3 + 2] = normalList[index * 3 + 2];\n    }\n\n    // Must be either unsigned short or unsigned byte.\n    size = vertexIndices.length;\n    const indices = new Uint16Array(size);\n    for (let i = 0; i < size; ++i) {\n        indices[i] = i;\n    }\n\n    if (quad) {\n        console.warn('WebGL does not support quad faces, only triangles.');\n    }\n\n    return {\n        positions,\n        texcoords,\n        normals,\n        indices,\n    };\n}\n\nvar OBJLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadOBJ: loadOBJ\n});\n\nlet ASSET_LOADERS = {};\n\ndefineAssetLoader('image', loadImage);\ndefineAssetLoader('text', loadText);\ndefineAssetLoader('json', loadJSON);\ndefineAssetLoader('bytes', loadBytes);\ndefineAssetLoader('obj', loadOBJ);\n\nfunction defineAssetLoader(assetType, assetLoader)\n{\n    ASSET_LOADERS[assetType] = assetLoader;\n}\n\nfunction getAssetLoader(assetType)\n{\n    if (assetType in ASSET_LOADERS)\n    {\n        return ASSET_LOADERS[assetType];\n    }\n    else\n    {\n        throw new Error(`Unknown asset type '${assetType}'.`);\n    }\n}\n\nasync function loadAssetMap(assetMap, assetParentPath = '.')\n{\n    let result = {};\n    for(let assetName of Object.keys(assetMap))\n    {\n        let entry = assetMap[assetName];\n        if (typeof entry === 'string')\n        {\n            result[assetName] = await loadAsset(entry, undefined, assetParentPath);\n        }\n        else if (typeof entry === 'object')\n        {\n            if (!('src' in entry))\n            {\n                throw new Error(`Missing required field 'src' for entry in asset map.`);\n            }\n\n            if ('name' in entry && entry.name !== assetName)\n            {\n                throw new Error(`Cannot redefine name for asset '${assetName}' for entry in asset map.`);\n            }\n\n            result[assetName] = await loadAsset(entry.src, entry, assetParentPath);\n        }\n        else\n        {\n            throw new Error('Unknown entry type in asset map.');\n        }\n    }\n    return result;\n}\n\nasync function loadAssetList(assetList, assetParentPath = '.')\n{\n    let result = {};\n    for(let entry of assetList)\n    {\n        if (typeof entry === 'string')\n        {\n            result[entry] = await loadAsset(entry, undefined, assetParentPath);\n        }\n        else if (typeof entry === 'object')\n        {\n            if (!('src' in entry))\n            {\n                throw new Error(`Missing required field 'src' for entry in asset list.`);\n            }\n\n            result['name' in entry ? entry.name : entry.src] = await loadAsset(entry.src, entry, assetParentPath);\n        }\n        else\n        {\n            throw new Error('Unknown entry type in asset list.');\n        }\n    }\n    return result;\n}\n\nasync function loadAsset(assetSrc, assetOpts = {}, assetParentPath = '.')\n{\n    if (assetSrc.indexOf(':') < 0)\n    {\n        throw new Error('Missing type for asset source.');\n    }\n\n    let [assetType, assetPath] = assetSrc.split(':');\n    let assetLoader = getAssetLoader(assetType);\n    return await assetLoader(assetParentPath + '/' + assetPath, assetOpts);\n}\n\nvar AssetLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defineAssetLoader: defineAssetLoader,\n    getAssetLoader: getAssetLoader,\n    loadAssetMap: loadAssetMap,\n    loadAssetList: loadAssetList,\n    loadAsset: loadAsset\n});\n\n// SOURCE: https://noonat.github.io/intersect/#aabb-vs-aabb\n\n/* Surface contacts are considered intersections, including sweeps. */\n\nconst EPSILON = 1e-8;\n\nfunction clamp(value, min, max)\n{\n    return Math.min(Math.max(value, min), max);\n}\n\nfunction createAABB(x, y, rx, ry)\n{\n    return {\n        x, y,\n        rx, ry,\n    };\n}\n\nfunction createRect(left, top, right, bottom)\n{\n    let rx = Math.abs(right - left) / 2;\n    let ry = Math.abs(bottom - top) / 2;\n    return createAABB(Math.min(left, right) + rx, Math.min(top, bottom) + ry, rx, ry);\n}\n\nfunction testAABB(a, b)\n{\n    if (Math.abs(a.x - b.x) > (a.rx + b.rx)) return false;\n    if (Math.abs(a.y - b.y) > (a.ry + b.ry)) return false;\n    return true;\n}\n\nfunction intersectAABB(out, a, b)\n{\n    let dx = b.x - a.x;\n    let px = (b.rx + a.rx) - Math.abs(dx);\n    if (px < 0) return null;\n\n    let dy = b.y - a.y;\n    let py = (b.ry + a.ry) - Math.abs(dy);\n    if (py < 0) return null;\n\n    if (px < py)\n    {\n        let sx = Math.sign(dx);\n        out.dx = px * sx;\n        out.dy = 0;\n        out.nx = sx;\n        out.ny = 0;\n        out.x = a.x + (a.rx * sx);\n        out.y = b.y;\n    }\n    else\n    {\n        let sy = Math.sign(dy);\n        out.dx = 0;\n        out.dy = py * sy;\n        out.nx = 0;\n        out.ny = sy;\n        out.x = b.x;\n        out.y = a.y + (a.ry * sy);\n    }\n\n    return out;\n}\n\nfunction intersectPoint(out, a, x, y)\n{\n    let dx = x - a.x;\n    let px = a.rx - Math.abs(dx);\n    if (px < 0) return null;\n\n    let dy = y - a.y;\n    let py = a.ry - Math.abs(dy);\n    if (py < 0) return null;\n\n    if (px < py)\n    {\n        let sx = Math.sign(dx);\n        out.dx = px * sx;\n        out.dy = 0;\n        out.nx = sx;\n        out.ny = 0;\n        out.x = a.x + (a.rx * sx);\n        out.y = y;\n    }\n    else\n    {\n        let sy = Math.sign(dy);\n        out.dx = 0;\n        out.dy = py * sy;\n        out.nx = 0;\n        out.ny = sy;\n        out.x = x;\n        out.y = a.y + (a.ry * sy);\n    }\n\n    return out;\n}\n\nfunction intersectSegment(out, a, x, y, dx, dy, px = 0, py = 0)\n{\n    if (Math.abs(dx) < EPSILON\n        && Math.abs(dy) < EPSILON\n        && px === 0\n        && py === 0)\n    {\n        return intersectPoint(out, a, x, y);\n    }\n    \n    let arx = a.rx;\n    let ary = a.ry;\n    let bpx = px;\n    let bpy = py;\n    let scaleX = 1.0 / (dx || EPSILON);\n    let scaleY = 1.0 / (dy || EPSILON);\n    let signX = Math.sign(scaleX);\n    let signY = Math.sign(scaleY);\n    let nearTimeX = (a.x - signX * (arx + bpx) - x) * scaleX;\n    let nearTimeY = (a.y - signY * (ary + bpy) - y) * scaleY;\n    let farTimeX = (a.x + signX * (arx + bpx) - x) * scaleX;\n    let farTimeY = (a.y + signY * (ary + bpy) - y) * scaleY;\n    if (nearTimeX > farTimeY || nearTimeY > farTimeX) return null;\n\n    let nearTime = Math.max(nearTimeX, nearTimeY);\n    let farTime = Math.min(farTimeX, farTimeY);\n    if (nearTime > 1 || farTime < 0) return null;\n\n    let time = clamp(nearTime, 0, 1);\n    let hitdx = (1.0 - time) * -dx;\n    let hitdy = (1.0 - time) * -dy;\n    let hitx = x + dx * time;\n    let hity = y + dy * time;\n\n    if (nearTimeX > nearTimeY)\n    {\n        out.time = time;\n        out.nx = -signX;\n        out.ny = 0;\n        out.dx = hitdx;\n        out.dy = hitdy;\n        out.x = hitx;\n        out.y = hity;\n    }\n    else\n    {\n        out.time = time;\n        out.nx = 0;\n        out.ny = -signY;\n        out.dx = hitdx;\n        out.dy = hitdy;\n        out.x = hitx;\n        out.y = hity;\n    }\n\n    return out;\n}\n\nfunction intersectSweepAABB(out, a, b, dx, dy)\n{\n    return intersectSegment(out, a, b.x, b.y, dx, dy, b.rx, b.ry);\n}\n\nfunction sweepIntoAABB(out, a, b, dx, dy)\n{\n    if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n    {\n        let hit = intersectAABB({}, b, a);\n        if (hit) hit.time = 0;\n\n        out.x = a.x;\n        out.y = a.y;\n        out.time = hit ? 0 : 1;\n        out.hit = hit;\n        return out;\n    }\n\n    let hit = intersectSweepAABB({}, b, a, dx, dy);\n    if (hit)\n    {\n        let time = clamp(hit.time, 0, 1);\n        let length = Math.sqrt(dx * dx + dy * dy);\n\n        let normaldx;\n        let normaldy;\n        if (length)\n        {\n            normaldx = dx / length;\n            normaldy = dy / length;\n        }\n        else\n        {\n            normaldx = 0;\n            normaldy = 0;\n        }\n        hit.x = clamp(hit.x + normaldx * a.rx, b.x - b.rx, b.x + b.rx);\n        hit.y = clamp(hit.y + normaldy * a.ry, b.y - b.ry, b.y + b.ry);\n\n        out.time = time;\n        out.x = a.x + dx * time;\n        out.y = a.y + dy * time;\n        out.hit = hit;\n    }\n    else\n    {\n        out.time = 1;\n        out.x = a.x + dx;\n        out.y = a.y + dy;\n        out.hit = hit;\n    }\n\n    return out;\n}\n\nfunction sweepInto(out, a, staticColliders, dx, dy)\n{\n    let tmp = {};\n\n    out.time = 1;\n    out.x = a.x + dx;\n    out.y = a.y + dy;\n    out.hit = null;\n\n    for(let i = 0, l = staticColliders.length; i < l; ++i)\n    {\n        let result = sweepIntoAABB(tmp, a, staticColliders[i], dx, dy);\n        if (result.time <= out.time)\n        {\n            out.time = result.time;\n            out.x = result.x;\n            out.y = result.y;\n            out.hit = result.hit;\n        }\n    }\n    return out;\n}\n\nvar IntersectionHelper = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    EPSILON: EPSILON,\n    clamp: clamp,\n    createAABB: createAABB,\n    createRect: createRect,\n    testAABB: testAABB,\n    intersectAABB: intersectAABB,\n    intersectPoint: intersectPoint,\n    intersectSegment: intersectSegment,\n    sweepInto: sweepInto\n});\n\nconst MAX_SWEEP_RESOLUTION_ITERATIONS = 100;\n\nfunction computeIntersections(masks, statics = [])\n{\n    // Compute physics.\n    for(let mask of masks)\n    {\n        switch(mask.type)\n        {\n            case 'point':\n                mask.hit = null;\n                for(let other of statics)\n                {\n                    mask.hit = intersectPoint({}, other, mask.x, mask.y);\n                    if (mask.hit) break;\n                }\n                break;\n            case 'segment':\n                mask.hit = null;\n                for(let other of statics)\n                {\n                    mask.hit = intersectSegment({}, other, mask.x, mask.y, mask.dx, mask.dy, mask.px, mask.py);\n                    if (mask.hit) break;\n                }\n                break;\n            case 'aabb':\n                mask.hit = null;\n                for(let other of statics)\n                {\n                    mask.hit = intersectAABB({}, other, mask);\n                    if (mask.hit) break;\n                }\n                break;\n        }\n    }\n}\n\nfunction resolveIntersections(dynamics, statics = [], dt = 1)\n{\n    // Do physics.\n    for(let dynamic of dynamics)\n    {\n        let dx = dynamic.dx * dt;\n        let dy = dynamic.dy * dt;\n        \n        let time = 0;\n        let tmp = {};\n        let sweep;\n\n        let hit = null;\n        let iterations = MAX_SWEEP_RESOLUTION_ITERATIONS;\n        do\n        {\n            // Do detection.\n            sweep = sweepInto(tmp, dynamic, statics, dx, dy);\n    \n            // Do resolution.\n            dynamic.x = sweep.x - (Math.sign(dx) * EPSILON);\n            dynamic.y = sweep.y - (Math.sign(dy) * EPSILON);\n            time += sweep.time;\n            if (sweep.hit)\n            {\n                dx += sweep.hit.nx * Math.abs(dx);\n                dy += sweep.hit.ny * Math.abs(dy);\n                hit = sweep.hit;\n\n                // Make sure that spent motion is consumed.\n                let remainingTime = Math.max(1 - time, 0);\n                dx *= remainingTime;\n                dy *= remainingTime;\n    \n                if (Math.abs(dx) < EPSILON) dx = 0;\n                if (Math.abs(dy) < EPSILON) dy = 0;\n            }\n        }\n        while(time < 1 && --iterations >= 0);\n        \n        dynamic.dx = dx;\n        dynamic.dy = dy;\n        dynamic.hit = hit;\n    }\n}\n\nvar IntersectionResolver = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    computeIntersections: computeIntersections,\n    resolveIntersections: resolveIntersections\n});\n\nfunction createIntersectionWorld()\n{\n    return {\n        dynamics: [],\n        masks: [],\n        statics: [],\n        update(dt)\n        {\n            resolveIntersections(this.dynamics, this.statics, dt);\n            computeIntersections(this.masks, this.statics);\n        },\n        render(ctx)\n        {\n            ctx.save();\n            {\n                // Draw static colliders.\n                ctx.strokeStyle = 'green';\n                for(let collider of this.statics)\n                {\n                    ctx.strokeRect(collider.x - collider.rx, collider.y - collider.ry, collider.rx * 2, collider.ry * 2);\n                }\n\n                // Draw dynamic colliders.\n                ctx.strokeStyle = 'lime';\n                for(let collider of this.dynamics)\n                {\n                    ctx.strokeRect(collider.x - collider.rx, collider.y - collider.ry, collider.rx * 2, collider.ry * 2);\n                }\n\n                // Draw mask colliders.\n                ctx.strokeStyle = 'blue';\n                for(let collider of this.masks)\n                {\n                    switch(collider.type)\n                    {\n                        case 'point':\n                            ctx.save();\n                            {\n                                ctx.fillStyle = 'red';\n                                ctx.fillRect(collider.x - 1, collider.y - 1, 2, 2);\n                            }\n                            ctx.restore();\n                            break;\n                        case 'segment':\n                            ctx.beginPath();\n                            ctx.moveTo(collider.x, collider.y);\n                            ctx.lineTo(collider.x + collider.dx, collider.y + collider.dy);\n                            ctx.stroke();\n                            break;\n                        case 'aabb':\n                            ctx.strokeRect(collider.x - collider.rx, collider.y - collider.ry, collider.rx * 2, collider.ry * 2);\n                            break;\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n}\n\nvar IntersectionWorld = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createIntersectionWorld: createIntersectionWorld\n});\n\n// https://gamedevelopment.tutsplus.com/tutorials/quick-tip-use-quadtrees-to-detect-likely-collisions-in-2d-space--gamedev-374\n\nfunction createBounds(x, y, rx, ry)\n{\n    return { x, y, rx, ry };\n}\n\nconst MAX_OBJECTS = 10;\nconst MAX_LEVELS = 5;\n\nclass QuadTree\n{\n    constructor(level = 0, bounds = createBounds(0, 0, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER))\n    {\n        this.level = level;\n        this.bounds = bounds;\n\n        this.objects = [];\n        this.nodes = new Array(4);\n    }\n\n    clear()\n    {\n        this.objects.length = 0;\n\n        for(let i = 0; i < this.nodes.length; ++i)\n        {\n            let node = this.nodes[i];\n            if (node)\n            {\n                node.clear();\n                this.nodes[i] = null;\n            }\n        }\n    }\n\n    split()\n    {\n        let { x, y, rx, ry } = this.bounds;\n        let nextLevel = this.level + 1;\n\n        let ChildConstructor = this.constructor;\n\n        this.nodes[0] = new ChildConstructor(nextLevel, createBounds(x + rx, y, rx, ry));\n        this.nodes[1] = new ChildConstructor(nextLevel, createBounds(x, y, rx, ry));\n        this.nodes[2] = new ChildConstructor(nextLevel, createBounds(x, y + ry, rx, ry));\n        this.nodes[3] = new ChildConstructor(nextLevel, createBounds(x + rx, y + ry, rx, ry));\n    }\n\n    findQuadIndex(object)\n    {\n        let { x, y, rx, ry } = this.bounds;\n\n        let index = -1;\n        let midpointX = x + rx;\n        let midpointY = y + ry;\n\n        let isTop = object.y < midpointY && object.y + object.ry * 2 < midpointY;\n        let isBottom = object.y > midpointY;\n\n        let isLeft = object.x < midpointX && object.x + object.rx * 2 < midpointX;\n        let isRight= object.x > midpointX;\n\n        if (isLeft)\n        {\n            if (isTop)\n            {\n                index = 1;\n            }\n            else if (isBottom)\n            {\n                index = 2;\n            }\n        }\n        else if (isRight)\n        {\n            if (isTop)\n            {\n                index = 0;\n            }\n            else if (isBottom)\n            {\n                index = 3;\n            }\n        }\n\n        return index;\n    }\n\n    insertAll(objects)\n    {\n        for(let object of objects)\n        {\n            this.insert(object);\n        }\n    }\n\n    insert(object)\n    {\n        let hasNode = this.nodes[0];\n\n        if (hasNode)\n        {\n            let quadIndex = this.findQuadIndex(object);\n            if (quadIndex >= 0)\n            {\n                this.nodes[quadIndex].insert(object);\n                return;\n            }\n        }\n\n        this.objects.push(object);\n\n        if (this.objects.length > MAX_OBJECTS && this.level < MAX_LEVELS)\n        {\n            if (!hasNode) this.split();\n\n            for(let i = this.objects.length - 1; i >= 0; --i)\n            {\n                let obj = this.objects[i];\n                let quadIndex = this.findQuadIndex(obj);\n                if (quadIndex >= 0)\n                {\n                    this.objects.splice(i, 1);\n                    this.nodes[quadIndex].insert(obj);\n                }\n            }\n        }\n    }\n\n    retreive(out, object)\n    {\n        if (this.nodes[0])\n        {\n            let quadIndex = this.findQuadIndex(object);\n            if (quadIndex >= 0)\n            {\n                this.nodes[quadIndex].retreive(out, object);\n            }\n        }\n\n        out.push(...this.objects);\n        return out;\n    }\n}\n\nvar QuadTree$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createBounds: createBounds,\n    QuadTree: QuadTree\n});\n\nconst AUDIO_CONTEXT = new AudioContext();\nautoUnlock(AUDIO_CONTEXT);\n\nconst AUDIO_ASSET_TAG = 'audio';\nasync function loadAudio(filepath, opts = {})\n{\n    const ctx = AUDIO_CONTEXT;\n\n    let result = await fetch(filepath);\n    let buffer = await result.arrayBuffer();\n    let data = await ctx.decodeAudioData(buffer);\n    return new Sound(ctx, data, Boolean(opts.loop));\n}\n\nconst DEFAULT_SOURCE_PARAMS = {\n    gain: 0,\n    pitch: 0,\n    pan: 0,\n    loop: false,\n};\nclass Sound\n{\n    constructor(ctx, audioBuffer, loop = false)\n    {\n        this.context = ctx;\n        this.buffer = audioBuffer;\n\n        this._source = null;\n\n        this.playing = false;\n        this.loop = loop;\n\n        this.onAudioSourceEnded = this.onAudioSourceEnded.bind(this);\n    }\n\n    onAudioSourceEnded()\n    {\n        this._playing = false;\n    }\n\n    play(opts = DEFAULT_SOURCE_PARAMS)\n    {\n        if (!this.buffer) return;\n        if (this._source) this.destroy();\n\n        const ctx = this.context;\n        let source = ctx.createBufferSource();\n        source.addEventListener('ended', this.onAudioSourceEnded);\n        source.buffer = this.buffer;\n        source.loop = opts.loop;\n\n        let prevNode = source;\n\n        // https://www.oreilly.com/library/view/web-audio-api/9781449332679/ch04.html\n        // Add pitch\n        if (opts.pitch)\n        {\n            source.detune.value = opts.pitch * 100;\n        }\n\n        // Add gain\n        if (opts.gain)\n        {\n            const gainNode = ctx.createGain();\n            gainNode.gain.value = opts.gain;\n            prevNode = prevNode.connect(gainNode);\n        }\n\n        // Add stereo pan\n        if (opts.pan)\n        {\n            const pannerNode = ctx.createStereoPanner();\n            pannerNode.pan.value = opts.pan;\n            prevNode = prevNode.connect(pannerNode);\n        }\n\n        prevNode.connect(ctx.destination);\n        source.start();\n\n        this._source = source;\n        this._playing = true;\n    }\n\n    pause()\n    {\n        this._source.stop();\n        this._playing = false;\n    }\n\n    destroy()\n    {\n        if (this._source) this._source.disconnect();\n        this._source = null;\n    }\n}\n\nasync function autoUnlock(ctx)\n{\n    const callback = () => {\n        if (ctx.state === 'suspended') {\n            ctx.resume();\n        }\n    };\n    document.addEventListener('click', callback);\n}\n\nvar Audio = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    AUDIO_CONTEXT: AUDIO_CONTEXT,\n    AUDIO_ASSET_TAG: AUDIO_ASSET_TAG,\n    loadAudio: loadAudio\n});\n\nconst MAX_FIXED_UPDATES = 250;\n\n/**\n * @typedef Application\n * @property {Function} [start]\n * @property {Function} [stop]\n * @property {Function} [preUpdate]\n * @property {Function} [update]\n * @property {Function} [fixedUpdate]\n * @property {Function} [postUpdate]\n * @property {Function} [pause]\n * @property {Function} [resume]\n */\n\nclass ApplicationLoop\n{\n    static currentTime() { return performance.now(); }\n\n    static start(app)\n    {\n        let result = new ApplicationLoop(app, false);\n        result.start();\n        return result;\n    }\n\n    /**\n     * @param {Application} app The application object that holds all the executable logic.\n     * @param {Boolean} [controlled = false] Whether the loop should NOT execute and manage itself.\n     */\n    constructor(app, controlled = false)\n    {\n        this.app = app;\n\n        this._controlled = controlled;\n        this._animationFrameHandle = null;\n\n        this.prevFrameTime = 0;\n        this.started = false;\n        this.paused = false;\n        this.fixedTimeStep = 1 / 60;\n        this.prevAccumulatedTime = 0;\n\n        this._onstart = null;\n        this._onstop = null;\n        this._onpreupdate = null;\n        this._onupdate = null;\n        this._onfixedupdate = null;\n        this._onpostupdate = null;\n        this._onpause = null;\n        this._onresume = null;\n\n        this.onAnimationFrame = this.onAnimationFrame.bind(this);\n        this.onWindowFocus = this.onWindowFocus.bind(this);\n        this.onWindowBlur = this.onWindowBlur.bind(this);\n    }\n\n    setFixedUpdatesPerSecond(count)\n    {\n        this.fixedTimeStep = 1 / count;\n        return this;\n    }\n\n    onWindowFocus()\n    {\n        if (!this.started) return;\n        this.resume();\n    }\n\n    onWindowBlur()\n    {\n        if (!this.started) return;\n        this.pause();\n    }\n\n    /**\n     * Runs the game loop. If this is a controlled game loop, it will call itself\n     * continuously until stop() or pause().\n     */\n    onAnimationFrame(now)\n    {\n        if (this._controlled) throw new Error('Cannot run controlled game loop; call step() instead.');\n        if (!this.started) throw new Error('Must be called after start().');\n\n        this.animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n        this.step(now);\n    }\n\n    /** Runs one update step for the game loop. This is usually called 60 times a second. */\n    step(now = ApplicationLoop.currentTime())\n    {\n        if (!this.started) return false;\n\n        const deltaTime = now - this.prevFrameTime;\n        this.prevFrameTime = now;\n        \n        if (this.paused) return false;\n\n        if (this.app.preUpdate) this.app.preUpdate(deltaTime);\n        if (this.app.update) this.app.update(deltaTime);\n\n        this.prevAccumulatedTime += deltaTime / 1000;\n        if (this.prevAccumulatedTime > MAX_FIXED_UPDATES * this.fixedTimeStep)\n        {\n            let max = MAX_FIXED_UPDATES * this.fixedTimeStep;\n            let count = Math.floor((this.prevAccumulatedTime - max) / this.fixedTimeStep);\n            this.prevAccumulatedTime = max;\n            console.error(`[ApplicationLoop] Too many updates! Skipped ${count} fixed updates.`);\n        }\n\n        while(this.prevAccumulatedTime >= this.fixedTimeStep)\n        {\n            this.prevAccumulatedTime -= this.fixedTimeStep;\n            if (this.app.fixedUpdate) this.app.fixedUpdate();\n        }\n\n        if (this.app.postUpdate) this.app.postUpdate(deltaTime);\n    }\n\n    /** Starts the game loop. Calls run(), unless recursive is set to false. */\n    start()\n    {\n        if (this.started) throw new Error('Loop already started.');\n\n        // If the window is out of focus, just ignore the time.\n        window.addEventListener('focus', this.onWindowFocus);\n        window.addEventListener('blur', this.onWindowBlur);\n\n        this.started = true;\n        this.prevFrameTime = ApplicationLoop.currentTime();\n\n        if (this.app.start) this.app.start();\n        \n        if (!this.controlled)\n        {\n            this.onAnimationFrame(this.prevFrameTime);\n        }\n\n        return this;\n    }\n\n    /** Stops the game loop. */\n    stop()\n    {\n        if (!this.started) throw new Error('Loop not yet started.');\n        \n        // If the window is out of focus, just ignore the time.\n        window.removeEventListener('focus', this.onWindowFocus);\n        window.removeEventListener('blur', this.onWindowBlur);\n\n        this.started = false;\n\n        if (this.app.stop) this.app.stop();\n\n        if (!this._controlled)\n        {\n            if (this.animationFrameHandle)\n            {\n                cancelAnimationFrame(this.animationFrameHandle);\n                this.animationFrameHandle = null;\n            }\n        }\n\n        return this;\n    }\n\n    /** Pauses the game loop. */\n    pause()\n    {\n        if (this.paused) return this;\n\n        this.paused = true;\n        \n        if (this.app.pause) this.app.pause();\n        return this;\n    }\n\n    /** Resumes the game loop. */\n    resume()\n    {\n        if (!this.pause) return this;\n\n        // This is an intentional frame skip (due to pause).\n        this.prevFrameTime = ApplicationLoop.currentTime();\n\n        this.paused = false;\n\n        if (this.app.resume) this.app.resume();\n        return this;\n    }\n}\n\nclass Game\n{\n    constructor(context)\n    {\n        this.context = context;\n\n        this.display = null;\n        this.renderContext = null;\n    }\n\n    setDisplay(display)\n    {\n        this.display = display;\n        this.renderContext = display.canvas.getContext('2d');\n        return this;\n    }\n\n    /** @override */\n    start()\n    {\n        this.context.start();\n    }\n\n    /** @override */\n    update(dt)\n    {\n        this.context.update(dt);\n        this.context.render(this.renderContext);\n    }\n}\n\nconst GAME_PROPERTY = Symbol('game');\nconst LOOP_PROPERTY = Symbol('loop');\n\nfunction start(context)\n{\n    let gameContext = { ...context };\n\n    let game = new Game(gameContext);\n    let loop = new ApplicationLoop(game);\n\n    gameContext[GAME_PROPERTY] = game;\n    gameContext[LOOP_PROPERTY] = loop;\n    gameContext.display = null;\n\n    window.addEventListener('DOMContentLoaded', () => {\n        let display = document.querySelector('display-port');\n        if (!display) throw new Error('Cannot find display-port in document.');\n        game.setDisplay(display);\n        gameContext.display = display;\n        gameContext.load().then(() => loop.start());\n    });\n\n    return gameContext;\n}\n\nfunction stop(gameContext)\n{\n    gameContext[LOOP_PROPERTY].stop();\n\n    delete gameContext[GAME_PROPERTY];\n    delete gameContext[LOOP_PROPERTY];\n}\n\nvar Game$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    start: start,\n    stop: stop\n});\n\nconst DEFAULT_INFO = {\n    x: 0, y: 0,\n    width: 1,\n    height: 1,\n    color: 'dodgerblue',\n    solid: true,\n};\nconst INFO_KEY = Symbol('BoxRendererInfo');\n\nclass BoxRenderer\n{\n    static get Info() { return INFO_KEY; }\n\n    static draw(ctx, targets, defaultInfo = undefined)\n    {\n        const defaults = defaultInfo ? { ...DEFAULT_INFO, ...defaultInfo } : DEFAULT_INFO;\n        for(let target of targets)\n        {\n            const info = target[INFO_KEY];\n            \n            const x = resolveInfo('x', info, target, defaults);\n            const y = resolveInfo('y', info, target, defaults);\n            const width = resolveInfo('width', info, target, defaults);\n            const height = resolveInfo('height', info, target, defaults);\n            const color = resolveInfo('color', info, target, defaults);\n            const solid = resolveInfo('solid', info, target, defaults);\n\n            ctx.translate(x, y);\n            {\n                const halfWidth = width / 2;\n                const halfHeight = height / 2;\n\n                if (solid)\n                {\n                    ctx.fillStyle = color;\n                    ctx.fillRect(-halfWidth, -halfHeight, width, height);\n                }\n                else\n                {\n                    ctx.strokeStyle = color;\n                    ctx.strokeRect(-halfWidth, -halfHeight, width, height);\n                }\n            }\n            ctx.translate(-x, -y);\n        }\n    }\n}\n\nfunction resolveInfo(param, info, target, defaults)\n{\n    if (info)\n    {\n        if (param in info)\n        {\n            return info[param];\n        }\n        else if (param in target)\n        {\n            return target[param];\n        }\n        else\n        {\n            return defaults[param];\n        }\n    }\n    else if (target)\n    {\n        if (param in target)\n        {\n            return target[param];\n        }\n        else\n        {\n            return defaults[param];\n        }\n    }\n    else\n    {\n        return defaults[param];\n    }\n}\n\nconst DEFAULT_INFO$1 = {\n    x: 0, y: 0,\n    width: 1,\n    height: 1,\n    spriteImage: null,\n};\nconst INFO_KEY$1 = Symbol('SpriteRendererInfo');\n\nclass SpriteRenderer\n{\n    static get Info() { return INFO_KEY$1; }\n\n    static draw(ctx, targets, defaultInfo = undefined)\n    {\n        const defaults = defaultInfo ? { ...DEFAULT_INFO$1, ...defaultInfo } : DEFAULT_INFO$1;\n        for(let target of targets)\n        {\n            const info = target[INFO_KEY$1];\n            const x = resolveInfo$1('x', info, target, defaults);\n            const y = resolveInfo$1('y', info, target, defaults);\n\n            const spriteImage = resolveInfo$1('spriteImage', info, target, defaults);\n            if (spriteImage)\n            {\n                const width = spriteImage.width;\n                const height = spriteImage.height;\n\n                ctx.translate(x, y);\n                {\n                    const halfWidth = width / 2;\n                    const halfHeight = height / 2;\n    \n                    ctx.drawImage(spriteImage, -halfWidth, -halfHeight);\n                }\n                ctx.translate(-x, -y);\n            }\n            else\n            {\n                const width = 10;\n                const height = 10;\n\n                ctx.translate(x, y);\n                {\n                    const halfWidth = width / 2;\n                    const halfHeight = height / 2;\n\n                    ctx.strokeStyle = 'black';\n                    ctx.strokeRect(-halfWidth, -halfHeight, width, height);\n                    ctx.textAlign = 'center';\n                    ctx.textBaseline = 'middle';\n                    ctx.strokeText('?', 0, 0, width);\n                }\n                ctx.translate(-x, -y);\n            }\n        }\n    }\n}\n\nfunction resolveInfo$1(param, info, target, defaults)\n{\n    if (info)\n    {\n        if (param in info)\n        {\n            return info[param];\n        }\n        else if (param in target)\n        {\n            return target[param];\n        }\n        else\n        {\n            return defaults[param];\n        }\n    }\n    else if (target)\n    {\n        if (param in target)\n        {\n            return target[param];\n        }\n        else\n        {\n            return defaults[param];\n        }\n    }\n    else\n    {\n        return defaults[param];\n    }\n}\n\nexport { ApplicationLoop as A, BoxRenderer as B, Game$1 as G, ImageLoader as I, JSONLoader as J, OBJLoader as O, QuadTree$1 as Q, SpriteRenderer as S, TextLoader as T, AssetLoader as a, Audio as b, ByteLoader as c, IntersectionHelper as d, IntersectionResolver as e, IntersectionWorld as f };\n","// https://webglfundamentals.org/webgl/lessons/webgl-fundamentals.html\n\nimport { AssetLoader } from './lib.js';\n\ndocument.addEventListener('DOMContentLoaded', main);\n\nasync function main()\n{\n    const display = document.querySelector('display-port');\n    const input = document.querySelector('input-context');\n\n    const CursorX = input.getInput('cursorX');\n    const CursorY = input.getInput('cursorY');\n\n    const gl = display.canvas.getContext('webgl');\n    if (!gl)\n    {\n        throw new Error('Your browser does not support webgl.');\n    }\n\n    const vertexShaderSource = await AssetLoader.loadAsset('text:main.vert');\n    const fragmentShaderSource = await AssetLoader.loadAsset('text:main.frag');\n    const shaderProgram = Program(gl)\n        .shader(gl.VERTEX_SHADER, vertexShaderSource)\n        .shader(gl.FRAGMENT_SHADER, fragmentShaderSource)\n        .link();\n    const positionAttributeLocation = gl.getAttribLocation(shaderProgram, 'a_position');\n    const colorUniformLocation = gl.getUniformLocation(shaderProgram, 'u_color');\n    \n    const positions = [\n        0, 0,\n        0, 0.5,\n        0.5, 0,\n    ];\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n\n    display.addEventListener('frame', e => {\n        const dt = (e.detail.deltaTime / 1000) * 60;\n\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        gl.useProgram(shaderProgram);\n        {\n            gl.uniform4f(colorUniformLocation, 1 * CursorX.value, 1 * CursorY.value, 0.5, 1);\n            gl.enableVertexAttribArray(positionAttributeLocation);\n            gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n            {\n                const size = 2;\n                const type = gl.FLOAT;\n                const normalize = false;\n                const stride = 0;\n                const offset = 0;\n                gl.vertexAttribPointer(positionAttributeLocation, size, type, normalize, stride, offset);\n            }\n            gl.drawArrays(gl.TRIANGLES, 0, 3);\n        }\n    });\n}\n\nfunction createShader(gl, type, shaderSource)\n{\n    let shader = gl.createShader(type);\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n\n    let status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (status)\n    {\n        return shader;\n    }\n\n    console.error(gl.getShaderInfoLog(shader));\n    gl.deleteShader(shader);\n}\n\nfunction createShaderProgram(gl, program, shaders)\n{\n    // Attach to the program.\n    for(let shader of shaders)\n    {\n        gl.attachShader(program, shader);\n    }\n\n    // Link'em!\n    gl.linkProgram(program);\n\n    // Don't forget to clean up the shaders! It's no longer needed.\n    for(let shader of shaders)\n    {\n        gl.detachShader(program, shader);\n        gl.deleteShader(shader);\n    }\n\n    let status = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (status)\n    {\n        return program;\n    }\n    \n    console.error(gl.getProgramInfoLog(program));\n    gl.deleteProgram(program);\n}\n\nfunction Program(gl)\n{\n    let program = gl.createProgram();\n    let shaders = [];\n    \n    return {\n        shader(type, shaderSource)\n        {\n            let shader = createShader(gl, type, shaderSource);\n            shaders.push(shader);\n            return this;\n        },\n        link()\n        {\n            createShaderProgram(gl, program, shaders);\n            shaders.length = 0;\n            return program;\n        }\n    };\n}\n"],"names":["INNER_HTML","INNER_STYLE","TEMPLATE_KEY","STYLE_KEY","INNER_HTML$1","INNER_STYLE$1","TEMPLATE_KEY$1","STYLE_KEY$1","glMatrix.ARRAY_TYPE","vec3$1.fromValues"],"mappings":";;;IAAA,MAAM,YAAY,GAAG,SAAS,CAAC;IAC/B,MAAM,WAAW,GAAG,QAAQ,CAAC;IAC7B,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,MAAM,YAAY,GAAG,SAAS,CAAC;AAC/B;IACA,MAAM,YAAY,GAAG,YAAY,CAAC;IAClC,MAAM,aAAa,GAAG,GAAG,CAAC;IAC1B,MAAM,cAAc,GAAG,GAAG,CAAC;AAC3B;IACA,MAAM,UAAU,GAAG,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC,CAAC;IACR,MAAM,WAAW,GAAG,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,YAAY,CAAC;AAC5B;AACA;AACA;AACA;AACA,aAAa,EAAE,QAAQ,CAAC,kBAAkB,EAAE,WAAW,CAAC,kBAAkB,EAAE,YAAY,CAAC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,CAAC;AACH;IACA,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IACxC,MAAM,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,WAAW,SAAS,WAAW;IACrC;IACA,IAAI,YAAY,YAAY,CAAC;IAC7B,IAAI;IACJ,QAAQ,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IAC1D,QAAQ,QA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"}