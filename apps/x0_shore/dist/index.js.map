{"version":3,"file":"index.js","sources":["../../../packages/milque/dist/esm/DisplayPort-9958052f.js","../../../packages/milque/dist/esm/InputContext-37718782.js","../../../node_modules/gl-matrix/esm/common.js","../../../node_modules/gl-matrix/esm/mat3.js","../../../node_modules/gl-matrix/esm/mat4.js","../../../node_modules/gl-matrix/esm/vec3.js","../../../node_modules/gl-matrix/esm/vec4.js","../../../node_modules/gl-matrix/esm/quat.js","../../../packages/milque/dist/esm/index-6b4d0fe1.js","../../../packages/milque/dist/esm/index-96bf38e3.js","../../../packages/milque/dist/esm/MathHelper-d0b1ddca.js","../src/view/Camera2D.js","../src/view/CanvasView2D.js","../src/scene/SceneGraph.js","../src/entity/EntityManager.js","../src/main.js"],"sourcesContent":["const MODE_NOSCALE = 'noscale';\nconst MODE_CENTER = 'center';\nconst MODE_FIT = 'fit';\nconst MODE_STRETCH = 'stretch';\n\nconst DEFAULT_MODE = MODE_NOSCALE;\nconst DEFAULT_WIDTH = 300;\nconst DEFAULT_HEIGHT = 150;\n\nconst INNER_HTML = `\n<div class=\"container\">\n    <label class=\"hidden\" id=\"title\">display-port</label>\n    <label class=\"hidden\" id=\"fps\">00</label>\n    <label class=\"hidden\" id=\"dimension\">0x0</label>\n    <canvas></canvas>\n    <slot></slot>\n</div>`;\nconst INNER_STYLE = `\n:host {\n    display: inline-block;\n    color: #555555;\n}\n.container {\n    display: flex;\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\ncanvas {\n    background: #000000;\n    margin: auto;\n    image-rendering: pixelated;\n}\nlabel {\n    font-family: monospace;\n    color: currentColor;\n    position: absolute;\n}\n#title {\n    left: 0.5rem;\n    top: 0.5rem;\n}\n#fps {\n    right: 0.5rem;\n    top: 0.5rem;\n}\n#dimension {\n    left: 0.5rem;\n    bottom: 0.5rem;\n}\n.hidden {\n    display: none;\n}\n:host([debug]) .container {\n    outline: 6px dashed rgba(0, 0, 0, 0.1);\n    outline-offset: -4px;\n    background-color: rgba(0, 0, 0, 0.1);\n}\n:host([mode=\"${MODE_NOSCALE}\"]) canvas {\n    margin: 0;\n    top: 0;\n    left: 0;\n}\n:host([mode=\"${MODE_FIT}\"]), :host([mode=\"${MODE_CENTER}\"]), :host([mode=\"${MODE_STRETCH}\"]) {\n    width: 100%;\n    height: 100%;\n}\n:host([full]) {\n    width: 100vw!important;\n    height: 100vh!important;\n}\n:host([disabled]) {\n    display: none;\n}\nslot {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n\n    pointer-events: none;\n}\n::slotted(*) {\n    pointer-events: auto;\n}`;\n\nconst TEMPLATE_KEY = Symbol('template');\nconst STYLE_KEY = Symbol('style');\n\n/**\n * @version 1.2.2\n * @description\n * # Changelog\n * ## 1.2.2\n * - Removed 'contexttype'\n * ## 1.2.1\n * - Added 'contexttype' for getContext()\n * ## 1.2.0\n * - Moved template creation to static time\n * - Removed default export\n * ## 1.1.2\n * - Added clear()\n * - Added delta time for frame events\n * ## 1.1.1\n * - Added onframe and onresize attribute callbacks\n * - Added \"stretch\" mode\n * ## 1.1.0\n * - Changed \"topleft\" to \"noscale\"\n * - Changed default size to 640 x 480\n * - Changed \"center\" and \"fit\" to fill container instead of viewport\n * - Added \"full\" property to override and fill viewport\n * ## 1.0.2\n * - Moved default values to the top\n * ## 1.0.1\n * - Fixed scaling issues when dimensions do not match\n * ## 1.0.0\n * - Created DisplayPort\n * \n * @fires frame Every time a new frame is rendered.\n * @fires resize When the display is resized.\n */\nclass DisplayPort extends HTMLElement\n{\n    static get [TEMPLATE_KEY]()\n    {\n        let template = document.createElement('template');\n        template.innerHTML = INNER_HTML;\n        Object.defineProperty(this, TEMPLATE_KEY, { value: template });\n        return template;\n    }\n\n    static get [STYLE_KEY]()\n    {\n        let style = document.createElement('style');\n        style.innerHTML = INNER_STYLE;\n        Object.defineProperty(this, STYLE_KEY, { value: style });\n        return style;\n    }\n\n    /** @override */\n    static get observedAttributes()\n    {\n        return [\n            'width',\n            'height',\n            'disabled',\n            // Event handlers...\n            'onframe',\n            /*\n            // NOTE: Already handled by GlobalEventHandlers...\n            'onresize',\n            */\n            // NOTE: For debuggin purposes...\n            'debug',\n            // ...listening for built-in attribs...\n            'id',\n            'class',\n        ];\n    }\n\n    constructor()\n    {\n        super();\n\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.constructor[TEMPLATE_KEY].content.cloneNode(true));\n        this.shadowRoot.appendChild(this.constructor[STYLE_KEY].cloneNode(true));\n\n        this._canvasElement = this.shadowRoot.querySelector('canvas');\n\n        this._titleElement = this.shadowRoot.querySelector('#title');\n        this._fpsElement = this.shadowRoot.querySelector('#fps');\n        this._dimensionElement = this.shadowRoot.querySelector('#dimension');\n\n        this._animationRequestHandle = 0;\n        this._prevAnimationFrameTime = 0;\n\n        this._width = DEFAULT_WIDTH;\n        this._height = DEFAULT_HEIGHT;\n\n        this._onframe = null;\n        /*\n        // NOTE: Already handled by GlobalEventHandlers...\n        this._onresize = null;\n        */\n\n        this.update = this.update.bind(this);\n    }\n\n    get canvas() { return this._canvasElement; }\n    \n    /** @override */\n    connectedCallback()\n    {\n        if (!this.hasAttribute('mode')) this.mode = DEFAULT_MODE;\n        \n        // Allows this element to be focusable\n        if (!this.hasAttribute('tabindex')) this.setAttribute('tabindex', 0);\n\n        this.updateCanvasSize();\n        this.resume();\n    }\n\n    /** @override */\n    disconnectedCallback()\n    {\n        this.pause();\n    } \n\n    /** @override */\n    attributeChangedCallback(attribute, prev, value)\n    {\n        switch(attribute)\n        {\n            case 'width':\n                this._width = value;\n                break;\n            case 'height':\n                this._height = value;\n                break;\n            case 'disabled':\n                if (value)\n                {\n                    this.update(0);\n                    this.pause();\n                }\n                else\n                {\n                    this.resume();\n                }\n                break;\n            // Event handlers...\n            case 'onframe':\n                this.onframe = new Function('event', `with(document){with(this){${value}}}`).bind(this);\n                break;\n            /*\n            // NOTE: Already handled by GlobalEventHandlers...\n            case 'onresize':\n                this.onresize = new Function('event', `with(document){with(this){${value}}}`).bind(this);\n                break;\n            */\n            // NOTE: For debugging purposes...\n            case 'id':\n            case 'class':\n                this._titleElement.innerHTML = `display-port${this.className ? '.' + this.className : ''}${this.hasAttribute('id') ? '#' + this.getAttribute('id') : ''}`;\n                break;\n            case 'debug':\n                this._titleElement.classList.toggle('hidden', value);\n                this._fpsElement.classList.toggle('hidden', value);\n                this._dimensionElement.classList.toggle('hidden', value);\n                break;\n        }\n    }\n\n    update(now)\n    {\n        this._animationRequestHandle = requestAnimationFrame(this.update);\n\n        this.updateCanvasSize();\n        const deltaTime = now - this._prevAnimationFrameTime;\n        this._prevAnimationFrameTime = now;\n\n        // NOTE: For debugging purposes...\n        if (this.debug)\n        {\n            // Update FPS...\n            const frames = deltaTime <= 0 ? '--' : String(Math.round(1000 / deltaTime)).padStart(2, '0');\n            if (this._fpsElement.innerText !== frames)\n            {\n                this._fpsElement.innerText = frames;\n            }\n\n            // Update dimensions...\n            if (this.mode === MODE_NOSCALE)\n            {\n                let result = `${this._width}x${this._height}`;\n                if (this._dimensionElement.innerText !== result)\n                {\n                    this._dimensionElement.innerText = result;\n                }\n            }\n            else\n            {\n                let result = `${this._width}x${this._height}|${this.shadowRoot.host.clientWidth}x${this.shadowRoot.host.clientHeight}`;\n                if (this._dimensionElement.innerText !== result)\n                {\n                    this._dimensionElement.innerText = result;\n                }\n            }\n        }\n\n        this.dispatchEvent(new CustomEvent('frame', {\n            detail: {\n                now,\n                prevTime: this._prevAnimationFrameTime,\n                deltaTime: deltaTime,\n                canvas: this._canvasElement,\n                /** @deprecated */\n                get context() { let ctx = this.canvas.getContext('2d'); ctx.imageSmoothingEnabled = false; return ctx; },\n            },\n            bubbles: false,\n            composed: true\n        }));\n    }\n\n    pause()\n    {\n        cancelAnimationFrame(this._animationRequestHandle);\n    }\n\n    resume()\n    {\n        this._animationRequestHandle = requestAnimationFrame(this.update);\n    }\n    \n    updateCanvasSize()\n    {\n        let clientRect = this.shadowRoot.host.getBoundingClientRect();\n        const clientWidth = clientRect.width;\n        const clientHeight = clientRect.height;\n\n        let canvas = this._canvasElement;\n        let canvasWidth = this._width;\n        let canvasHeight = this._height;\n\n        const mode = this.mode;\n\n        if (mode === MODE_STRETCH)\n        {\n            canvasWidth = clientWidth;\n            canvasHeight = clientHeight;\n        }\n        else if (mode !== MODE_NOSCALE)\n        {\n            let flag = clientWidth < canvasWidth || clientHeight < canvasHeight || mode === MODE_FIT;\n            if (flag)\n            {\n                let ratioX = clientWidth / canvasWidth;\n                let ratioY = clientHeight / canvasHeight;\n\n                if (ratioX < ratioY)\n                {\n                    canvasWidth = clientWidth;\n                    canvasHeight = canvasHeight * ratioX;\n                }\n                else\n                {\n                    canvasWidth = canvasWidth * ratioY;\n                    canvasHeight = clientHeight;\n                }\n            }\n        }\n\n        canvasWidth = Math.floor(canvasWidth);\n        canvasHeight = Math.floor(canvasHeight);\n\n        if (canvas.clientWidth !== canvasWidth || canvas.clientHeight !== canvasHeight)\n        {\n            canvas.width = this._width;\n            canvas.height = this._height;\n            canvas.style = `width: ${canvasWidth}px; height: ${canvasHeight}px`;\n            this.dispatchEvent(new CustomEvent('resize', { detail: { width: canvasWidth, height: canvasHeight }, bubbles: false, composed: true }));\n        }\n    }\n\n    /*\n    // NOTE: Already handled by GlobalEventHandlers...\n    get onresize() { return this._onresize; }\n    set onresize(value)\n    {\n        if (this._onresize) this.removeEventListener('resize', this._onresize);\n        this._onresize = value;\n        if (this._onresize) this.addEventListener('resize', value);\n    }\n    */\n\n    get onframe() { return this._onframe; }\n    set onframe(value)\n    {\n        if (this._onframe) this.removeEventListener('frame', this._onframe);\n        this._onframe = value;\n        if (this._onframe) this.addEventListener('frame', value);\n    }\n\n    get width() { return this._width; }\n    set width(value) { this.setAttribute('width', value); }\n\n    get height() { return this._height; }\n    set height(value) { this.setAttribute('height', value); }\n\n    get mode() { return this.getAttribute('mode'); }\n    set mode(value) { this.setAttribute('mode', value); }\n\n    get disabled() { return this.hasAttribute('disabled'); }\n    set disabled(value) { if (value) this.setAttribute('disabled', ''); else this.removeAttribute('disabled'); }\n\n    // NOTE: For debugging purposes...\n    get debug() { return this.hasAttribute('debug'); }\n    set debug(value) { if (value) this.setAttribute('debug', ''); else this.removeAttribute('debug'); }\n}\nwindow.customElements.define('display-port', DisplayPort);\n\nexport { DisplayPort as D };\n","class InputDevice\n{\n    /** @abstract */\n    static addInputEventListener(elementTarget, listener) {}\n    \n    /** @abstract */\n    static removeInputEventListener(elementTarget, listener) {}\n\n    constructor(eventTarget)\n    {\n        this.eventTarget = eventTarget;\n    }\n}\n\nclass Button\n{\n    constructor()\n    {\n        this.down = 0;\n        this.up = 0;\n        this.value = 0;\n\n        this.next = {\n            up: 0,\n            down: 0,\n        };\n    }\n\n    update(event, value)\n    {\n        if (event === 'down')\n        {\n            this.next.down = value;\n        }\n        else\n        {\n            this.next.up = value;\n        }\n    }\n\n    poll()\n    {\n        if (this.value)\n        {\n            if (this.up && !this.next.up)\n            {\n                this.value = 0;\n            }\n        }\n        else if (this.next.down)\n        {\n            this.value = 1;\n        }\n\n        this.down = this.next.down;\n        this.up = this.next.up;\n\n        this.next.down = 0;\n        this.next.up = 0;\n    }\n\n    /** @override */\n    toString()\n    {\n        return this.value;\n    }\n}\n\nclass Axis\n{\n    constructor()\n    {\n        this.value = 0;\n    }\n\n    update(event, value)\n    {\n        this.value = value;\n    }\n\n    poll() {}\n\n    /** @override */\n    toString()\n    {\n        return this.value;\n    }\n}\n\nclass AggregatedAxis extends Axis\n{\n    constructor()\n    {\n        super();\n\n        this.next = 0;\n    }\n\n    /** @override */\n    update(event, value)\n    {\n        this.next += value;\n    }\n\n    /** @override */\n    poll()\n    {\n        this.value = this.next;\n        this.next = 0;\n    }\n}\n\nconst KEYBOARD_CONTEXT_KEY = Symbol('keyboardEventContext');\n\nclass Keyboard extends InputDevice\n{\n    /** @override */\n    static addInputEventListener(eventTarget, listener)\n    {\n        let ctx;\n        if (!(KEYBOARD_CONTEXT_KEY in listener))\n        {\n            ctx = {\n                handler: listener,\n                target: eventTarget,\n                down: null,\n                up: null,\n                _keyEvent: {\n                    type: 'key',\n                    target: eventTarget,\n                    device: 'keyboard',\n                    key: null,\n                    event: null,\n                    value: null,\n                    control: false,\n                    shift: false,\n                    alt: false,\n                },\n            };\n    \n            let down = onKeyDown.bind(ctx);\n            let up = onKeyUp.bind(ctx);\n        \n            ctx.down = down;\n            ctx.up = up;\n        \n            listener[KEYBOARD_CONTEXT_KEY] = ctx;\n        }\n        else\n        {\n            ctx = listener[KEYBOARD_CONTEXT_KEY];\n        }\n\n        eventTarget.addEventListener('keyup', ctx.up);\n        eventTarget.addEventListener('keydown', ctx.down);\n    \n        return eventTarget;\n    }\n\n    /** @override */\n    static removeInputEventListener(eventTarget, listener)\n    {\n        if (KEYBOARD_CONTEXT_KEY in listener)\n        {\n            let ctx = listener[KEYBOARD_CONTEXT_KEY];\n        \n            eventTarget.removeEventListener('keyup', ctx.up);\n            eventTarget.removeEventListener('keydown', ctx.down);\n        }\n    \n        return eventTarget;\n    }\n\n    constructor(eventTarget, keyList = undefined)\n    {\n        super(eventTarget);\n\n        this._buttons = [];\n        this._managed = Array.isArray(keyList);\n\n        this.onManagedKeyEvent = this.onManagedKeyEvent.bind(this);\n        this.onUnmanagedKeyEvent = this.onUnmanagedKeyEvent.bind(this);\n\n        if (this._managed)\n        {\n            for(let key of keyList)\n            {\n                let button = new Button();\n                this[key] = button;\n                this._buttons.push(button);\n            }\n\n            Keyboard.addInputEventListener(eventTarget, this.onManagedKeyEvent);\n        }\n        else\n        {\n            Keyboard.addInputEventListener(eventTarget, this.onUnmanagedKeyEvent);\n        }\n    }\n\n    get Up() { return Math.min((this.ArrowUp || 0) + (this.KeyW || 0), 1); }\n    get Down() { return Math.min((this.ArrowDown || 0) + (this.KeyS || 0), 1); }\n    get Left() { return Math.min((this.ArrowLeft || 0) + (this.KeyA || 0), 1); }\n    get Right() { return Math.min((this.ArrowRight || 0) + (this.KeyD || 0), 1); }\n\n    destroy()\n    {\n        if (this._managed)\n        {\n            Keyboard.removeInputEventListener(this.eventTarget, this.onManagedKeyEvent);\n        }\n        else\n        {\n            Keyboard.removeInputEventListener(this.eventTarget, this.onUnmanagedKeyEvent);\n        }\n        this.eventTarget = null;\n    }\n\n    poll()\n    {\n        for(let button of this._buttons)\n        {\n            button.poll();\n        }\n        return this;\n    }\n\n    onUnmanagedKeyEvent(e)\n    {\n        if (!(e.key in this))\n        {\n            let button = new Button();\n            this[e.key] = button;\n            this._buttons.push(button);\n        }\n        \n        this[e.key].update(e.event, e.value);\n        \n        return true;\n    }\n\n    onManagedKeyEvent(e)\n    {\n        if (e.key in this)\n        {\n            this[e.key].update(e.event, e.value);\n\n            return true;\n        }\n    }\n}\n\nfunction onKeyDown(e)\n{\n    // Ignore repeat events.\n    if (e.repeat)\n    {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    let event = this._keyEvent;\n    // NOTE: You could use `e.key`, but we care about location rather than printable character.\n    event.key = e.code;\n    event.event = 'down';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.handler.call(undefined, event);\n\n    if (result)\n    {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n}\n\nfunction onKeyUp(e)\n{\n    let event = this._keyEvent;\n    // NOTE: You could use `e.key`, but we care about location rather than printable character.\n    event.key = e.code;\n    event.event = 'up';\n    event.value = 1;\n    event.control = e.ctrlKey;\n    event.shift = e.shiftKey;\n    event.alt = e.altKey;\n\n    let result = this.handler.call(undefined, event);\n\n    if (result)\n    {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n}\n\nconst MOUSE_CONTEXT_KEY = Symbol('mouseEventContext');\n\nclass Mouse extends InputDevice\n{\n    /** @override */\n    static addInputEventListener(eventTarget, listener)\n    {\n        let ctx;\n        if (!(MOUSE_CONTEXT_KEY in listener))\n        {\n            ctx = {\n                handler: listener,\n                target: eventTarget,\n                down: null,\n                up: null,\n                move: null,\n                contextmenu: null,\n                _down: false,\n                _keyEvent: {\n                    type: 'key',\n                    target: eventTarget,\n                    device: 'mouse',\n                    key: null,\n                    event: null,\n                    value: null,\n                },\n                _posEvent: {\n                    type: 'pos',\n                    target: eventTarget,\n                    device: 'mouse',\n                    key: 'pos',\n                    event: 'move',\n                    x: 0, y: 0, dx: 0, dy: 0,\n                },\n            };\n    \n            let down = onMouseDown.bind(ctx);\n            let up = onMouseUp.bind(ctx);\n            let move = onMouseMove.bind(ctx);\n            let contextmenu = onContextMenu.bind(ctx);\n        \n            ctx.down = down;\n            ctx.up = up;\n            ctx.move = move;\n            ctx.contextmenu = contextmenu;\n        \n            listener[MOUSE_CONTEXT_KEY] = ctx;\n        }\n        else\n        {\n            ctx = listener[MOUSE_CONTEXT_KEY];\n        }\n    \n        eventTarget.addEventListener('mousedown', ctx.down);\n        document.addEventListener('mouseup', ctx.up);\n        eventTarget.addEventListener('contextmenu', ctx.contextmenu);\n        document.addEventListener('mousemove', ctx.move);\n    \n        return eventTarget;\n    }\n\n    /** @override */\n    static removeInputEventListener(eventTarget, listener)\n    {\n        if (MOUSE_CONTEXT_KEY in listener)\n        {\n            let ctx = listener[MOUSE_CONTEXT_KEY];\n        \n            eventTarget.removeEventListener('mousedown', ctx.down);\n            document.removeEventListener('mouseup', ctx.up);\n            eventTarget.removeEventListener('contextmenu', ctx.contextmenu);\n            document.removeEventListener('mousemove', ctx.move);\n        }\n    \n        return eventTarget;\n    }\n\n    constructor(eventTarget)\n    {\n        super(eventTarget);\n\n        this.x = new Axis();\n        this.y = new Axis();\n        this.dx = new AggregatedAxis();\n        this.dy = new AggregatedAxis();\n        this.Button0 = new Button();\n        this.Button1 = new Button();\n        this.Button2 = new Button();\n        this.Button3 = new Button();\n        this.Button4 = new Button();\n\n        this.onMouseEvent = this.onMouseEvent.bind(this);\n\n        Mouse.addInputEventListener(eventTarget, this.onMouseEvent);\n    }\n\n    get Left() { return this.Button0; }\n    get Middle() { return this.Button1; }\n    get Right() { return this.Button2; }\n\n    destroy()\n    {\n        Mouse.removeInputEventListener(this.eventTarget, this.onMouseEvent);\n        this.eventTarget = null;\n    }\n\n    poll()\n    {\n        this.x.poll();\n        this.y.poll();\n        this.dx.poll();\n        this.dy.poll();\n        this.Button0.poll();\n        this.Button1.poll();\n        this.Button2.poll();\n        this.Button3.poll();\n        this.Button4.poll();\n\n        return this;\n    }\n\n    onMouseEvent(e)\n    {\n        let { key, event } = e;\n        switch(key)\n        {\n            case 0:\n                this.Button0.update(event, e.value);\n                break;\n            case 1:\n                this.Button1.update(event, e.value);\n                break;\n            case 2:\n                this.Button2.update(event, e.value);\n                break;\n            case 3:\n                this.Button3.update(event, e.value);\n                break;\n            case 4:\n                this.Button4.update(event, e.value);\n                break;\n            case 'pos':\n                this.x.update(event, e.x);\n                this.y.update(event, e.y);\n                this.dx.update(event, e.dx);\n                this.dy.update(event, e.dy);\n                \n                // Cannot consume a position event.\n                return;\n        }\n\n        return true;\n    }\n}\n\nfunction onMouseDown(e)\n{\n    this._down = true;\n\n    let event = this._keyEvent;\n    event.key = e.button;\n    event.event = 'down';\n    event.value = 1;\n\n    let result = this.handler.call(undefined, event);\n\n    if (result)\n    {\n        if (document.activeElement === this.target)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n    }\n}\n\nfunction onMouseUp(e)\n{\n    if (this._down)\n    {\n        this._down = false;\n\n        let event = this._keyEvent;\n        event.key = e.button;\n        event.event = 'up';\n        event.value = 1;\n        \n        let result = this.handler.call(undefined, event);\n    \n        if (result)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n    }\n}\n\nfunction onMouseMove(e)\n{\n    let element = this.target;\n    let { clientWidth, clientHeight } = element;\n\n    let rect = this.target.getBoundingClientRect();\n\n    let dx = e.movementX / clientWidth;\n    let dy = e.movementY / clientHeight;\n    let x = (e.clientX - rect.left) / clientWidth;\n    let y = (e.clientY - rect.top) / clientHeight;\n\n    let event = this._posEvent;\n    event.x = x;\n    event.y = y;\n    event.dx = dx;\n    event.dy = dy;\n\n    let result = this.handler.call(undefined, event);\n\n    if (typeof result !== 'undefined')\n    {\n        throw new Error(`Return value must be 'undefined'. Mouse position and movement events cannot be consumed.`);\n    }\n}\n\nfunction onContextMenu(e)\n{\n    e.preventDefault();\n    e.stopPropagation();\n    return false;\n}\n\nconst INNER_HTML = `\n<kbd></kbd>`;\nconst INNER_STYLE = `\n:host {\n    display: inline-block;\n}\nkbd {\n    background-color: #EEEEEE;\n    border-radius: 3px;\n    border: 1px solid #B4B4B4;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, .2), 0 2px 0 0 rgba(255, 255, 255, .7) inset;\n    color: #333333;\n    font-size: 0.85em;\n    font-weight: 700;\n    line-height: 1;\n    padding: 2px 4px;\n    white-space: nowrap;\n}\n`;\n\nconst TEMPLATE_KEY = Symbol('template');\nconst STYLE_KEY = Symbol('style');\n\nclass InputKey extends HTMLElement\n{\n    static toInputMap(nodes)\n    {\n        let inputMap = {};\n        \n        for(let node of nodes)\n        {\n            if (node instanceof InputKey)\n            {\n                let inputName = node.input;\n    \n                let keys;\n                if (inputName in inputMap)\n                {\n                    keys = inputMap[inputName];\n                }\n                else\n                {\n                    inputMap[inputName] = keys = [];\n                }\n    \n                let inputType = node.type;\n                switch(inputType)\n                {\n                    case 'action':\n                        keys.push({\n                            key: node.key,\n                            event: node.event,\n                        });\n                        break;\n                    case 'range':\n                        keys.push({\n                            key: node.key,\n                            scale: node.scale,\n                        });\n                        break;\n                    default:\n                        throw new Error('Unknown input type.');\n                }\n            }\n        }\n\n        return inputMap;\n    }\n\n    static get [TEMPLATE_KEY]()\n    {\n        let template = document.createElement('template');\n        template.innerHTML = INNER_HTML;\n        Object.defineProperty(this, TEMPLATE_KEY, { value: template });\n        return template;\n    }\n\n    static get [STYLE_KEY]()\n    {\n        let style = document.createElement('style');\n        style.innerHTML = INNER_STYLE;\n        Object.defineProperty(this, STYLE_KEY, { value: style });\n        return style;\n    }\n\n    /** @override */\n    static get observedAttributes()\n    {\n        return [\n            'input',\n            'key',\n            'scale',\n            'event'\n        ];\n    }\n\n    constructor()\n    {\n        super();\n\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.constructor[TEMPLATE_KEY].content.cloneNode(true));\n        this.shadowRoot.appendChild(this.constructor[STYLE_KEY].cloneNode(true));\n\n        this.keyElement = this.shadowRoot.querySelector('kbd');\n    }\n\n    /** @override */\n    attributeChangedCallback(attribute, prev, value)\n    {\n        switch(attribute)\n        {\n            case 'key':\n                this.keyElement.textContent = value;\n                break;\n        }\n    }\n\n    get type() { return this.hasAttribute('event') ? 'action' : 'range'; }\n\n    get input() { return this.getAttribute('input'); }\n    set input(value) { this.setAttribute('input', value); }\n\n    get key() { return this.getAttribute('key'); }\n    set key(value) { this.setAttribute('key', value); }\n\n    get scale() { return Number(this.getAttribute('scale')); }\n    set scale(value) { this.setAttribute('scale', value); }\n\n    get event() { return this.getAttribute('event'); }\n    set event(value) { this.setAttribute('event', value); }\n}\nwindow.customElements.define('input-key', InputKey);\n\nclass Input\n{\n    constructor(inputName, inputType)\n    {\n        this.inputName = inputName;\n        this.inputType = inputType;\n        \n        this.value = 0;\n\n        this._onchange = null;\n        this._eventListeners = new Map();\n    }\n\n    update(value)\n    {\n        if (this.value !== value)\n        {\n            this.value = value;\n            \n            if (this._eventListeners.has('change'))\n            {\n                for(let listener of this._eventListeners.get('change'))\n                {\n                    listener.call(undefined, this);\n                }\n            }\n\n            return true;\n        }\n        return false;\n    }\n\n    get onchange()\n    {\n        return this._onchange;\n    }\n\n    set onchange(callback)\n    {\n        if (this._onchange)\n        {\n            this.removeEventListener('change', this._onchange);\n        }\n\n        this._onchange = callback;\n        this.addEventListener('change', callback);\n    }\n\n    addEventListener(event, listener)\n    {\n        if (this._eventListeners.has(event))\n        {\n            let listeners = this._eventListeners.get(event);\n            listeners.push(listener);\n        }\n        else\n        {\n            this._eventListeners.set(event, [ listener ]);\n        }\n    }\n\n    removeEventListener(event, listener)\n    {\n        if (this._eventListeners.has(event))\n        {\n            let listeners = this._eventListeners.get(event);\n            listeners.splice(listeners.indexOf(listener), 1);\n        }\n    }\n\n    /** @override */\n    toString()\n    {\n        return this.value;\n    }\n}\n\n// TODO: Maybe this should be InputMap.getContext()?\n\nconst INNER_HTML$1 = `\n<table>\n    <thead>\n        <tr class=\"header\">\n            <th id=\"title\" colspan=3>input-context</th>\n            <th id=\"poll\">&nbsp;</th>\n        </tr>\n        <tr class=\"hint\">\n            <th>input</th>\n            <th>key</th>\n            <th>mod</th>\n            <th>value</th>\n        </tr>\n    </thead>\n    <tbody>\n    </tbody>\n</table>\n<slot></slot>`;\nconst INNER_STYLE$1 = `\n:host {\n    display: inline-block;\n}\nslot {\n    display: none;\n}\ntable {\n    border-collapse: collapse;\n}\ntable, th, td {\n    border: 1px solid gray;\n}\n#poll {\n    position: relative;\n    font-size: 0.9em;\n}\n#poll:after {\n    content: \"(poll)\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: -1;\n    opacity: 0.1;\n    font-family: monospace;\n    letter-spacing: 3px;\n    overflow: hidden;\n}\n.hint > th {\n    font-size: 0.5em;\n    font-family: monospace;\n    padding: 0 10px;\n    letter-spacing: 3px;\n    background-color: #AAA;\n    color: #666666;\n}\nth, td {\n    padding: 5px 10px;\n}\ntd {\n    text-align: center;\n}\nkbd {\n    display: inline-block;\n    background-color: #EEEEEE;\n    border-radius: 3px;\n    border: 1px solid #B4B4B4;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, .2), 0 2px 0 0 rgba(255, 255, 255, .7) inset;\n    color: #333333;\n    font-size: 0.85em;\n    font-weight: 700;\n    line-height: 1;\n    padding: 2px 4px;\n    white-space: nowrap;\n}\noutput {\n    font-family: monospace;\n    border-radius: 0.3em;\n    padding: 3px;\n}\n.flash {\n    animation: fadein 4s;\n}\n@keyframes fadein {\n    0%, 10% { background-color: rgba(0, 0, 255, 0.3); }\n    100% { background-color: rgba(0, 0, 255, 0); }\n}\n`;\n\nclass InputKeyPair\n{\n    constructor(keyName, keyEvent, scale)\n    {\n        this.keyName = keyName;\n        this.keyEvent = keyEvent;\n        this.scale = scale;\n\n        this.value = 0;\n    }\n\n    consumeKey()\n    {\n        this.value = 0;\n    }\n\n    updateKey(e, keyName)\n    {\n        // NOTE: This condition is only really used for parameterized key events.\n        if (keyName === this.keyName)\n        {\n            if (this.keyEvent)\n            {\n                if (this.keyEvent === e.event)\n                {\n                    this.value = e.value * this.scale;\n                    return true;\n                }\n            }\n            else\n            {\n                switch(e.event)\n                {\n                    case 'down':\n                        this.value = this.scale;\n                        return true;\n                    case 'up':\n                        this.value = 0;\n                        return true;\n                    default:\n                        this.value = e.value * this.scale;\n                        return;\n                }\n            }\n        }\n    }\n}\n\nconst NONE_POLL_TEXT = '✗';\nconst ACTIVE_POLL_TEXT = '✓';\n\nconst TEMPLATE_KEY$1 = Symbol('template');\nconst STYLE_KEY$1 = Symbol('style');\n\nconst POLL_WARNING_TIME = 3000;\n\nclass InputContext extends HTMLElement\n{\n    static get [TEMPLATE_KEY$1]()\n    {\n        let template = document.createElement('template');\n        template.innerHTML = INNER_HTML$1;\n        Object.defineProperty(this, TEMPLATE_KEY$1, { value: template });\n        return template;\n    }\n\n    static get [STYLE_KEY$1]()\n    {\n        let style = document.createElement('style');\n        style.innerHTML = INNER_STYLE$1;\n        Object.defineProperty(this, STYLE_KEY$1, { value: style });\n        return style;\n    }\n\n    /** @override */\n    static get observedAttributes()\n    {\n        return [\n            'for',\n            'strict',\n            'onattach',\n            'ondetach',\n            // ...listening for built-in attribs...\n            'id',\n            'class',\n        ];\n    }\n\n    constructor(inputMap = null)\n    {\n        super();\n\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.constructor[TEMPLATE_KEY$1].content.cloneNode(true));\n        this.shadowRoot.appendChild(this.constructor[STYLE_KEY$1].cloneNode(true));\n\n        this._onattach = null;\n        this._ondetach = null;\n\n        this._titleElement = this.shadowRoot.querySelector('#title');\n        this._pollElement = this.shadowRoot.querySelector('#poll');\n\n        this._tableBody = this.shadowRoot.querySelector('tbody');\n        this._children = this.shadowRoot.querySelector('slot');\n        this._tableInputs = {};\n\n        this._lastPollTime = 0;\n        this._pollWarningTimeoutHandle = 0;\n        this._animationFrameHandle = 0;\n\n        this._inputTarget = null;\n        this._inputMap = inputMap;\n        this._inputs = {};\n        this._inputKeys = {};\n        this._keys = {};\n\n        this.onInputEvent = this.onInputEvent.bind(this);\n        this.onAnimationFrame = this.onAnimationFrame.bind(this);\n\n        if (inputMap)\n        {\n            parseInputMapping(this, inputMap);\n        }\n    }\n\n    /** @override */\n    connectedCallback()\n    {\n        if (!this.hasAttribute('for')) this.setAttribute('for', '');\n\n        // Setup keys and inputs from the input mapping\n        if (!this._inputMap)\n        {\n            this._inputMap = {};\n\n            const childInputMap = InputKey.toInputMap(this._children.assignedNodes());\n            const inputMapSource = this.src;\n    \n            if (inputMapSource)\n            {\n                fetch(inputMapSource)\n                    .then(blob => blob.json())\n                    .then(data => {\n                        this._inputMap = { ...data, ...childInputMap };\n                        parseInputMapping(this, this._inputMap);\n                    });\n            }\n            else\n            {\n                this._inputMap = { ...childInputMap };\n                parseInputMapping(this, this._inputMap);\n            }\n        }\n\n        // Check to see if polling cause it is easy to forget it :P\n        this._lastPollTime = 0;\n        this._pollWarningTimeoutHandle = setTimeout(() => {\n            if (this._lastPollTime <= 0)\n            {\n                this._pollElement.textContent = NONE_POLL_TEXT;\n                console.warn('[INPUT] No input updated. Did you forget to poll() the input context?');\n            }\n            else\n            {\n                this._pollElement.textContent = ACTIVE_POLL_TEXT;\n            }\n        }, POLL_WARNING_TIME);\n\n        this._animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n    }\n\n    /** @override */\n    disconnectedCallback()\n    {\n        cancelAnimationFrame(this._animationFrameHandle);\n        clearTimeout(this._pollWarningTimeoutHandle);\n    }\n\n    /** @override */\n    attributeChangedCallback(attribute, prev, value)\n    {\n        switch(attribute)\n        {\n            case 'for':\n                let target;\n                if (value)\n                {\n                    target = document.getElementById(value);\n                }\n                else\n                {\n                    target = document.querySelector('display-port') || document.querySelector('canvas');\n                }\n\n                if (this._inputTarget)\n                {\n                    this.detach();\n                }\n\n                if (target)\n                {\n                    this.attach(target);\n                }\n                break;\n            // Event handlers...\n            case 'onattach':\n                this.onattach = new Function('event', `with(document){with(this){${value}}}`).bind(this);\n                break;\n            case 'ondetach':\n                this.ondetach = new Function('event', `with(document){with(this){${value}}}`).bind(this);\n                break;\n            // NOTE: For debugging purposes...\n            case 'id':\n            case 'class':\n                this._titleElement.innerHTML = `input-context${this.className ? '.' + this.className : ''}${this.hasAttribute('id') ? '#' + this.getAttribute('id') : ''}`;\n                break;\n        }\n    }\n\n    get src() { return this.getAttribute('src'); }\n    set src(value) { this.setAttribute('src', value); }\n\n    get for() { return this.getAttribute('for'); }\n    set for(value) { this.setAttribute('for', value); }\n\n    get strict() { return this.hasAttribute('strict'); }\n    set strict(value) { if (value) this.setAttribute('strict', ''); else this.removeAttribute('strict'); }\n\n    get auto() { return this.hasAttribute('auto'); }\n    set auto(value) { if (value) this.setAttribute('auto', ''); else this.removeAttribute('auto'); }\n\n    get onattach() { return this._onattach; }\n    set onattach(value)\n    {\n        if (this._onattach) this.removeEventListener('attach', this._onattach);\n        this._onattach = value;\n        if (this._onattach) this.addEventListener('attach', value);\n    }\n\n    get ondetach() { return this._ondetach; }\n    set ondetach(value)\n    {\n        if (this._ondetach) this.removeEventListener('detach', this._ondetach);\n        this._ondetach = value;\n        if (this._ondetach) this.addEventListener('detach', value);\n    }\n\n    attach(targetElement)\n    {\n        if (!targetElement)\n        {\n            throw new Error('Cannot attach input context to null.');\n        }\n\n        if (this._inputTarget)\n        {\n            if (this._inputTarget !== targetElement)\n            {\n                throw new Error('Input context already attached to another element.');\n            }\n            else\n            {\n                // It's already attached.\n                return this;\n            }\n        }\n\n        let target = targetElement;\n        if (target)\n        {\n            if (target.canvas)\n            {\n                Keyboard.addInputEventListener(target, this.onInputEvent);\n                Mouse.addInputEventListener(target.canvas, this.onInputEvent);\n            }\n            else\n            {\n                Keyboard.addInputEventListener(target, this.onInputEvent);\n                Mouse.addInputEventListener(target, this.onInputEvent);\n            }\n\n            this.dispatchEvent(new CustomEvent('attach', {\n                composed: true, bubbles: false, detail: { eventTarget: target, inputCallback: this.onInputEvent }\n            }));\n        }\n\n        this._inputTarget = target;\n        return this;\n    }\n\n    detach()\n    {\n        if (!this._inputTarget) return this;\n\n        let target = this._inputTarget;\n        this._inputTarget = null;\n\n        if (target.canvas)\n        {\n            Keyboard.removeInputEventListener(target, this.onInputEvent);\n            Mouse.removeInputEventListener(target.canvas, this.onInputEvent);\n        }\n        else\n        {\n            Keyboard.removeInputEventListener(target, this.onInputEvent);\n            Mouse.removeInputEventListener(target, this.onInputEvent);\n        }\n\n        this.dispatchEvent(new CustomEvent('detach', {\n            composed: true, bubbles: false, detail: { eventTarget: target, inputCallback: this.onInputEvent }\n        }));\n\n        return this;\n    }\n\n    poll()\n    {\n        this._lastPollTime = performance.now();\n\n        // Update all inputs to the current key's values.\n        for(let inputName in this._inputs)\n        {\n            let input = this._inputs[inputName];\n            let inputType = input.inputType;\n            switch(inputType)\n            {\n                case 'action':\n                    // Action should be any key value.\n                    let consumed = false;\n                    for(let inputKey of this._inputKeys[inputName])\n                    {\n                        let value = inputKey.value;\n                        if (value)\n                        {\n                            input.update(value, inputKey);\n                            inputKey.consumeKey();\n                            consumed = true;\n                            break;\n                        }\n                    }\n                    if (!consumed)\n                    {\n                        input.update(0, null);\n                    }\n                    break;\n                case 'range':\n                    // Range should be sum of keys.\n                    let value = 0;\n                    for(let inputKey of this._inputKeys[inputName])\n                    {\n                        value += inputKey.value;\n                    }\n                    input.update(value, null);\n                    break;\n                default:\n                    throw new Error('Unknown input type.');\n            }\n        }\n    }\n\n    onInputEvent(e)\n    {\n        let eventType = e.type;\n        switch(eventType)\n        {\n            case 'key':\n                {\n                    const keyName = e.device + ':' + e.key;\n                    if (keyName in this._keys)\n                    {\n                        let flag = false;\n                        for(let key of this._keys[keyName])\n                        {\n                            if (key.updateKey(e, keyName))\n                            {\n                                flag = true;\n                            }\n                        }\n                        if (flag)\n                        {\n                            return true;\n                        }\n                    }\n                }\n                break;\n            case 'pos':\n                {\n                    const params = [\n                        'x',\n                        'y',\n                        'dx',\n                        'dy'\n                    ];\n                    for(let param of params)\n                    {\n                        e.value = e[param];\n                        const keyName = e.device + ':' + e.key + '.' + param;\n                        if (keyName in this._keys)\n                        {\n                            let flag = false;\n                            for(let key of this._keys[keyName])\n                            {\n                                if (key.updateKey(e, keyName))\n                                {\n                                    flag = true;\n                                }\n                            }\n                            if (flag)\n                            {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                break;\n            default:\n                throw new Error(`Unknown input event type '${eventType}'.`);\n        }\n    }\n\n    onAnimationFrame(now)\n    {\n        this._animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n\n        // If enabled, do auto-polling\n        if (this.auto) this.poll();\n\n        // Update all inputs to the current key's values.\n        for(let inputName in this._inputs)\n        {\n            let input = this._inputs[inputName];\n            let result;\n            if (input.value)\n            {\n                result = Number(input.value).toFixed(2);\n            }\n            else\n            {\n                result = 0;\n            }\n            let element = this._tableInputs[inputName];\n            if (element.textContent != result)\n            {\n                element.textContent = result;\n                let parent = element.parentNode;\n                element.parentNode.removeChild(element);\n                parent.appendChild(element);\n            }\n        }\n    }\n\n    getInput(inputName)\n    {\n        if (inputName in this._inputs)\n        {\n            return this._inputs[inputName];\n        }\n        else if (!this.strict)\n        {\n            let result = new Input(inputName, 'range');\n            this._inputs[inputName] = result;\n            return result;\n        }\n        else\n        {\n            throw new Error(`Cannot find input with name '${inputName}'.`);\n        }\n    }\n\n    getInputValue(inputName)\n    {\n        if (inputName in this._inputs)\n        {\n            return this._inputs[inputName].value;\n        }\n        else if (!this.strict)\n        {\n            return 0;\n        }\n        else\n        {\n            throw new Error(`Cannot find input with name '${inputName}'.`);\n        }\n    }\n}\nwindow.customElements.define('input-context', InputContext);\n\nfunction parseInputMapping(inputContext, inputMapping)\n{\n    for(let inputName in inputMapping)\n    {\n        let inputOptions = inputMapping[inputName];\n        if (Array.isArray(inputOptions))\n        {\n            for(let inputOption of inputOptions)\n            {\n                parseInputOption(inputContext, inputName, inputOption);\n                if (typeof inputOption === 'string')\n                {\n                    inputOption = { key: inputOption, event: 'down' };\n                }\n                appendInputOption(inputContext, inputName, inputOption);\n            }\n        }\n        else\n        {\n            parseInputOption(inputContext, inputName, inputOptions);\n            if (typeof inputOptions === 'string')\n            {\n                inputOptions = { key: inputOptions, event: 'down' };\n            }\n            appendInputOption(inputContext, inputName, inputOptions);\n        }\n    }\n}\n\nfunction evaluateInputOptionType(inputOption)\n{\n    if (typeof inputOption === 'object')\n    {\n        if ('type' in inputOption)\n        {\n            return inputOption.type;\n        }\n        else if ('scale' in inputOption)\n        {\n            return 'range';\n        }\n        else if ('event' in inputOption)\n        {\n            return 'action';\n        }\n        else\n        {\n            throw new Error(`Missing 'scale' or 'event' for input option '${inputName}'.`);\n        }\n    }\n    else if (typeof inputOption === 'string')\n    {\n        return 'action';\n    }\n    else\n    {\n        throw new Error('Invalid type for input mapping option.');\n    }\n}\n\nfunction appendInputOption(inputContext, inputName, inputOption)\n{\n    let row = document.createElement('tr');\n    \n    // Name\n    {\n        let inputCell = document.createElement('td');\n        inputCell.textContent = inputName;\n        inputCell.classList.add('name');\n        row.appendChild(inputCell);\n    }\n\n    // Key\n    {\n        let keyCell = document.createElement('td');\n        keyCell.classList.add('key');\n        let keyLabel = document.createElement('kbd');\n        keyLabel.textContent = inputOption.key;\n        keyCell.appendChild(keyLabel);\n        row.appendChild(keyCell);\n    }\n\n    // Mods\n    {\n        let modCell = document.createElement('td');\n        let modSample = document.createElement('samp');\n        let inputType = evaluateInputOptionType(inputOption);\n        switch(inputType)\n        {\n            case 'action':\n                modSample.textContent = inputOption.event;\n                break;\n            case 'range':\n                modSample.textContent = Number(inputOption.scale).toFixed(2);\n                break;\n            default:\n                modSample.textContent = '<?>';\n        }\n        modCell.classList.add('mod');\n        modCell.appendChild(modSample);\n        row.appendChild(modCell);\n    }\n\n    // Value\n    if (!(inputName in inputContext._tableInputs))\n    {\n        let outputCell = document.createElement('td');\n        let outputValue = document.createElement('output');\n        outputValue.textContent = 0;\n        outputValue.classList.add('flash');\n        outputCell.classList.add('value');\n        outputCell.appendChild(outputValue);\n        row.appendChild(outputCell);\n        inputContext._tableInputs[inputName] = outputValue;\n    }\n    else\n    {\n        let outputCell = document.createElement('td');\n        outputCell.classList.add('value');\n        row.appendChild(outputCell);\n    }\n\n    inputContext._tableBody.appendChild(row);\n}\n\nfunction parseInputOption(inputContext, inputName, inputOption)\n{\n    let inputType = evaluateInputOptionType(inputOption);\n    switch(inputType)\n    {\n        case 'action':\n            if (typeof inputOption === 'string')\n            {\n                parseActionOption(inputContext, inputName, { key: inputOption, event: 'down' });\n            }\n            else\n            {\n                parseActionOption(inputContext, inputName, inputOption);\n            }\n            break;\n        case 'range':\n            parseRangeOption(inputContext, inputName, inputOption);\n            break;\n        default:\n            throw new Error(`Unknown input type '${inputType}'.`);\n    }\n}\n\nfunction parseRangeOption(inputContext, inputName, inputOption)\n{\n    const { key, scale } = inputOption;\n\n    // Update _inputs, _inputKeys, _keys\n    let input;\n    let inputKeys;\n    if (inputName in inputContext._inputs)\n    {\n        input = inputContext._inputs[inputName];\n        inputKeys = inputContext._inputKeys[inputName];\n\n        if (input.inputType !== 'range')\n        {\n            throw new Error(`Cannot register mismatched 'range' type input for '${input.inputType}' type input '${inputName}'.`);\n        }\n    }\n    else\n    {\n        input = new Input(inputName, 'range');\n        inputKeys = [];\n\n        inputContext._inputs[inputName] = input;\n        inputContext._inputKeys[inputName] = inputKeys;\n    }\n\n    let keys;\n    if (key in inputContext._keys)\n    {\n        keys = inputContext._keys[key];\n    }\n    else\n    {\n        keys = [];\n        inputContext._keys[key] = keys;\n    }\n    \n    let inputKey = new InputKeyPair(key, null, scale);\n    keys.push(inputKey);\n    inputKeys.push(inputKey);\n}\n\nfunction parseActionOption(inputContext, inputName, inputOption)\n{\n    const { key, event } = inputOption;\n\n    // Update _inputs, _inputKeys, _keys\n    let input;\n    let inputKeys;\n    if (inputName in inputContext._inputs)\n    {\n        input = inputContext._inputs[inputName];\n        inputKeys = inputContext._inputKeys[inputName];\n\n        if (input.inputType !== 'action')\n        {\n            throw new Error(`Cannot register mismatched 'action' type input for '${input.inputType}' type input '${inputName}'.`);\n        }\n    }\n    else\n    {\n        input = new Input(inputName, 'action');\n        inputKeys = [];\n\n        inputContext._inputs[inputName] = input;\n        inputContext._inputKeys[inputName] = inputKeys;\n    }\n\n    let keys;\n    if (key in inputContext._keys)\n    {\n        keys = inputContext._keys[key];\n    }\n    else\n    {\n        keys = [];\n        inputContext._keys[key] = keys;\n    }\n    \n    let inputKey = new InputKeyPair(key, event, 1);\n    keys.push(inputKey);\n    inputKeys.push(inputKey);\n}\n\nexport { InputContext as I, Keyboard as K, Mouse as M, InputKey as a };\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import { vec3 as vec3$1, quat, mat4, mat3 } from 'gl-matrix';\n\nconst ORIGIN = vec3$1.fromValues(0, 0, 0);\nconst XAXIS = vec3$1.fromValues(1, 0, 0);\nconst YAXIS = vec3$1.fromValues(0, 1, 0);\nconst ZAXIS = vec3$1.fromValues(0, 0, 1);\n\nfunction create()\n{\n    return {\n        translation: vec3$1.create(),\n        rotation: quat.create(),\n        scale: vec3$1.fromValues(1, 1, 1)\n    };\n}\n\n/** This is the INVERSE of gluLookAt(). */\nfunction lookAt(transform, target = ORIGIN)\n{\n    const result = vec3$1.create();\n    vec3$1.subtract(result, target, transform.position);\n    vec3$1.normalize(result, result);\n    \n    const dotProduct = vec3$1.dot(ZAXIS, result);\n    if (Math.abs(dotProduct - (-1)) < Number.EPSILON)\n    {\n        quat.set(transform.rotation, 0, 0, 1, Math.PI);\n        return transform;\n    }\n    if (Math.abs(dot - 1) < Number.EPSILON)\n    {\n        quat.set(transform.rotation, 0, 0, 0, 1);\n        return transform;\n    }\n\n    vec3$1.cross(result, ZAXIS, result);\n    vec3$1.normalize(result, result);\n    const halfAngle = Math.acos(dotProduct) / 2;\n    const sineAngle = Math.sin(halfAngle);\n    transform.rotation[0] = result[0] * sineAngle;\n    transform.rotation[1] = result[1] * sineAngle;\n    transform.rotation[2] = result[2] * sineAngle;\n    transform.rotation[3] = Math.cos(halfAngle);\n    return transform;\n}\n\nfunction getTransformationMatrix(transform, dst = mat4.create())\n{\n    return mat4.fromRotationTranslationScale(dst, transform.rotation, transform.translation, transform.scale);\n}\n\nfunction getForwardVector(transform, dst = vec3$1.create())\n{\n    vec3$1.transformQuat(dst, ZAXIS, transform.rotation);\n    return dst;\n}\n\nfunction getUpVector(transform, dst = vec3$1.create())\n{\n    vec3$1.transformQuat(dst, YAXIS, transform.rotation);\n    return dst;\n}\n\nfunction getRightVector(transform, dst = vec3$1.create())\n{\n    vec3$1.transformQuat(dst, XAXIS, transform.rotation);\n    return dst;\n}\n\nvar Transform = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ORIGIN: ORIGIN,\n    XAXIS: XAXIS,\n    YAXIS: YAXIS,\n    ZAXIS: ZAXIS,\n    create: create,\n    lookAt: lookAt,\n    getTransformationMatrix: getTransformationMatrix,\n    getForwardVector: getForwardVector,\n    getUpVector: getUpVector,\n    getRightVector: getRightVector\n});\n\nclass SceneGraph\n{\n    constructor()\n    {\n        this.root = this.createSceneNode(create(), null);\n    }\n    \n    update()\n    {\n        this.root.updateWorldMatrix();\n    }\n\n    createSceneNode(transform = create(), parent = this.root)\n    {\n        const result = {\n            sceneGraph: this,\n            transform,\n            localMatrix: mat4.create(),\n            worldMatrix: mat4.create(),\n            parent: null,\n            children: [],\n            setParent(sceneNode)\n            {\n                if (this.parent)\n                {\n                    const index = this.parent.children.indexOf(this);\n                    this.parent.children.splice(index, 1);\n                }\n\n                if (sceneNode)\n                {\n                    sceneNode.children.push(this);\n                }\n\n                this.parent = parent;\n                return this;\n            },\n            updateWorldMatrix(parentWorldMatrix)\n            {\n                // NOTE: The reason we don't just use local matrix is because of accumulating errors on matrix updates.\n                // Consider when you scale from 0 to 1 over time. It would get stuck at 0. Using a \"source\" of data where we\n                // recompute the matrix prevents this.\n                getTransformationMatrix(this.transform, this.localMatrix);\n\n                if (parentWorldMatrix)\n                {\n                    mat4.multiply(this.worldMatrix, parentWorldMatrix, this.localMatrix);\n                }\n                else\n                {\n                    mat4.copy(this.worldMatrix, this.localMatrix);\n                }\n\n                for(const child of this.children)\n                {\n                    child.updateWorldMatrix(this.worldMatrix);\n                }\n            }\n        };\n\n        if (parent)\n        {\n            result.setParent(parent);\n        }\n        return result;\n    }\n}\n\nfunction create$1(position, texcoord, normal, indices, color = undefined)\n{\n    if (!color)\n    {\n        const r = Math.random();\n        const g = Math.random();\n        const b = Math.random();\n        color = [];\n        for(let i = 0; i < position.length; i += 3)\n        {\n            color.push(r, g, b);\n        }\n    }\n\n    return {\n        position,\n        texcoord,\n        normal,\n        indices,\n        color,\n        elementSize: 3,\n        elementCount: indices.length,\n    };\n}\n\nfunction applyColor(r, g, b, geometry)\n{\n    for(let i = 0; i < geometry.color.length; i += 3)\n    {\n        geometry.color[i + 0] = r;\n        geometry.color[i + 1] = g;\n        geometry.color[i + 2] = b;\n    }\n    return geometry;\n}\n\nfunction applyTransformation(transformationMatrix, geometry)\n{\n    const position = geometry.position;\n    const normal = geometry.normal;\n\n    const inverseTransposeMatrix = mat3.create();\n    mat3.normalFromMat4(inverseTransposeMatrix, transformationMatrix);\n\n    const result = vec3$1.create();\n    for(let i = 0; i < position.length; i += 3)\n    {\n        result[0] = position[i + 0];\n        result[1] = position[i + 1];\n        result[2] = position[i + 2];\n        vec3$1.transformMat4(result, result, transformationMatrix);\n        position[i + 0] = result[0];\n        position[i + 1] = result[1];\n        position[i + 2] = result[2];\n\n        result[0] = normal[i + 0];\n        result[1] = normal[i + 1];\n        result[2] = normal[i + 2];\n        vec3$1.transformMat3(result, result, inverseTransposeMatrix);\n        normal[i + 0] = result[0];\n        normal[i + 1] = result[1];\n        normal[i + 2] = result[2];\n    }\n\n    return geometry;\n}\n\nfunction joinGeometry(...geometries)\n{\n    const position = [];\n    const texcoord = [];\n    const normal = [];\n    const indices = [];\n    const color = [];\n\n    let indexCount = 0;\n    for(const geometry of geometries)\n    {\n        position.push(...geometry.position);\n        texcoord.push(...geometry.texcoord);\n        normal.push(...geometry.normal);\n        color.push(...geometry.color);\n        indices.push(...geometry.indices.map((value) => value + indexCount));\n\n        indexCount += geometry.position.length / 3;\n    }\n\n    return create$1(position, texcoord, normal, indices, color);\n}\n\nfunction create$2(centered = false)\n{\n    const x = 0;\n    const y = 0;\n    const z = 0;\n    const width = 1;\n    const height = 1;\n    \n    let position;\n    if (centered)\n    {\n        const halfWidth = width * 0.5;\n        const halfHeight = height * 0.5;\n        position = [\n            x - halfWidth, y - halfHeight, z,\n            x + halfWidth, y - halfHeight, z,\n            x - halfWidth, y + halfHeight, z,\n            x + halfWidth, y + halfHeight, z,\n        ];\n    }\n    else\n    {\n        position = [\n            x, y, z,\n            x + width, y, z,\n            x, y + height, z,\n            x + width, y + height, z,\n        ];\n    }\n\n    const texcoord = [\n        0, 0,\n        1, 0,\n        0, 1,\n        1, 1,\n    ];\n    const normal = [\n        0, 0, 1,\n        0, 0, 1,\n        0, 0, 1,\n        0, 0, 1,\n    ];\n    const indices = [\n        0, 1, 2,\n        2, 1, 3,\n    ];\n    \n    return create$1(position, texcoord, normal, indices);\n}\n\nvar QuadGeometry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$2\n});\n\nfunction create$3(doubleSided = true)\n{\n    const frontPlane = create$2(true);\n    if (doubleSided)\n    {\n        const backPlane = create$2(true);\n        const transformationMatrix = mat4.fromYRotation(mat4.create(), Math.PI);\n        applyTransformation(transformationMatrix, backPlane);\n        applyColor(frontPlane.color[0], frontPlane.color[1], frontPlane.color[2], backPlane);\n        return joinGeometry(frontPlane, backPlane);\n    }\n    else\n    {\n        return frontPlane;\n    }\n}\n\nvar PlaneGeometry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$3\n});\n\nfunction create$4(front = true, back = true, top = true, bottom = true, left = true, right = true)\n{\n    const HALF_PI = Math.PI / 2;\n    const halfWidth = 0.5;\n    const halfHeight = 0.5;\n    const halfDepth = 0.5;\n\n    const transformationMatrix = mat4.create();\n    const faces = [];\n    \n    // Front\n    if (front)\n    {\n        const frontPlane = create$3(false);\n        mat4.fromTranslation(transformationMatrix, [0, 0, halfDepth]);\n        applyTransformation(transformationMatrix, frontPlane);\n        faces.push(frontPlane);\n    }\n    // Top\n    if (top)\n    {\n        const topPlane = create$3(false);\n        mat4.fromXRotation(transformationMatrix, -HALF_PI);\n        mat4.translate(transformationMatrix, transformationMatrix, [0, 0, halfHeight]);\n        applyTransformation(transformationMatrix, topPlane);\n        faces.push(topPlane);\n    }\n    // Back\n    if (back)\n    {\n        const backPlane = create$3(false);\n        mat4.fromYRotation(transformationMatrix, Math.PI);\n        mat4.translate(transformationMatrix, transformationMatrix, [0, 0, halfDepth]);\n        applyTransformation(transformationMatrix, backPlane);\n        faces.push(backPlane);\n    }\n    // Bottom\n    if (bottom)\n    {\n        const bottomPlane = create$3(false);\n        mat4.fromXRotation(transformationMatrix, HALF_PI);\n        mat4.translate(transformationMatrix, transformationMatrix, [0, 0, halfHeight]);\n        applyTransformation(transformationMatrix, bottomPlane);\n        faces.push(bottomPlane);\n    }\n    // Left\n    if (left)\n    {\n        const leftPlane = create$3(false);\n        mat4.fromYRotation(transformationMatrix, -HALF_PI);\n        mat4.translate(transformationMatrix, transformationMatrix, [0, 0, halfWidth]);\n        applyTransformation(transformationMatrix, leftPlane);\n        faces.push(leftPlane);\n    }\n    // Right\n    if (right)\n    {\n        const rightPlane = create$3(false);\n        mat4.fromYRotation(transformationMatrix, HALF_PI);\n        mat4.translate(transformationMatrix, transformationMatrix, [0, 0, halfWidth]);\n        applyTransformation(transformationMatrix, rightPlane);\n        faces.push(rightPlane);\n    }\n\n    return joinGeometry(...faces);\n}\n\nvar CubeGeometry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$4\n});\n\nfunction create$5()\n{\n    const size = 1;\n    const fifthSize = size * 0.2;\n\n    const transformationMatrix = mat4.create();\n\n    const topRung = create$4(true, true, true, true, false, true);\n    mat4.fromTranslation(transformationMatrix, [fifthSize / 2, fifthSize * 2, 0]);\n    mat4.scale(transformationMatrix, transformationMatrix, [fifthSize * 2, fifthSize, fifthSize]);\n    applyTransformation(transformationMatrix, topRung);\n    applyColor(topRung.color[0], topRung.color[1], topRung.color[2], topRung);\n    \n    const bottomRung = create$4(true, true, true, true, false, true);\n    mat4.fromScaling(transformationMatrix, [fifthSize, fifthSize, fifthSize]);\n    applyTransformation(transformationMatrix, bottomRung);\n    applyColor(topRung.color[0], topRung.color[1], topRung.color[2], bottomRung);\n\n    const leftBase = create$4(true, true, true, true, true, true);\n    mat4.fromTranslation(transformationMatrix, [-fifthSize, 0, 0]);\n    mat4.scale(transformationMatrix, transformationMatrix, [fifthSize, size, fifthSize]);\n    applyTransformation(transformationMatrix, leftBase);\n    applyColor(topRung.color[0], topRung.color[1], topRung.color[2], leftBase);\n\n    return joinGeometry(leftBase, topRung, bottomRung);\n}\n\nvar GlyphFGeometry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$5\n});\n\nvar Geometry3D = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Quad: QuadGeometry,\n    Plane: PlaneGeometry,\n    Cube: CubeGeometry,\n    GlyphF: GlyphFGeometry,\n    create: create$1,\n    applyColor: applyColor,\n    applyTransformation: applyTransformation,\n    joinGeometry: joinGeometry\n});\n\nfunction create$6(position, texcoord, indices, color = undefined)\n{\n    if (!color)\n    {\n        const r = Math.random();\n        const g = Math.random();\n        const b = Math.random();\n        color = [];\n        for(let i = 0; i < position.length; i += 3)\n        {\n            color.push(r, g, b);\n        }\n    }\n\n    return {\n        position,\n        texcoord,\n        indices,\n        color,\n        elementSize: 2,\n        elementCount: indices.length,\n    };\n}\n\nfunction applyTransformation2D(transformationMatrix, geometry)\n{\n    const position = geometry.position;\n\n    const result = vec2.create();\n    for(let i = 0; i < position.length; i += 2)\n    {\n        result[0] = position[i + 0];\n        result[1] = position[i + 1];\n        vec3.transformMat3(result, result, transformationMatrix);\n        position[i + 0] = result[0];\n        position[i + 1] = result[1];\n    }\n\n    return geometry;\n}\n\nfunction joinGeometry2D(...geometries)\n{\n    const position = [];\n    const texcoord = [];\n    const indices = [];\n    const color = [];\n\n    let indexCount = 0;\n    for(const geometry of geometries)\n    {\n        position.push(...geometry.position);\n        texcoord.push(...geometry.texcoord);\n        color.push(...geometry.color);\n\n        for(let i = 0; i < geometry.indices.length; ++i)\n        {\n            const index = geometry.indices[i];\n            indices.push(index + indexCount);\n        }\n\n        indexCount += geometry.position.length / 2;\n    }\n\n    return create$6(position, texcoord, indices, color);\n}\n\nfunction create$7(centered = false)\n{\n    const x = 0;\n    const y = 0;\n    const width = 1;\n    const height = 1;\n    \n    let position;\n    if (centered)\n    {\n        const halfWidth = width * 0.5;\n        const halfHeight = height * 0.5;\n        position = [\n            x - halfWidth, y - halfHeight,\n            x + halfWidth, y - halfHeight,\n            x - halfWidth, y + halfHeight,\n            x + halfWidth, y + halfHeight,\n        ];\n    }\n    else\n    {\n        position = [\n            x, y,\n            x + width, y,\n            x, y + height,\n            x + width, y + height,\n        ];\n    }\n\n    const texcoord = [\n        0, 0,\n        1, 0,\n        0, 1,\n        1, 1,\n    ];\n    const indices = [\n        0, 1, 2,\n        2, 1, 3,\n    ];\n    \n    return create$6(position, texcoord, indices);\n}\n\nvar Quad2DGeometry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$7\n});\n\nfunction create$8()\n{\n    const size = 1;\n    const fifthSize = size * 0.2;\n\n    const transformationMatrix = mat3.create();\n\n    const topRung = create$7();\n    mat3.fromTranslation(transformationMatrix, [fifthSize / 2, fifthSize * 2]);\n    mat3.scale(transformationMatrix, transformationMatrix, [fifthSize * 2, fifthSize]);\n    applyTransformation2D(transformationMatrix, topRung);\n    applyColor(topRung.color[0], topRung.color[1], topRung.color[2], topRung);\n    \n    const bottomRung = create$7();\n    mat3.fromScaling(transformationMatrix, [fifthSize, fifthSize]);\n    applyTransformation2D(transformationMatrix, bottomRung);\n    applyColor(topRung.color[0], topRung.color[1], topRung.color[2], bottomRung);\n\n    const leftBase = create$7();\n    mat3.fromTranslation(transformationMatrix, [-fifthSize, 0]);\n    mat3.scale(transformationMatrix, transformationMatrix, [fifthSize, size]);\n    applyTransformation2D(transformationMatrix, leftBase);\n    applyColor(topRung.color[0], topRung.color[1], topRung.color[2], leftBase);\n\n    return joinGeometry2D(leftBase, topRung, bottomRung);\n}\n\nvar GlyphF2DGeometry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create$8\n});\n\nvar Geometry2D = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Quad2D: Quad2DGeometry,\n    GlyphF2D: GlyphF2DGeometry,\n    applyColor2D: applyColor,\n    create: create$6,\n    applyTransformation2D: applyTransformation2D,\n    joinGeometry2D: joinGeometry2D\n});\n\nfunction createShaderProgramInfo(gl, vertexShaderSource, fragmentShaderSource, sharedAttributeLayout = [])\n{\n    const vertexShaderHandle = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n    const fragmentShaderHandle = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n    const programHandle = createShaderProgram(gl, vertexShaderHandle, fragmentShaderHandle, sharedAttributeLayout);\n\n    // Don't forget to clean up the shaders! It's no longer needed...\n    gl.detachShader(programHandle, vertexShaderHandle);\n    gl.detachShader(programHandle, fragmentShaderHandle);\n    gl.deleteShader(vertexShaderHandle);\n    gl.deleteShader(fragmentShaderHandle);\n\n    // But do keep around the program :P\n    return {\n        handle: programHandle,\n        _gl: gl,\n        uniforms: createShaderProgramUniformSetters(gl, programHandle),\n        attributes: createShaderProgramAttributeSetters(gl, programHandle),\n        uniform(name, value)\n        {\n            // If the uniform exists, since it may have been optimized away by the compiler :(\n            if (name in this.uniforms)\n            {\n                this.uniforms[name](this._gl, value);\n            }\n            return this;\n        },\n        attribute(name, bufferInfo)\n        {\n            // If the attribute exists, since it may have been optimized away by the compiler :(\n            if (name in this.attributes)\n            {\n                this.attributes[name](this._gl, bufferInfo);\n            }\n            return this;\n        },\n        elementAttribute(bufferInfo)\n        {\n            this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, bufferInfo);\n            return this;\n        }\n    };\n}\n\nfunction createShader(gl, type, source)\n{\n    const shaderHandle = gl.createShader(type);\n    gl.shaderSource(shaderHandle, source);\n    gl.compileShader(shaderHandle);\n    if (!gl.getShaderParameter(shaderHandle, gl.COMPILE_STATUS))\n    {\n        const result = gl.getShaderInfoLog(shaderHandle);\n        gl.deleteShader(shaderHandle);\n        throw new Error(result);\n    }\n    return shaderHandle;\n}\n\nfunction createShaderProgram(gl, vertexShaderHandle, fragmentShaderHandle, sharedAttributeLayout = [])\n{\n    const programHandle = gl.createProgram();\n    gl.attachShader(programHandle, vertexShaderHandle);\n    gl.attachShader(programHandle, fragmentShaderHandle);\n\n    // Bind the attribute locations, (either this or use 'layout(location = ?)' in the shader)\n    // NOTE: Unfortunately, this must happen before program linking to take effect.\n    for(let i = 0; i < sharedAttributeLayout.length; ++i)\n    {\n        gl.bindAttribLocation(programHandle, i, sharedAttributeLayout[i]);\n    }\n\n    gl.linkProgram(programHandle);\n    if (!gl.getProgramParameter(programHandle, gl.LINK_STATUS))\n    {\n        const result = gl.getProgramInfoLog(programHandle);\n        gl.deleteProgram(programHandle);\n        throw new Error(result);\n    }\n    return programHandle;\n}\n\nfunction createShaderProgramAttributeSetters(gl, programHandle)\n{\n    const dst = {};\n    const attributeCount = gl.getProgramParameter(programHandle, gl.ACTIVE_ATTRIBUTES);\n    for(let i = 0; i < attributeCount; ++i)\n    {\n        const activeAttributeInfo = gl.getActiveAttrib(programHandle, i);\n        if (!activeAttributeInfo) break;\n        const attributeName = activeAttributeInfo.name;\n        const attributeIndex = gl.getAttribLocation(programHandle, attributeName);\n        dst[attributeName] = createShaderProgramAttributeSetter(attributeIndex);\n    }\n    return dst;\n}\n\nfunction createShaderProgramAttributeSetter(attributeIndex)\n{\n    const result = (function(attributeIndex, gl, bufferInfo) {\n        gl.enableVertexAttribArray(attributeIndex);\n        gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.handle);\n        gl.vertexAttribPointer(attributeIndex,\n            bufferInfo.size,\n            bufferInfo.type,\n            bufferInfo.normalize,\n            bufferInfo.stride,\n            bufferInfo.offset);\n    }).bind(null, attributeIndex);\n    result.location = attributeIndex;\n    return result;\n}\n\nfunction createShaderProgramUniformSetters(gl, programHandle)\n{\n    const dst = {};\n    const ctx = {\n        textureUnit: 0\n    };\n    const uniformCount = gl.getProgramParameter(programHandle, gl.ACTIVE_UNIFORMS);\n    for(let i = 0; i < uniformCount; ++i)\n    {\n        const activeUniformInfo = gl.getActiveUniform(programHandle, i);\n        if (!activeUniformInfo) break;\n\n        let uniformName = activeUniformInfo.name;\n        if (uniformName.substring(uniformName.length - 3) === '[0]')\n        {\n            uniformName = uniformName.substring(0, uniformName.length - 3);\n        }\n        const uniformSetter = createShaderProgramUniformSetter(gl, programHandle, activeUniformInfo, ctx);\n        dst[uniformName] = uniformSetter;\n    }\n    return dst;\n}\n\nfunction createShaderProgramUniformSetter(gl, programHandle, uniformInfo, ctx)\n{\n    const name = uniformInfo.name;\n    const location = gl.getUniformLocation(programHandle, name);\n    const type = uniformInfo.type;\n    const array = (uniformInfo.size > 1 && name.substring(name.length - 3) === '[0]');\n\n    const uniformTypeInfo = getUniformTypeInfo(gl, type);\n    if (!uniformTypeInfo)\n    {\n        throw new Error(`Unknown uniform type 0x${type.toString(16)}.`);\n    }\n\n    switch(type)\n    {\n        case gl.FLOAT:\n        case gl.INT:\n        case gl.BOOL:\n            return uniformTypeInfo.setter(location, array);\n        case gl.SAMPLER_2D:\n        case gl.SAMPLER_CUBE:\n            let textureUnit;\n            if (array)\n            {\n                textureUnit = [];\n                for(let i = 0; i < uniformInfo.size; ++i)\n                {\n                    textureUnit.push(ctx.textureUnit++);\n                }\n            }\n            else\n            {\n                textureUnit = ctx.textureUnit++;\n            }\n            return uniformTypeInfo.setter(location, array, textureUnit);\n        default:\n            return uniformTypeInfo.setter(location);\n    }\n}\n\nlet UNIFORM_TYPE_MAP = null;\nfunction getUniformTypeInfo(gl, type)\n{\n    if (UNIFORM_TYPE_MAP) return UNIFORM_TYPE_MAP[type];\n\n    // NOTE: Instead of setting the active texture index for the sampler, we instead designate\n    // active texture indices based on the program and number of sampler uniforms it has.\n    // This way, we simply pass the texture handle to the uniform setter and it will find\n    // the associated texture index by name. This is okay since we usually expect each\n    // program to have it's own unqiue active texture list, therefore we can take advantage\n    // of the reassignment of sampler uniforms to perform a lookup first instead.\n    // This does mean that when creating a texture, you don't need to specify which active\n    // texture index it should be in. This is handled by the shader program initialization,\n    // and is assigned when the program is used.\n    function samplerSetter(textureTarget, location, array = false, textureUnit = 0)\n    {\n        if (array && !Array.isArray(textureUnit)) throw new Error('Cannot create sampler array for non-array texture unit.');\n        const result = (array\n            ? function(location, textureUnits, textureTarget, gl, textures) {\n                gl.uniform1fv(location, textureUnits);\n                textures.forEach((texture, index) => {\n                    gl.activeTexture(gl.TEXTURE0 + textureUnits[index]);\n                    gl.bindTexture(textureTarget, texture);\n                });\n            }\n            : function(location, textureUnit, textureTarget, gl, texture) {\n                gl.uniform1i(location, textureUnit);\n                gl.activeTexture(gl.TEXTURE0 + textureUnit);\n                gl.bindTexture(textureTarget, texture);\n            })\n            .bind(null, location, textureUnit, textureTarget);\n        result.location = location;\n        return result;\n    }\n\n    UNIFORM_TYPE_MAP = {\n        [gl.FLOAT]: {\n            TypedArray: Float32Array,\n            size: 4,\n            setter(location, array = false)\n            {\n                const result = (array\n                    ? function(location, gl, value) { gl.uniform1fv(location, value); }\n                    : function(location, gl, value) { gl.uniform1f(location, value); })\n                    .bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.FLOAT_VEC2]: {\n            TypedArray: Float32Array,\n            size: 8,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform2fv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.FLOAT_VEC3]: {\n            TypedArray: Float32Array,\n            size: 12,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform3fv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.FLOAT_VEC4]: {\n            TypedArray: Float32Array,\n            size: 16,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform4fv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.INT]: {\n            TypedArray: Int32Array,\n            size: 4,\n            setter(location, array = false)\n            {\n                const result = (array\n                    ? function(location, gl, value) { gl.uniform1iv(location, value); }\n                    : function(location, gl, value) { gl.uniform1i(location, value); })\n                    .bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.INT_VEC2]: {\n            TypedArray: Int32Array,\n            size: 8,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform2iv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.INT_VEC3]: {\n            TypedArray: Int32Array,\n            size: 12,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform3iv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.INT_VEC4]: {\n            TypedArray: Int32Array,\n            size: 16,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform4iv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.BOOL]: {\n            TypedArray: Uint32Array,\n            size: 4,\n            setter(location, array = false)\n            {\n                const result = (array\n                    ? function(location, gl, value) { gl.uniform1iv(location, value); }\n                    : function(location, gl, value) { gl.uniform1i(location, value); })\n                    .bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.BOOL_VEC2]: {\n            TypedArray: Uint32Array,\n            size: 8,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform2iv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.BOOL_VEC3]: {\n            TypedArray: Uint32Array,\n            size: 12,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform3iv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.BOOL_VEC4]: {\n            TypedArray: Uint32Array,\n            size: 16,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniform4iv(location, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.FLOAT_MAT2]: {\n            TypedArray: Float32Array,\n            size: 16,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniformMatrix2fv(location, false, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.FLOAT_MAT3]: {\n            TypedArray: Float32Array,\n            size: 36,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniformMatrix3fv(location, false, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.FLOAT_MAT4]: {\n            TypedArray: Float32Array,\n            size: 64,\n            setter(location)\n            {\n                const result = (function(location, gl, value) { gl.uniformMatrix4fv(location, false, value); }).bind(null, location);\n                result.location = location;\n                return result;\n            }\n        },\n        [gl.SAMPLER_2D]: {\n            TypedArray: null,\n            size: 0,\n            setter: samplerSetter.bind(null, gl.TEXTURE_2D)\n        },\n        [gl.SAMPLER_CUBE]: {\n            TypedArray: null,\n            size: 0,\n            setter: samplerSetter.bind(null, gl.TEXTURE_CUBE)\n        },\n        // UNSIGNED_INT\n        // UNSIGNED_INT_VEC2\n        // UNSIGNED_INT_VEC3\n        // UNSIGNED_INT_VEC4\n        // FLOAT_MAT2x3\n        // FLOAT_MAT2x4\n        // FLOAT_MAT3x2\n        // FLOAT_MAT3x4\n        // FLOAT_MAT4x2\n        // FLOAT_MAT4x3\n        // SAMPLER_3D\n        // SAMPLER_2D_SHADOW\n        // SAMPLER_2D_ARRAY\n        // SAMPLER_2D_ARRAY_SHADOW\n        // INT_SAMPLER_2D\n        // INT_SAMPLER_3D\n        // INT_SAMPLER_CUBE\n        // INT_SAMPLER_2D_ARRAY\n        // UNSIGNED_INT_SAMPLER_2D\n        // UNSIGNED_INT_SAMPLER_3D\n        // UNSIGNED_INT_SAMPLER_CUBE\n        // UNSIGNED_INT_SAMPLER_2D_ARRAY\n    };\n    return UNIFORM_TYPE_MAP[type];\n}\n\nfunction createBufferInfo(gl, type, data, size, normalize = false, stride = 0, offset = 0, bufferTarget = gl.ARRAY_BUFFER, usage = gl.STATIC_DRAW)\n{\n    const bufferHandle = gl.createBuffer();\n\n    const bufferTypeInfo = getBufferTypeInfo(gl, type);\n    if (!bufferTypeInfo) throw new Error(`Unknown uniform type 0x${type.toString(16)}.`);    \n\n    if (data instanceof bufferTypeInfo.TypedArray)\n    {\n        gl.bindBuffer(bufferTarget, bufferHandle);\n        gl.bufferData(bufferTarget, data, usage);\n    }\n    else if (Array.isArray(data))\n    {\n        data = new bufferTypeInfo.TypedArray(data);\n        gl.bindBuffer(bufferTarget, bufferHandle);\n        gl.bufferData(bufferTarget, data, usage);\n    }\n    else if (typeof data === 'number')\n    {\n        gl.bindBuffer(bufferTarget, bufferHandle);\n        gl.bufferData(bufferTarget, data, usage);\n    }\n    else\n    {\n        throw new Error(`Unknown buffer data type - can only be a TypedArray, an Array, or a number.`);\n    }\n\n    return {\n        handle: bufferHandle,\n        size,\n        type,\n        normalize,\n        stride,\n        offset,\n        /** TODO: It binds the buffer to ARRAY_BUFFER, does this still work for ELEMENT_ARRAY_BUFFER? */\n        updateData(gl, data, offset = 0, usage = gl.STATIC_DRAW)\n        {\n            // NOTE: All vertex array objects should NOT be bound. Otherwise, it will cause weird errors.\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.handle);\n            const bufferTypeInfo = getBufferTypeInfo(gl, type);\n            if (!(data instanceof bufferTypeInfo.TypedArray))\n            {\n                data = new bufferTypeInfo.TypedArray(data);\n            }\n\n            if (offset > 0)\n            {\n                gl.bufferSubData(gl.ARRAY_BUFFER, offset, data);\n            }\n            else\n            {\n                gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n            }\n        }\n    };\n}\n\nfunction createElementBufferInfo(gl, type, data, stride = 0, offset = 0, usage = gl.STATIC_DRAW)\n{\n    // NOTE: Element buffer arrays can only be UNSIGNED bytes/shorts/ints.\n    return createBufferInfo(gl, type, data, 1, false, stride, offset, gl.ELEMENT_ARRAY_BUFFER, usage);\n}\n\nlet BUFFER_TYPE_MAP = null;\nfunction getBufferTypeInfo(gl, type)\n{\n    if (BUFFER_TYPE_MAP) return BUFFER_TYPE_MAP[type];\n\n    BUFFER_TYPE_MAP = {\n        [gl.BYTE]: {\n            TypedArray: Int8Array,\n            size: 1\n        },\n        [gl.SHORT]: {\n            TypedArray: Int16Array,\n            size: 2\n        },\n        [gl.UNSIGNED_BYTE]: {\n            TypedArray: Uint8Array,\n            size: 1\n        },\n        [gl.UNSIGNED_SHORT]: {\n            TypedArray: Uint16Array,\n            size: 2\n        },\n        [gl.FLOAT]: {\n            TypedArray: Float32Array,\n            size: 4\n        },\n        // HALF_FLOAT\n    };\n\n    return BUFFER_TYPE_MAP[type];\n}\n\nfunction createVertexArrayInfo(gl, sharedAttributeLayout = [])\n{\n    const vertexArrayHandle = gl.createVertexArray();\n\n    const attributes = {};\n    for(let i = 0; i < sharedAttributeLayout.length; ++i)\n    {\n        attributes[sharedAttributeLayout[i]] = {\n            location: i,\n            setter: createShaderProgramAttributeSetter(i)\n        };\n    }\n\n    return {\n        handle: vertexArrayHandle,\n        attributes: attributes,\n        _gl: gl,\n        elementBuffer: null,\n        elementType: null,\n        elementCount: 0,\n        attributeBuffers: {},\n        setElementCount(count)\n        {\n            this.elementCount = count;\n            return this;\n        },\n        elementAttribute(bufferInfo)\n        {\n            this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, bufferInfo.handle);\n\n            const bufferTypeInfo = getBufferTypeInfo(this._gl, bufferInfo.type);\n            // NOTE: Number of bytes in buffer divided by the number of bytes of element type\n            this.elementCount = this._gl.getBufferParameter(this._gl.ELEMENT_ARRAY_BUFFER, this._gl.BUFFER_SIZE) / bufferTypeInfo.size;\n            this.elementBuffer = bufferInfo;\n            this.elementType = bufferInfo.type;\n            return this;\n        },\n        sharedAttribute(name, bufferInfo)\n        {\n            if (name in this.attributes)\n            {\n                this.attributes[name].setter(this._gl, bufferInfo);\n            }\n            this.attributeBuffers[name] = bufferInfo;\n            return this;\n        },\n        programAttribute(name, bufferInfo, ...programInfos)\n        {\n            for(const program of programInfos)\n            {\n                program.attribute(name, bufferInfo);\n            }\n            this.attributeBuffers[name] = bufferInfo;\n            return this;\n        }\n    };\n}\n\nfunction createTextureInfo(gl)\n{\n    const textureHandle = gl.createTexture();\n    return {\n        handle: textureHandle\n    };\n}\n\nfunction createDrawInfo(programInfo, vertexArrayInfo, uniforms, drawArrayOffset = 0, drawMode = null)\n{\n    return {\n        programInfo,\n        vertexArrayInfo,\n        uniforms,\n        drawArrayOffset,\n        drawMode\n    };\n}\n\nfunction draw(gl, drawInfos, sharedUniforms = {})\n{\n    for(const drawInfo of drawInfos)\n    {\n        const programInfo = drawInfo.programInfo;\n        const vertexArrayInfo = drawInfo.vertexArrayInfo;\n        const uniforms = drawInfo.uniforms;\n        const drawArrayOffset = drawInfo.drawArrayOffset;\n        const drawMode = drawInfo.drawMode || gl.TRIANGLES;\n\n        // Prepare program...\n        gl.useProgram(programInfo.handle);\n\n        // Prepare vertex array...\n        gl.bindVertexArray(vertexArrayInfo.handle);\n\n        // Prepare shared uniforms...\n        for(const [name, value] of Object.entries(sharedUniforms))\n        {\n            programInfo.uniform(name, value);\n        }\n\n        // Prepare uniforms...\n        for(const [name, value] of Object.entries(uniforms))\n        {\n            programInfo.uniform(name, value);\n        }\n\n        // Depends on buffers in attributes...\n        if (vertexArrayInfo.elementBuffer)\n        {\n            // NOTE: The offset is in BYTES, whereas drawArrayOffset is the number of elements.\n            gl.drawElements(drawMode, vertexArrayInfo.elementCount, vertexArrayInfo.elementType, drawArrayOffset * vertexArrayInfo.elementBuffer.size);\n        }\n        else\n        {\n            gl.drawArrays(drawMode, drawArrayOffset, vertexArrayInfo.elementCount);\n        }\n    }\n}\n\nexport { Geometry3D as G, SceneGraph as S, Transform as T, Geometry2D as a, createDrawInfo as b, createBufferInfo as c, createElementBufferInfo as d, createShader as e, createShaderProgram as f, createShaderProgramAttributeSetter as g, createShaderProgramAttributeSetters as h, createShaderProgramInfo as i, createShaderProgramUniformSetter as j, createShaderProgramUniformSetters as k, createTextureInfo as l, createVertexArrayInfo as m, draw as n, getBufferTypeInfo as o, getUniformTypeInfo as p };\n","async function loadImage(filepath, opts)\n{\n    return new Promise((resolve, reject) => {\n        let img = new Image();\n        img.addEventListener('load', () => {\n            resolve(img);\n        });\n        img.addEventListener('error', ev => {\n            reject(ev);\n        });\n        img.src = filepath;\n    });\n}\n\nvar ImageLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadImage: loadImage\n});\n\nasync function loadText(filepath, opts)\n{\n    let result = await fetch(filepath);\n    return result.text();\n}\n\nvar TextLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadText: loadText\n});\n\nasync function loadBytes(filepath, opts)\n{\n    let result = await fetch(filepath);\n    let buffer = await result.arrayBuffer();\n    return buffer;\n}\n\nvar ByteLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadBytes: loadBytes\n});\n\nasync function loadJSON(filepath, opts)\n{\n    let result = await fetch(filepath);\n    let json = await result.json();\n    return json;\n}\n\nvar JSONLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadJSON: loadJSON\n});\n\nasync function loadOBJ(filepath, opts)\n{\n    let result = await fetch(filepath);\n    let string = await result.text();\n    {\n        // console.log('ORIGINAL');\n        const attempts = 10;\n        for(let i = 0; i < attempts; ++i)\n        {\n            let then = performance.now();\n            parse(string);\n            let now = performance.now();\n        }\n        // console.log(sum / attempts);\n    }\n    {\n        // console.log('UPDATE');\n        const attempts = 10;\n        for(let i = 0; i < attempts; ++i)\n        {\n            let then = performance.now();\n            parse2(string);\n            let now = performance.now();\n        }\n        // console.log(sum / attempts);\n    }\n    return parse2(string);\n}\n\nfunction parse2(string)\n{\n    const vertexList = [];\n    const texcoordList = [];\n    const normalList = [];\n\n    const vertexIndices = [];\n    const texcoordIndices = [];\n    const normalIndices = [];\n\n    // # comments\n    const commentPattern = /^#.*/g;\n    // v float float float\n    const vertexPattern = /v\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/g;\n    // vn float float float\n    const normalPattern = /vn\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/g;\n    // vt float float float\n    const texcoordPattern = /vt\\s+(\\S+)\\s+(\\S+)/g;\n    // f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n    const facePattern = /f\\s+(([^\\/\\s]*)\\/([^\\/\\s]*)\\/?([^\\/\\s]*))\\s+(([^\\/\\s]*)\\/([^\\/\\s]*)\\/?([^\\/\\s]*))\\s+(([^\\/\\s]*)\\/([^\\/\\s]*)\\/?([^\\/\\s]*))(\\s+(([^\\/\\s]*)\\/([^\\/\\s]*)\\/?([^\\/\\s]*)))?/g;\n    // f float float float\n    const faceVertexPattern = /f\\s+([^\\/\\s]+)\\s+([^\\/\\s]+)\\s+([^\\/\\s]+)/g;\n\n    let quad = false;\n    let result = null;\n    let x, y, z, w;\n\n    // Remove all comments\n    string = string.replace(commentPattern, '');\n\n    // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n    while ((result = vertexPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        z = Number.parseFloat(result[3]);\n        vertexList.push(x);\n        vertexList.push(y);\n        vertexList.push(z);\n    }\n\n    // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n    while ((result = normalPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        z = Number.parseFloat(result[3]);\n        normalList.push(x);\n        normalList.push(y);\n        normalList.push(z);\n    }\n\n    // [\"vt 1.0 2.0\", \"1.0\", \"2.0\"]\n    while ((result = texcoordPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        texcoordList.push(x);\n        texcoordList.push(y);\n    }\n\n    // [\"f 1/1/1 2/2/2 3/3/3\", \"1/1/1\", \"1\", \"1\", \"1\", \"2/2/2\", \"2\", \"2\", \"2\", \"3/3/3\", \"3\", \"3\", \"3\", \"4/4/4\", \"4\", \"4\", \"4\"]\n    while ((result = facePattern.exec(string)) != null) {\n        // Vertex indices\n        x = Number.parseInt(result[2]);\n        if (Number.isNaN(x)) x = 1;\n        y = Number.parseInt(result[6]);\n        if (Number.isNaN(y)) y = 1;\n        z = Number.parseInt(result[10]);\n        if (Number.isNaN(z)) z = 1;\n        vertexIndices.push(x);\n        vertexIndices.push(y);\n        vertexIndices.push(z);\n\n        // Normal indices\n        x = Number.parseInt(result[4]);\n        if (Number.isNaN(x))\n        {\n            // No UVs.\n            x = Number.parseInt(result[3]);\n            y = Number.parseInt(result[7]);\n            z = Number.parseInt(result[11]);\n            normalIndices.push(x);\n            normalIndices.push(y);\n            normalIndices.push(z);\n\n            texcoordIndices.push(1);\n            texcoordIndices.push(1);\n            texcoordIndices.push(1);\n        }\n        else\n        {\n            // Maybe UVs.\n            y = Number.parseInt(result[8]);\n            if (Number.isNaN(y)) y = 1;\n            z = Number.parseInt(result[12]);\n            if (Number.isNaN(z)) z = 1;\n            normalIndices.push(x);\n            normalIndices.push(y);\n            normalIndices.push(z);\n\n            // UV indices\n            x = Number.parseInt(result[3]);\n            if (Number.isNaN(x)) x = 1;\n            y = Number.parseInt(result[7]);\n            if (Number.isNaN(y)) y = 1;\n            z = Number.parseInt(result[11]);\n            if (Number.isNaN(z)) z = 1;\n            texcoordIndices.push(x);\n            texcoordIndices.push(y);\n            texcoordIndices.push(z);\n        }\n\n        // Quad face\n        if (typeof result[13] !== 'undefined') {\n            \n            // Vertex indices\n            w = Number.parseInt(result[15]);\n            if (Number.isNaN(w)) w = 1;\n            vertexIndices.push(w);\n\n            // Normal indices\n            w = Number.parseInt(result[17]);\n            if (Number.isNaN(w))\n            {\n                // No UVs.\n                w = Number.parseInt(result[16]);\n                normalIndices.push(w);\n                texcoordIndices.push(1);\n            }\n            else\n            {\n                // Maybe UVs.\n                normalIndices.push(w);\n\n                w = Number.parseInt(result[16]);\n                texcoordIndices.push(w);\n            }\n\n            quad = true;\n        }\n    }\n\n    // [\"f 1 2 3 4\", \"1\", \"2\", \"3\", \"4\"]\n    while ((result = faceVertexPattern.exec(string)) != null) {\n        // Vertex indices\n        x = Number.parseInt(result[2]);\n        y = Number.parseInt(result[6]);\n        z = Number.parseInt(result[10]);\n        vertexIndices.push(x);\n        vertexIndices.push(y);\n        vertexIndices.push(z);\n\n        // UV indices\n        texcoordIndices.push(1);\n        texcoordIndices.push(1);\n        texcoordIndices.push(1);\n\n        // Normal indices\n        normalIndices.push(1);\n        normalIndices.push(1);\n        normalIndices.push(1);\n\n        // Quad face\n        if (typeof result[13] !== 'undefined') {\n\n            // Vertex indices\n            w = Number.parseInt(result[14]);\n            vertexIndices.push(w);\n\n            // UV indices\n            texcoordIndices.push(1);\n            // Normal indices\n            normalIndices.push(1);\n\n            quad = true;\n        }\n    }\n\n    let index, size;\n\n    size = vertexIndices.length;\n    const positions = new Float32Array(size * 3);\n    for (let i = 0; i < size; ++i) {\n        index = vertexIndices[i] - 1;\n        positions[i * 3 + 0] = vertexList[index * 3 + 0];\n        positions[i * 3 + 1] = vertexList[index * 3 + 1];\n        positions[i * 3 + 2] = vertexList[index * 3 + 2];\n    }\n\n    size = texcoordIndices.length;\n    const texcoords = new Float32Array(size * 2);\n    for (let i = 0; i < size; ++i) {\n        index = texcoordIndices[i] - 1;\n        texcoords[i * 2 + 0] = texcoordList[index * 2 + 0];\n        texcoords[i * 2 + 1] = texcoordList[index * 2 + 1];\n    }\n\n    size = normalIndices.length;\n    const normals = new Float32Array(size * 3);\n    for (let i = 0; i < size; ++i) {\n        index = normalIndices[i] - 1;\n        normals[i * 3 + 0] = normalList[index * 3 + 0];\n        normals[i * 3 + 1] = normalList[index * 3 + 1];\n        normals[i * 3 + 2] = normalList[index * 3 + 2];\n    }\n\n    // Must be either unsigned short or unsigned byte.\n    size = vertexIndices.length;\n    const indices = new Uint16Array(size);\n    for (let i = 0; i < size; ++i) {\n        indices[i] = i;\n    }\n\n    if (quad) {\n        console.warn('WebGL does not support quad faces, only triangles.');\n    }\n\n    return {\n        positions,\n        texcoords,\n        normals,\n        indices,\n    };\n}\n\nfunction parse(string)\n{\n    const vertexList = [];\n    const texcoordList = [];\n    const normalList = [];\n\n    const vertexIndices = [];\n    const texcoordIndices = [];\n    const normalIndices = [];\n\n    // # comments\n    const commentPattern = /^#.*/g;\n    // v float float float\n    const vertexPattern = /v( +[\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)/g;\n    // vn float float float\n    const normalPattern = /vn( +[\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)/g;\n    // vt float float float\n    const texcoordPattern = /vt( +[\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)/g;\n    // f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n    const facePattern = /f( +([\\d]*)\\/([\\d]*)\\/([\\d]*))( ([\\d]*)\\/([\\d]*)\\/([\\d]*))( ([\\d]*)\\/([\\d]*)\\/([\\d]*))( ([\\d]*)\\/([\\d]*)\\/([\\d]*))?/g;\n    // f float float float\n    const faceVertexPattern = /f( +[\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)( [\\d|\\.|\\+|\\-|e]+)/g;\n\n    let quad = false;\n    let result = null;\n    let x, y, z, w;\n\n    // Remove all comments\n    string = string.replace(commentPattern, '');\n\n    // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n    while ((result = vertexPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        z = Number.parseFloat(result[3]);\n        vertexList.push(x);\n        vertexList.push(y);\n        vertexList.push(z);\n    }\n\n    // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n    while ((result = normalPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        z = Number.parseFloat(result[3]);\n        normalList.push(x);\n        normalList.push(y);\n        normalList.push(z);\n    }\n\n    // [\"vt 1.0 2.0\", \"1.0\", \"2.0\"]\n    while ((result = texcoordPattern.exec(string)) != null) {\n        x = Number.parseFloat(result[1]);\n        y = Number.parseFloat(result[2]);\n        texcoordList.push(x);\n        texcoordList.push(y);\n    }\n\n    // [\"f 1/1/1 2/2/2 3/3/3\", \"1/1/1\", \"1\", \"1\", \"1\", \"2/2/2\", \"2\", \"2\", \"2\", \"3/3/3\", \"3\", \"3\", \"3\", \"4/4/4\", \"4\", \"4\", \"4\"]\n    while ((result = facePattern.exec(string)) != null) {\n        // Vertex indices\n        x = Number.parseInt(result[2]);\n        if (Number.isNaN(x)) x = 1;\n        y = Number.parseInt(result[6]);\n        if (Number.isNaN(y)) y = 1;\n        z = Number.parseInt(result[10]);\n        if (Number.isNaN(z)) z = 1;\n        vertexIndices.push(x);\n        vertexIndices.push(y);\n        vertexIndices.push(z);\n\n        // UV indices\n        x = Number.parseInt(result[3]);\n        if (Number.isNaN(x)) x = 1;\n        y = Number.parseInt(result[7]);\n        if (Number.isNaN(y)) y = 1;\n        z = Number.parseInt(result[11]);\n        if (Number.isNaN(z)) z = 1;\n        texcoordIndices.push(x);\n        texcoordIndices.push(y);\n        texcoordIndices.push(z);\n\n        // Normal indices\n        x = Number.parseInt(result[4]);\n        if (Number.isNaN(x)) x = 1;\n        y = Number.parseInt(result[8]);\n        if (Number.isNaN(y)) y = 1;\n        z = Number.parseInt(result[12]);\n        if (Number.isNaN(z)) z = 1;\n        normalIndices.push(x);\n        normalIndices.push(y);\n        normalIndices.push(z);\n\n        // Quad face\n        if (typeof result[13] !== 'undefined') {\n            \n            // Vertex indices\n            w = Number.parseInt(result[14]);\n            if (Number.isNaN(w)) w = 1;\n            vertexIndices.push(w);\n\n            // UV indices\n            w = Number.parseInt(result[15]);\n            if (Number.isNaN(w)) w = 1;\n            texcoordIndices.push(w);\n\n            // Normal indices\n            w = Number.parseInt(result[16]);\n            if (Number.isNaN(w)) w = 1;\n            normalIndices.push(w);\n\n            quad = true;\n        }\n    }\n\n    // [\"f 1 2 3 4\", \"1\", \"2\", \"3\", \"4\"]\n    while ((result = faceVertexPattern.exec(string)) != null) {\n        // Vertex indices\n        x = Number.parseInt(result[2]);\n        y = Number.parseInt(result[6]);\n        z = Number.parseInt(result[10]);\n        vertexIndices.push(x);\n        vertexIndices.push(y);\n        vertexIndices.push(z);\n\n        // UV indices\n        texcoordIndices.push(1);\n        texcoordIndices.push(1);\n        texcoordIndices.push(1);\n\n        // Normal indices\n        normalIndices.push(1);\n        normalIndices.push(1);\n        normalIndices.push(1);\n\n        // Quad face\n        if (typeof result[13] !== 'undefined') {\n\n            // Vertex indices\n            w = Number.parseInt(result[14]);\n            vertexIndices.push(w);\n\n            // UV indices\n            texcoordIndices.push(1);\n            // Normal indices\n            normalIndices.push(1);\n\n            quad = true;\n        }\n    }\n\n    let index, size;\n\n    size = vertexIndices.length;\n    const positions = new Float32Array(size * 3);\n    for (let i = 0; i < size; ++i) {\n        index = vertexIndices[i] - 1;\n        positions[i * 3 + 0] = vertexList[index * 3 + 0];\n        positions[i * 3 + 1] = vertexList[index * 3 + 1];\n        positions[i * 3 + 2] = vertexList[index * 3 + 2];\n    }\n\n    size = texcoordIndices.length;\n    const texcoords = new Float32Array(size * 2);\n    for (let i = 0; i < size; ++i) {\n        index = texcoordIndices[i] - 1;\n        texcoords[i * 2 + 0] = texcoordList[index * 2 + 0];\n        texcoords[i * 2 + 1] = texcoordList[index * 2 + 1];\n    }\n\n    size = normalIndices.length;\n    const normals = new Float32Array(size * 3);\n    for (let i = 0; i < size; ++i) {\n        index = normalIndices[i] - 1;\n        normals[i * 3 + 0] = normalList[index * 3 + 0];\n        normals[i * 3 + 1] = normalList[index * 3 + 1];\n        normals[i * 3 + 2] = normalList[index * 3 + 2];\n    }\n\n    // Must be either unsigned short or unsigned byte.\n    size = vertexIndices.length;\n    const indices = new Uint16Array(size);\n    for (let i = 0; i < size; ++i) {\n        indices[i] = i;\n    }\n\n    if (quad) {\n        console.warn('WebGL does not support quad faces, only triangles.');\n    }\n\n    return {\n        positions,\n        texcoords,\n        normals,\n        indices,\n    };\n}\n\nvar OBJLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    loadOBJ: loadOBJ\n});\n\nlet ASSET_LOADERS = {};\n\ndefineAssetLoader('image', loadImage);\ndefineAssetLoader('text', loadText);\ndefineAssetLoader('json', loadJSON);\ndefineAssetLoader('bytes', loadBytes);\ndefineAssetLoader('obj', loadOBJ);\n\nfunction defineAssetLoader(assetType, assetLoader)\n{\n    ASSET_LOADERS[assetType] = assetLoader;\n}\n\nfunction getAssetLoader(assetType)\n{\n    if (assetType in ASSET_LOADERS)\n    {\n        return ASSET_LOADERS[assetType];\n    }\n    else\n    {\n        throw new Error(`Unknown asset type '${assetType}'.`);\n    }\n}\n\nasync function loadAssetMap(assetMap, assetParentPath = '.')\n{\n    let result = {};\n    for(let assetName of Object.keys(assetMap))\n    {\n        let entry = assetMap[assetName];\n        if (typeof entry === 'string')\n        {\n            result[assetName] = await loadAsset(entry, undefined, assetParentPath);\n        }\n        else if (typeof entry === 'object')\n        {\n            if (!('src' in entry))\n            {\n                throw new Error(`Missing required field 'src' for entry in asset map.`);\n            }\n\n            if ('name' in entry && entry.name !== assetName)\n            {\n                throw new Error(`Cannot redefine name for asset '${assetName}' for entry in asset map.`);\n            }\n\n            result[assetName] = await loadAsset(entry.src, entry, assetParentPath);\n        }\n        else\n        {\n            throw new Error('Unknown entry type in asset map.');\n        }\n    }\n    return result;\n}\n\nasync function loadAssetList(assetList, assetParentPath = '.')\n{\n    let result = {};\n    for(let entry of assetList)\n    {\n        if (typeof entry === 'string')\n        {\n            result[entry] = await loadAsset(entry, undefined, assetParentPath);\n        }\n        else if (typeof entry === 'object')\n        {\n            if (!('src' in entry))\n            {\n                throw new Error(`Missing required field 'src' for entry in asset list.`);\n            }\n\n            result['name' in entry ? entry.name : entry.src] = await loadAsset(entry.src, entry, assetParentPath);\n        }\n        else\n        {\n            throw new Error('Unknown entry type in asset list.');\n        }\n    }\n    return result;\n}\n\nasync function loadAsset(assetSrc, assetOpts = {}, assetParentPath = '.')\n{\n    if (assetSrc.indexOf(':') < 0)\n    {\n        throw new Error('Missing type for asset source.');\n    }\n\n    let [assetType, assetPath] = assetSrc.split(':');\n    let assetLoader = getAssetLoader(assetType);\n    return await assetLoader(assetParentPath + '/' + assetPath, assetOpts);\n}\n\nvar AssetLoader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defineAssetLoader: defineAssetLoader,\n    getAssetLoader: getAssetLoader,\n    loadAssetMap: loadAssetMap,\n    loadAssetList: loadAssetList,\n    loadAsset: loadAsset\n});\n\n// SOURCE: https://noonat.github.io/intersect/#aabb-vs-aabb\n\n/* Surface contacts are considered intersections, including sweeps. */\n\nconst EPSILON = 1e-8;\n\nfunction clamp(value, min, max)\n{\n    return Math.min(Math.max(value, min), max);\n}\n\nfunction createAABB(x, y, rx, ry)\n{\n    return {\n        x, y,\n        rx, ry,\n    };\n}\n\nfunction createRect(left, top, right, bottom)\n{\n    let rx = Math.abs(right - left) / 2;\n    let ry = Math.abs(bottom - top) / 2;\n    return createAABB(Math.min(left, right) + rx, Math.min(top, bottom) + ry, rx, ry);\n}\n\nfunction testAABB(a, b)\n{\n    if (Math.abs(a.x - b.x) > (a.rx + b.rx)) return false;\n    if (Math.abs(a.y - b.y) > (a.ry + b.ry)) return false;\n    return true;\n}\n\nfunction intersectAABB(out, a, b)\n{\n    let dx = b.x - a.x;\n    let px = (b.rx + a.rx) - Math.abs(dx);\n    if (px < 0) return null;\n\n    let dy = b.y - a.y;\n    let py = (b.ry + a.ry) - Math.abs(dy);\n    if (py < 0) return null;\n\n    if (px < py)\n    {\n        let sx = Math.sign(dx);\n        out.dx = px * sx;\n        out.dy = 0;\n        out.nx = sx;\n        out.ny = 0;\n        out.x = a.x + (a.rx * sx);\n        out.y = b.y;\n    }\n    else\n    {\n        let sy = Math.sign(dy);\n        out.dx = 0;\n        out.dy = py * sy;\n        out.nx = 0;\n        out.ny = sy;\n        out.x = b.x;\n        out.y = a.y + (a.ry * sy);\n    }\n\n    return out;\n}\n\nfunction intersectPoint(out, a, x, y)\n{\n    let dx = x - a.x;\n    let px = a.rx - Math.abs(dx);\n    if (px < 0) return null;\n\n    let dy = y - a.y;\n    let py = a.ry - Math.abs(dy);\n    if (py < 0) return null;\n\n    if (px < py)\n    {\n        let sx = Math.sign(dx);\n        out.dx = px * sx;\n        out.dy = 0;\n        out.nx = sx;\n        out.ny = 0;\n        out.x = a.x + (a.rx * sx);\n        out.y = y;\n    }\n    else\n    {\n        let sy = Math.sign(dy);\n        out.dx = 0;\n        out.dy = py * sy;\n        out.nx = 0;\n        out.ny = sy;\n        out.x = x;\n        out.y = a.y + (a.ry * sy);\n    }\n\n    return out;\n}\n\nfunction intersectSegment(out, a, x, y, dx, dy, px = 0, py = 0)\n{\n    if (Math.abs(dx) < EPSILON\n        && Math.abs(dy) < EPSILON\n        && px === 0\n        && py === 0)\n    {\n        return intersectPoint(out, a, x, y);\n    }\n    \n    let arx = a.rx;\n    let ary = a.ry;\n    let bpx = px;\n    let bpy = py;\n    let scaleX = 1.0 / (dx || EPSILON);\n    let scaleY = 1.0 / (dy || EPSILON);\n    let signX = Math.sign(scaleX);\n    let signY = Math.sign(scaleY);\n    let nearTimeX = (a.x - signX * (arx + bpx) - x) * scaleX;\n    let nearTimeY = (a.y - signY * (ary + bpy) - y) * scaleY;\n    let farTimeX = (a.x + signX * (arx + bpx) - x) * scaleX;\n    let farTimeY = (a.y + signY * (ary + bpy) - y) * scaleY;\n    if (nearTimeX > farTimeY || nearTimeY > farTimeX) return null;\n\n    let nearTime = Math.max(nearTimeX, nearTimeY);\n    let farTime = Math.min(farTimeX, farTimeY);\n    if (nearTime > 1 || farTime < 0) return null;\n\n    let time = clamp(nearTime, 0, 1);\n    let hitdx = (1.0 - time) * -dx;\n    let hitdy = (1.0 - time) * -dy;\n    let hitx = x + dx * time;\n    let hity = y + dy * time;\n\n    if (nearTimeX > nearTimeY)\n    {\n        out.time = time;\n        out.nx = -signX;\n        out.ny = 0;\n        out.dx = hitdx;\n        out.dy = hitdy;\n        out.x = hitx;\n        out.y = hity;\n    }\n    else\n    {\n        out.time = time;\n        out.nx = 0;\n        out.ny = -signY;\n        out.dx = hitdx;\n        out.dy = hitdy;\n        out.x = hitx;\n        out.y = hity;\n    }\n\n    return out;\n}\n\nfunction intersectSweepAABB(out, a, b, dx, dy)\n{\n    return intersectSegment(out, a, b.x, b.y, dx, dy, b.rx, b.ry);\n}\n\nfunction sweepIntoAABB(out, a, b, dx, dy)\n{\n    if (Math.abs(dx) < EPSILON && Math.abs(dy) < EPSILON)\n    {\n        let hit = intersectAABB({}, b, a);\n        if (hit) hit.time = 0;\n\n        out.x = a.x;\n        out.y = a.y;\n        out.time = hit ? 0 : 1;\n        out.hit = hit;\n        return out;\n    }\n\n    let hit = intersectSweepAABB({}, b, a, dx, dy);\n    if (hit)\n    {\n        let time = clamp(hit.time, 0, 1);\n        let length = Math.sqrt(dx * dx + dy * dy);\n\n        let normaldx;\n        let normaldy;\n        if (length)\n        {\n            normaldx = dx / length;\n            normaldy = dy / length;\n        }\n        else\n        {\n            normaldx = 0;\n            normaldy = 0;\n        }\n        hit.x = clamp(hit.x + normaldx * a.rx, b.x - b.rx, b.x + b.rx);\n        hit.y = clamp(hit.y + normaldy * a.ry, b.y - b.ry, b.y + b.ry);\n\n        out.time = time;\n        out.x = a.x + dx * time;\n        out.y = a.y + dy * time;\n        out.hit = hit;\n    }\n    else\n    {\n        out.time = 1;\n        out.x = a.x + dx;\n        out.y = a.y + dy;\n        out.hit = hit;\n    }\n\n    return out;\n}\n\nfunction sweepInto(out, a, staticColliders, dx, dy)\n{\n    let tmp = {};\n\n    out.time = 1;\n    out.x = a.x + dx;\n    out.y = a.y + dy;\n    out.hit = null;\n\n    for(let i = 0, l = staticColliders.length; i < l; ++i)\n    {\n        let result = sweepIntoAABB(tmp, a, staticColliders[i], dx, dy);\n        if (result.time <= out.time)\n        {\n            out.time = result.time;\n            out.x = result.x;\n            out.y = result.y;\n            out.hit = result.hit;\n        }\n    }\n    return out;\n}\n\nvar IntersectionHelper = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    EPSILON: EPSILON,\n    clamp: clamp,\n    createAABB: createAABB,\n    createRect: createRect,\n    testAABB: testAABB,\n    intersectAABB: intersectAABB,\n    intersectPoint: intersectPoint,\n    intersectSegment: intersectSegment,\n    sweepInto: sweepInto\n});\n\nconst MAX_SWEEP_RESOLUTION_ITERATIONS = 100;\n\nfunction computeIntersections(masks, statics = [])\n{\n    // Compute physics.\n    for(let mask of masks)\n    {\n        switch(mask.type)\n        {\n            case 'point':\n                mask.hit = null;\n                for(let other of statics)\n                {\n                    mask.hit = intersectPoint({}, other, mask.x, mask.y);\n                    if (mask.hit) break;\n                }\n                break;\n            case 'segment':\n                mask.hit = null;\n                for(let other of statics)\n                {\n                    mask.hit = intersectSegment({}, other, mask.x, mask.y, mask.dx, mask.dy, mask.px, mask.py);\n                    if (mask.hit) break;\n                }\n                break;\n            case 'aabb':\n                mask.hit = null;\n                for(let other of statics)\n                {\n                    mask.hit = intersectAABB({}, other, mask);\n                    if (mask.hit) break;\n                }\n                break;\n        }\n    }\n}\n\nfunction resolveIntersections(dynamics, statics = [], dt = 1)\n{\n    // Do physics.\n    for(let dynamic of dynamics)\n    {\n        let dx = dynamic.dx * dt;\n        let dy = dynamic.dy * dt;\n        \n        let time = 0;\n        let tmp = {};\n        let sweep;\n\n        let hit = null;\n        let iterations = MAX_SWEEP_RESOLUTION_ITERATIONS;\n        do\n        {\n            // Do detection.\n            sweep = sweepInto(tmp, dynamic, statics, dx, dy);\n    \n            // Do resolution.\n            dynamic.x = sweep.x - (Math.sign(dx) * EPSILON);\n            dynamic.y = sweep.y - (Math.sign(dy) * EPSILON);\n            time += sweep.time;\n            if (sweep.hit)\n            {\n                dx += sweep.hit.nx * Math.abs(dx);\n                dy += sweep.hit.ny * Math.abs(dy);\n                hit = sweep.hit;\n\n                // Make sure that spent motion is consumed.\n                let remainingTime = Math.max(1 - time, 0);\n                dx *= remainingTime;\n                dy *= remainingTime;\n    \n                if (Math.abs(dx) < EPSILON) dx = 0;\n                if (Math.abs(dy) < EPSILON) dy = 0;\n            }\n        }\n        while(time < 1 && --iterations >= 0);\n        \n        dynamic.dx = dx;\n        dynamic.dy = dy;\n        dynamic.hit = hit;\n    }\n}\n\nvar IntersectionResolver = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    computeIntersections: computeIntersections,\n    resolveIntersections: resolveIntersections\n});\n\nfunction createIntersectionWorld()\n{\n    return {\n        dynamics: [],\n        masks: [],\n        statics: [],\n        update(dt)\n        {\n            resolveIntersections(this.dynamics, this.statics, dt);\n            computeIntersections(this.masks, this.statics);\n        },\n        render(ctx)\n        {\n            ctx.save();\n            {\n                // Draw static colliders.\n                ctx.strokeStyle = 'green';\n                for(let collider of this.statics)\n                {\n                    ctx.strokeRect(collider.x - collider.rx, collider.y - collider.ry, collider.rx * 2, collider.ry * 2);\n                }\n\n                // Draw dynamic colliders.\n                ctx.strokeStyle = 'lime';\n                for(let collider of this.dynamics)\n                {\n                    ctx.strokeRect(collider.x - collider.rx, collider.y - collider.ry, collider.rx * 2, collider.ry * 2);\n                }\n\n                // Draw mask colliders.\n                ctx.strokeStyle = 'blue';\n                for(let collider of this.masks)\n                {\n                    switch(collider.type)\n                    {\n                        case 'point':\n                            ctx.save();\n                            {\n                                ctx.fillStyle = 'red';\n                                ctx.fillRect(collider.x - 1, collider.y - 1, 2, 2);\n                            }\n                            ctx.restore();\n                            break;\n                        case 'segment':\n                            ctx.beginPath();\n                            ctx.moveTo(collider.x, collider.y);\n                            ctx.lineTo(collider.x + collider.dx, collider.y + collider.dy);\n                            ctx.stroke();\n                            break;\n                        case 'aabb':\n                            ctx.strokeRect(collider.x - collider.rx, collider.y - collider.ry, collider.rx * 2, collider.ry * 2);\n                            break;\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n}\n\nvar IntersectionWorld = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createIntersectionWorld: createIntersectionWorld\n});\n\n// https://gamedevelopment.tutsplus.com/tutorials/quick-tip-use-quadtrees-to-detect-likely-collisions-in-2d-space--gamedev-374\n\nfunction createBounds(x, y, rx, ry)\n{\n    return { x, y, rx, ry };\n}\n\nconst MAX_OBJECTS = 10;\nconst MAX_LEVELS = 5;\n\nclass QuadTree\n{\n    constructor(level = 0, bounds = createBounds(0, 0, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER))\n    {\n        this.level = level;\n        this.bounds = bounds;\n\n        this.objects = [];\n        this.nodes = new Array(4);\n    }\n\n    clear()\n    {\n        this.objects.length = 0;\n\n        for(let i = 0; i < this.nodes.length; ++i)\n        {\n            let node = this.nodes[i];\n            if (node)\n            {\n                node.clear();\n                this.nodes[i] = null;\n            }\n        }\n    }\n\n    split()\n    {\n        let { x, y, rx, ry } = this.bounds;\n        let nextLevel = this.level + 1;\n\n        let ChildConstructor = this.constructor;\n\n        this.nodes[0] = new ChildConstructor(nextLevel, createBounds(x + rx, y, rx, ry));\n        this.nodes[1] = new ChildConstructor(nextLevel, createBounds(x, y, rx, ry));\n        this.nodes[2] = new ChildConstructor(nextLevel, createBounds(x, y + ry, rx, ry));\n        this.nodes[3] = new ChildConstructor(nextLevel, createBounds(x + rx, y + ry, rx, ry));\n    }\n\n    findQuadIndex(object)\n    {\n        let { x, y, rx, ry } = this.bounds;\n\n        let index = -1;\n        let midpointX = x + rx;\n        let midpointY = y + ry;\n\n        let isTop = object.y < midpointY && object.y + object.ry * 2 < midpointY;\n        let isBottom = object.y > midpointY;\n\n        let isLeft = object.x < midpointX && object.x + object.rx * 2 < midpointX;\n        let isRight= object.x > midpointX;\n\n        if (isLeft)\n        {\n            if (isTop)\n            {\n                index = 1;\n            }\n            else if (isBottom)\n            {\n                index = 2;\n            }\n        }\n        else if (isRight)\n        {\n            if (isTop)\n            {\n                index = 0;\n            }\n            else if (isBottom)\n            {\n                index = 3;\n            }\n        }\n\n        return index;\n    }\n\n    insertAll(objects)\n    {\n        for(let object of objects)\n        {\n            this.insert(object);\n        }\n    }\n\n    insert(object)\n    {\n        let hasNode = this.nodes[0];\n\n        if (hasNode)\n        {\n            let quadIndex = this.findQuadIndex(object);\n            if (quadIndex >= 0)\n            {\n                this.nodes[quadIndex].insert(object);\n                return;\n            }\n        }\n\n        this.objects.push(object);\n\n        if (this.objects.length > MAX_OBJECTS && this.level < MAX_LEVELS)\n        {\n            if (!hasNode) this.split();\n\n            for(let i = this.objects.length - 1; i >= 0; --i)\n            {\n                let obj = this.objects[i];\n                let quadIndex = this.findQuadIndex(obj);\n                if (quadIndex >= 0)\n                {\n                    this.objects.splice(i, 1);\n                    this.nodes[quadIndex].insert(obj);\n                }\n            }\n        }\n    }\n\n    retreive(out, object)\n    {\n        if (this.nodes[0])\n        {\n            let quadIndex = this.findQuadIndex(object);\n            if (quadIndex >= 0)\n            {\n                this.nodes[quadIndex].retreive(out, object);\n            }\n        }\n\n        out.push(...this.objects);\n        return out;\n    }\n}\n\nvar QuadTree$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createBounds: createBounds,\n    QuadTree: QuadTree\n});\n\nconst AUDIO_CONTEXT = new AudioContext();\nautoUnlock(AUDIO_CONTEXT);\n\nconst AUDIO_ASSET_TAG = 'audio';\nasync function loadAudio(filepath, opts = {})\n{\n    const ctx = AUDIO_CONTEXT;\n\n    let result = await fetch(filepath);\n    let buffer = await result.arrayBuffer();\n    let data = await ctx.decodeAudioData(buffer);\n    return new Sound(ctx, data, Boolean(opts.loop));\n}\n\nconst DEFAULT_SOURCE_PARAMS = {\n    gain: 0,\n    pitch: 0,\n    pan: 0,\n    loop: false,\n};\nclass Sound\n{\n    constructor(ctx, audioBuffer, loop = false)\n    {\n        this.context = ctx;\n        this.buffer = audioBuffer;\n\n        this._source = null;\n\n        this.playing = false;\n        this.loop = loop;\n\n        this.onAudioSourceEnded = this.onAudioSourceEnded.bind(this);\n    }\n\n    onAudioSourceEnded()\n    {\n        this._playing = false;\n    }\n\n    play(opts = DEFAULT_SOURCE_PARAMS)\n    {\n        if (!this.buffer) return;\n        if (this._source) this.destroy();\n\n        const ctx = this.context;\n        let source = ctx.createBufferSource();\n        source.addEventListener('ended', this.onAudioSourceEnded);\n        source.buffer = this.buffer;\n        source.loop = opts.loop;\n\n        let prevNode = source;\n\n        // https://www.oreilly.com/library/view/web-audio-api/9781449332679/ch04.html\n        // Add pitch\n        if (opts.pitch)\n        {\n            source.detune.value = opts.pitch * 100;\n        }\n\n        // Add gain\n        if (opts.gain)\n        {\n            const gainNode = ctx.createGain();\n            gainNode.gain.value = opts.gain;\n            prevNode = prevNode.connect(gainNode);\n        }\n\n        // Add stereo pan\n        if (opts.pan)\n        {\n            const pannerNode = ctx.createStereoPanner();\n            pannerNode.pan.value = opts.pan;\n            prevNode = prevNode.connect(pannerNode);\n        }\n\n        prevNode.connect(ctx.destination);\n        source.start();\n\n        this._source = source;\n        this._playing = true;\n    }\n\n    pause()\n    {\n        this._source.stop();\n        this._playing = false;\n    }\n\n    destroy()\n    {\n        if (this._source) this._source.disconnect();\n        this._source = null;\n    }\n}\n\nasync function autoUnlock(ctx)\n{\n    const callback = () => {\n        if (ctx.state === 'suspended') {\n            ctx.resume();\n        }\n    };\n    document.addEventListener('click', callback);\n}\n\nvar Audio = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    AUDIO_CONTEXT: AUDIO_CONTEXT,\n    AUDIO_ASSET_TAG: AUDIO_ASSET_TAG,\n    loadAudio: loadAudio\n});\n\nconst MAX_FIXED_UPDATES = 250;\n\n/**\n * @typedef Application\n * @property {Function} [start]\n * @property {Function} [stop]\n * @property {Function} [preUpdate]\n * @property {Function} [update]\n * @property {Function} [fixedUpdate]\n * @property {Function} [postUpdate]\n * @property {Function} [pause]\n * @property {Function} [resume]\n */\n\nclass ApplicationLoop\n{\n    static currentTime() { return performance.now(); }\n\n    static start(app)\n    {\n        let result = new ApplicationLoop(app, false);\n        result.start();\n        return result;\n    }\n\n    /**\n     * @param {Application} app The application object that holds all the executable logic.\n     * @param {Boolean} [controlled = false] Whether the loop should NOT execute and manage itself.\n     */\n    constructor(app, controlled = false)\n    {\n        this.app = app;\n\n        this._controlled = controlled;\n        this._animationFrameHandle = null;\n\n        this.prevFrameTime = 0;\n        this.started = false;\n        this.paused = false;\n        this.fixedTimeStep = 1 / 60;\n        this.prevAccumulatedTime = 0;\n\n        this._onstart = null;\n        this._onstop = null;\n        this._onpreupdate = null;\n        this._onupdate = null;\n        this._onfixedupdate = null;\n        this._onpostupdate = null;\n        this._onpause = null;\n        this._onresume = null;\n\n        this.onAnimationFrame = this.onAnimationFrame.bind(this);\n        this.onWindowFocus = this.onWindowFocus.bind(this);\n        this.onWindowBlur = this.onWindowBlur.bind(this);\n    }\n\n    setFixedUpdatesPerSecond(count)\n    {\n        this.fixedTimeStep = 1 / count;\n        return this;\n    }\n\n    onWindowFocus()\n    {\n        if (!this.started) return;\n        this.resume();\n    }\n\n    onWindowBlur()\n    {\n        if (!this.started) return;\n        this.pause();\n    }\n\n    /**\n     * Runs the game loop. If this is a controlled game loop, it will call itself\n     * continuously until stop() or pause().\n     */\n    onAnimationFrame(now)\n    {\n        if (this._controlled) throw new Error('Cannot run controlled game loop; call step() instead.');\n        if (!this.started) throw new Error('Must be called after start().');\n\n        this.animationFrameHandle = requestAnimationFrame(this.onAnimationFrame);\n        this.step(now);\n    }\n\n    /** Runs one update step for the game loop. This is usually called 60 times a second. */\n    step(now = ApplicationLoop.currentTime())\n    {\n        if (!this.started) return false;\n\n        const deltaTime = now - this.prevFrameTime;\n        this.prevFrameTime = now;\n        \n        if (this.paused) return false;\n\n        if (this.app.preUpdate) this.app.preUpdate(deltaTime);\n        if (this.app.update) this.app.update(deltaTime);\n\n        this.prevAccumulatedTime += deltaTime / 1000;\n        if (this.prevAccumulatedTime > MAX_FIXED_UPDATES * this.fixedTimeStep)\n        {\n            let max = MAX_FIXED_UPDATES * this.fixedTimeStep;\n            let count = Math.floor((this.prevAccumulatedTime - max) / this.fixedTimeStep);\n            this.prevAccumulatedTime = max;\n            console.error(`[ApplicationLoop] Too many updates! Skipped ${count} fixed updates.`);\n        }\n\n        while(this.prevAccumulatedTime >= this.fixedTimeStep)\n        {\n            this.prevAccumulatedTime -= this.fixedTimeStep;\n            if (this.app.fixedUpdate) this.app.fixedUpdate();\n        }\n\n        if (this.app.postUpdate) this.app.postUpdate(deltaTime);\n    }\n\n    /** Starts the game loop. Calls run(), unless recursive is set to false. */\n    start()\n    {\n        if (this.started) throw new Error('Loop already started.');\n\n        // If the window is out of focus, just ignore the time.\n        window.addEventListener('focus', this.onWindowFocus);\n        window.addEventListener('blur', this.onWindowBlur);\n\n        this.started = true;\n        this.prevFrameTime = ApplicationLoop.currentTime();\n\n        if (this.app.start) this.app.start();\n        \n        if (!this.controlled)\n        {\n            this.onAnimationFrame(this.prevFrameTime);\n        }\n\n        return this;\n    }\n\n    /** Stops the game loop. */\n    stop()\n    {\n        if (!this.started) throw new Error('Loop not yet started.');\n        \n        // If the window is out of focus, just ignore the time.\n        window.removeEventListener('focus', this.onWindowFocus);\n        window.removeEventListener('blur', this.onWindowBlur);\n\n        this.started = false;\n\n        if (this.app.stop) this.app.stop();\n\n        if (!this._controlled)\n        {\n            if (this.animationFrameHandle)\n            {\n                cancelAnimationFrame(this.animationFrameHandle);\n                this.animationFrameHandle = null;\n            }\n        }\n\n        return this;\n    }\n\n    /** Pauses the game loop. */\n    pause()\n    {\n        if (this.paused) return this;\n\n        this.paused = true;\n        \n        if (this.app.pause) this.app.pause();\n        return this;\n    }\n\n    /** Resumes the game loop. */\n    resume()\n    {\n        if (!this.pause) return this;\n\n        // This is an intentional frame skip (due to pause).\n        this.prevFrameTime = ApplicationLoop.currentTime();\n\n        this.paused = false;\n\n        if (this.app.resume) this.app.resume();\n        return this;\n    }\n}\n\nclass Game\n{\n    constructor(context)\n    {\n        this.context = context;\n\n        this.display = null;\n        this.renderContext = null;\n    }\n\n    setDisplay(display)\n    {\n        this.display = display;\n        this.renderContext = display.canvas.getContext('2d');\n        return this;\n    }\n\n    /** @override */\n    start()\n    {\n        this.context.start();\n    }\n\n    /** @override */\n    update(dt)\n    {\n        this.context.update(dt);\n        this.context.render(this.renderContext);\n    }\n}\n\nconst GAME_PROPERTY = Symbol('game');\nconst LOOP_PROPERTY = Symbol('loop');\n\nfunction start(context)\n{\n    let gameContext = { ...context };\n\n    let game = new Game(gameContext);\n    let loop = new ApplicationLoop(game);\n\n    gameContext[GAME_PROPERTY] = game;\n    gameContext[LOOP_PROPERTY] = loop;\n    gameContext.display = null;\n\n    window.addEventListener('DOMContentLoaded', () => {\n        let display = document.querySelector('display-port');\n        if (!display) throw new Error('Cannot find display-port in document.');\n        game.setDisplay(display);\n        gameContext.display = display;\n        gameContext.load().then(() => loop.start());\n    });\n\n    return gameContext;\n}\n\nfunction stop(gameContext)\n{\n    gameContext[LOOP_PROPERTY].stop();\n\n    delete gameContext[GAME_PROPERTY];\n    delete gameContext[LOOP_PROPERTY];\n}\n\nvar Game$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    start: start,\n    stop: stop\n});\n\nconst DEFAULT_INFO = {\n    x: 0, y: 0,\n    width: 1,\n    height: 1,\n    color: 'dodgerblue',\n    solid: true,\n};\nconst INFO_KEY = Symbol('BoxRendererInfo');\n\nclass BoxRenderer\n{\n    static get Info() { return INFO_KEY; }\n\n    static draw(ctx, targets, defaultInfo = undefined)\n    {\n        const defaults = defaultInfo ? { ...DEFAULT_INFO, ...defaultInfo } : DEFAULT_INFO;\n        for(let target of targets)\n        {\n            const info = target[INFO_KEY];\n            \n            const x = resolveInfo('x', info, target, defaults);\n            const y = resolveInfo('y', info, target, defaults);\n            const width = resolveInfo('width', info, target, defaults);\n            const height = resolveInfo('height', info, target, defaults);\n            const color = resolveInfo('color', info, target, defaults);\n            const solid = resolveInfo('solid', info, target, defaults);\n\n            ctx.translate(x, y);\n            {\n                const halfWidth = width / 2;\n                const halfHeight = height / 2;\n\n                if (solid)\n                {\n                    ctx.fillStyle = color;\n                    ctx.fillRect(-halfWidth, -halfHeight, width, height);\n                }\n                else\n                {\n                    ctx.strokeStyle = color;\n                    ctx.strokeRect(-halfWidth, -halfHeight, width, height);\n                }\n            }\n            ctx.translate(-x, -y);\n        }\n    }\n}\n\nfunction resolveInfo(param, info, target, defaults)\n{\n    if (info)\n    {\n        if (param in info)\n        {\n            return info[param];\n        }\n        else if (param in target)\n        {\n            return target[param];\n        }\n        else\n        {\n            return defaults[param];\n        }\n    }\n    else if (target)\n    {\n        if (param in target)\n        {\n            return target[param];\n        }\n        else\n        {\n            return defaults[param];\n        }\n    }\n    else\n    {\n        return defaults[param];\n    }\n}\n\nconst DEFAULT_INFO$1 = {\n    x: 0, y: 0,\n    width: 1,\n    height: 1,\n    spriteImage: null,\n};\nconst INFO_KEY$1 = Symbol('SpriteRendererInfo');\n\nclass SpriteRenderer\n{\n    static get Info() { return INFO_KEY$1; }\n\n    static draw(ctx, targets, defaultInfo = undefined)\n    {\n        const defaults = defaultInfo ? { ...DEFAULT_INFO$1, ...defaultInfo } : DEFAULT_INFO$1;\n        for(let target of targets)\n        {\n            const info = target[INFO_KEY$1];\n            const x = resolveInfo$1('x', info, target, defaults);\n            const y = resolveInfo$1('y', info, target, defaults);\n\n            const spriteImage = resolveInfo$1('spriteImage', info, target, defaults);\n            if (spriteImage)\n            {\n                const width = spriteImage.width;\n                const height = spriteImage.height;\n\n                ctx.translate(x, y);\n                {\n                    const halfWidth = width / 2;\n                    const halfHeight = height / 2;\n    \n                    ctx.drawImage(spriteImage, -halfWidth, -halfHeight);\n                }\n                ctx.translate(-x, -y);\n            }\n            else\n            {\n                const width = 10;\n                const height = 10;\n\n                ctx.translate(x, y);\n                {\n                    const halfWidth = width / 2;\n                    const halfHeight = height / 2;\n\n                    ctx.strokeStyle = 'black';\n                    ctx.strokeRect(-halfWidth, -halfHeight, width, height);\n                    ctx.textAlign = 'center';\n                    ctx.textBaseline = 'middle';\n                    ctx.strokeText('?', 0, 0, width);\n                }\n                ctx.translate(-x, -y);\n            }\n        }\n    }\n}\n\nfunction resolveInfo$1(param, info, target, defaults)\n{\n    if (info)\n    {\n        if (param in info)\n        {\n            return info[param];\n        }\n        else if (param in target)\n        {\n            return target[param];\n        }\n        else\n        {\n            return defaults[param];\n        }\n    }\n    else if (target)\n    {\n        if (param in target)\n        {\n            return target[param];\n        }\n        else\n        {\n            return defaults[param];\n        }\n    }\n    else\n    {\n        return defaults[param];\n    }\n}\n\nexport { ApplicationLoop as A, BoxRenderer as B, Game$1 as G, ImageLoader as I, JSONLoader as J, OBJLoader as O, QuadTree$1 as Q, SpriteRenderer as S, TextLoader as T, AssetLoader as a, Audio as b, ByteLoader as c, IntersectionHelper as d, IntersectionResolver as e, IntersectionWorld as f };\n","// Bresenham's Line Algorithm\nfunction line(fromX, fromY, toX, toY, callback)\n{\n    let fx = Math.floor(fromX);\n    let fy = Math.floor(fromY);\n    let tx = Math.floor(toX);\n    let ty = Math.floor(toY);\n\n    let dx = Math.abs(toX - fromX);\n    let sx = fromX < toX ? 1 : -1;\n    let dy = -Math.abs(toY - fromY);\n    let sy = fromY < toY ? 1 : -1;\n    let er = dx + dy;\n\n    let x = fx;\n    let y = fy;\n    let flag = callback(x, y);\n    if (typeof flag !== 'undefined') return flag;\n    \n    let maxLength = dx * dx + dy * dy;\n    let length = 0;\n    while(length < maxLength && (x !== tx || y !== ty))\n    {\n        // Make sure it doesn't go overboard.\n        ++length;\n\n        let er2 = er * 2;\n\n        if (er2 >= dy)\n        {\n            er += dy;\n            x += sx;\n        }\n\n        if (er2 <= dx)\n        {\n            er += dx;\n            y += sy;\n        }\n\n        flag = callback(x, y);\n        if (typeof flag !== 'undefined') return flag;\n    }\n}\n\nvar Discrete = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    line: line\n});\n\nconst FILE_TYPE_PNG = 'png';\nconst FILE_TYPE_SVG = 'svg';\n\nfunction downloadText(filename, textData)\n{\n    downloadURL(filename, getTextDataURI(textData));\n}\n\nfunction downloadImageFromSVG(filename, filetype, svg, width, height)\n{\n    const blob = createBlobFromSVG(svg);\n    switch (filetype)\n    {\n        case FILE_TYPE_PNG:\n            {\n                const url = URL.createObjectURL(blob);\n\n                const canvas = document.createElement('canvas');\n                const ctx = canvas.getContext('2d');\n                const pixelRatio = window.devicePixelRatio || 1;\n                canvas.width = width * pixelRatio;\n                canvas.height = height * pixelRatio;\n                canvas.style.width = width + 'px';\n                canvas.style.height = height + 'px';\n                ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n                const image = new Image();\n                image.onload = () => \n                {\n                    ctx.drawImage(image, 0, 0);\n                    URL.revokeObjectURL(url);\n\n                    const imageURI = canvas.toDataURL('image/' + filetype).replace('image/' + filetype, 'image/octet-stream');\n                    downloadURL(filename, imageURI);\n                };\n                image.src = url;\n            }\n            break;\n        case FILE_TYPE_SVG:\n            {\n                const reader = new FileReader();\n                reader.onload = () => \n                {\n                    downloadURL(filename, reader.result);\n                };\n                reader.readAsDataURL(blob);\n            }\n            break;\n        default:\n            throw new Error('Unknown file type \\'' + filetype + '\\'');\n    }\n}\n\nfunction downloadURL(filename, url)\n{\n    const element = document.createElement('a');\n    const headerIndex = url.indexOf(';');\n    url = url.substring(0, headerIndex + 1) + 'headers=Content-Disposition%3A%20attachment%3B%20filename=' + filename + ';' + url.substring(headerIndex + 1);\n    element.setAttribute('href', url);\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n    document.body.removeChild(element);\n}\n\nfunction createBlobFromSVG(svg)\n{\n    const styledSVG = computeSVGStyles(svg);\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(styledSVG);\n    const blob = new Blob([svgString], { type: 'image/svg+xml' });\n    return blob;\n}\n\n// SOURCE: https://stackoverflow.com/questions/3975499/convert-svg-to-image-jpeg-png-etc-in-the-browser/44769098#44769098\nconst SVG_CONTAINERS = ['svg', 'g'];\nfunction computeSVGStyles(svg, dst = svg.cloneNode(true))\n{\n    let sourceChildren = svg.childNodes;\n    let children = dst.childNodes;\n\n    for (var index = 0; index < children.length; index++)\n    {\n        let child = children[index];\n        let tagName = child.tagName;\n        if (SVG_CONTAINERS.indexOf(tagName) != -1)\n        {\n            computeSVGStyles(sourceChildren[index], child);\n        }\n        else if (sourceChildren[index] instanceof Element)\n        {\n            const computedStyle = window.getComputedStyle(sourceChildren[index]);\n\n            let styleAttributes = [];\n            for(let styleName of Object.keys(computedStyle))\n            {\n                styleAttributes.push(`${styleName}:${computedStyle.getPropertyValue(styleName)};`);\n            }\n\n            child.setAttribute('style', styleAttributes.join(''));\n        }\n    }\n\n    return dst;\n}\n\nfunction getTextDataURI(data)\n{\n    return 'data:text/plain; charset=utf-8,' + encodeURIComponent(data);\n}\n\nvar Downloader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    FILE_TYPE_PNG: FILE_TYPE_PNG,\n    FILE_TYPE_SVG: FILE_TYPE_SVG,\n    downloadText: downloadText,\n    downloadImageFromSVG: downloadImageFromSVG,\n    downloadURL: downloadURL\n});\n\nasync function uploadFile(accept = [], multiple = false)\n{\n    return new Promise((resolve, reject) => {\n        const element = document.createElement('input');\n        element.addEventListener('change', (e) => {\n            if (multiple)\n            {\n                resolve(e.target.files);\n            }\n            else\n            {\n                resolve(e.target.files[0]);\n            }\n        });\n        element.type = 'file';\n        element.accept = accept.join(',');\n        element.style.display = 'none';\n        element.toggleAttribute('multiple', multiple);\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    });\n}\n\nvar Uploader = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    uploadFile: uploadFile\n});\n\n/* eslint-disable no-console */\n\n// Log levels\nconst TRACE = 5;\nconst DEBUG = 4;\nconst INFO = 3;\nconst WARN = 2;\nconst ERROR = 1;\nconst OFF = 0;\n\nconst LOG_LEVEL_STYLES = {\n    [TRACE]: styledLogLevel('#7F8C8D'), // Gray\n    [DEBUG]: styledLogLevel('#2ECC71'), // Green\n    [INFO]: styledLogLevel('#4794C8'), // Blue\n    [WARN]: styledLogLevel('#F39C12'), // Yellow\n    [ERROR]: styledLogLevel('#C0392B'), // Red\n    [OFF]: [''],\n};\n\nfunction compareLogLevel(a, b)\n{\n    return a - b;\n}\n\nfunction styledLogLevel(color)\n{\n    return [\n        `background: ${color}`,\n        'border-radius: 0.5em',\n        'color: white',\n        'font-weight: bold',\n        'padding: 2px 0.5em',\n    ];\n}\n\n// Useful functions\nfunction noop() { /** Do nothing. */ }\n\nfunction getStyledMessage(message, styles)\n{\n    return [\n        `%c${message}`,\n        styles.join(';'),\n    ];\n}\n\nfunction getConsoleFunction(level)\n{\n    switch(level)\n    {\n        case TRACE:\n            return console.trace;\n        case DEBUG:\n            return console.log;\n        case INFO:\n            return console.log;\n        case WARN:\n            return console.warn;\n        case ERROR:\n            return console.error;\n        case OFF:\n            return noop;\n        default:\n            return console.log;\n    }\n}\n\nfunction prependMessageTags(out, name, domain, level)\n{\n    if (name)\n    {\n        out.unshift(`[${name}]`);\n    }\n\n    if (domain)\n    {\n        let tag = getStyledMessage(domain, LOG_LEVEL_STYLES[level]);\n        out.unshift(tag[0], tag[1]);\n    }\n\n    return out;\n}\n\nconst LEVEL = Symbol('level');\nconst DOMAIN = Symbol('domain');\nconst LOGGERS = { /** To be populated by logger instances. */ };\nlet DEFAULT_LEVEL = WARN;\nlet DEFAULT_DOMAIN = 'app';\nclass Logger\n{\n    static get TRACE() { return TRACE; }\n    static get DEBUG() { return DEBUG; }\n    static get INFO() { return INFO; }\n    static get WARN() { return WARN; }\n    static get ERROR() { return ERROR; }\n    static get OFF() { return OFF; }\n\n    /**\n     * Creates or gets the logger for the given unique name.\n     * @param {String} name \n     * @returns {Logger} The logger with the name.\n     */\n    static getLogger(name)\n    {\n        if (name in LOGGERS)\n        {\n            return LOGGERS[name];\n        }\n        else\n        {\n            return LOGGERS[name] = new Logger(name);\n        }\n    }\n\n    static useDefaultLevel(level)\n    {\n        DEFAULT_LEVEL = level;\n        return this;\n    }\n\n    static useDefaultDomain(domain)\n    {\n        DEFAULT_DOMAIN = domain;\n        return this;\n    }\n\n    constructor(name)\n    {\n        this.name = name;\n        this[LEVEL] = DEFAULT_LEVEL;\n        this[DOMAIN] = DEFAULT_DOMAIN;\n    }\n\n    setLevel(level)\n    {\n        this[LEVEL] = level;\n        return this;\n    }\n    \n    getLevel()\n    {\n        return this[LEVEL];\n    }\n\n    setDomain(domain)\n    {\n        this[DOMAIN] = domain;\n        return this;\n    }\n\n    getDomain()\n    {\n        return this[DOMAIN];\n    }\n\n    log(level, ...messages)\n    {\n        if (compareLogLevel(this[LEVEL], level) < 0) return this;\n        prependMessageTags(messages, this.name, this[DOMAIN], level);\n        getConsoleFunction(level)(...messages);\n    }\n\n    trace(...messages)\n    {\n        if (compareLogLevel(this[LEVEL], TRACE) < 0) return this;\n        prependMessageTags(messages, this.name, this[DOMAIN], TRACE);\n        getConsoleFunction(TRACE)(...messages);\n    }\n\n    debug(...messages)\n    {\n        if (compareLogLevel(this[LEVEL], DEBUG) < 0) return this;\n        prependMessageTags(messages, this.name, this[DOMAIN], DEBUG);\n        getConsoleFunction(DEBUG)(...messages);\n    }\n\n    info(...messages)\n    {\n        if (compareLogLevel(this[LEVEL], INFO) < 0) return this;\n        prependMessageTags(messages, this.name, this[DOMAIN], INFO);\n        getConsoleFunction(INFO)(...messages);\n    }\n\n    warn(...messages)\n    {\n        if (compareLogLevel(this[LEVEL], WARN) < 0) return this;\n        prependMessageTags(messages, this.name, this[DOMAIN], WARN);\n        getConsoleFunction(WARN)(...messages);\n    }\n\n    error(...messages)\n    {\n        if (compareLogLevel(this[LEVEL], ERROR) < 0) return this;\n        prependMessageTags(messages, this.name, this[DOMAIN], ERROR);\n        getConsoleFunction(ERROR)(...messages);\n    }\n}\n\nvar Logger$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Logger: Logger\n});\n\n/**\n * @typedef Eventable\n * @property {function} on\n * @property {function} off\n * @property {function} once\n * @property {function} emit\n */\n\n/**\n * @version 1.3.0\n * @description\n * # Changelog\n * ## 1.3.0\n * - Return results for emit()\n * ## 1.2.0\n * - Added named exports\n * - Added custom this context\n * - Added some needed explanations for the functions\n * ## 1.1.0\n * - Started versioning\n */\nconst EventableInstance = {\n    /**\n     * Registers an event handler to continually listen for the event.\n     * \n     * @param {string} event The name of the event to listen for.\n     * @param {function} callback The callback function to handle the event.\n     * @param {*} [handle = callback] The handle to refer to this registered callback.\n     * Used by off() to remove handlers. If none specified, it will use the callback\n     * itself as the handle. This must be unique.\n     * @return {Eventable} Self for method-chaining.\n     */\n    on(event, callback, handle = callback)\n    {\n        let callbacks;\n        if (!this.__events.has(event))\n        {\n            callbacks = new Map();\n            this.__events.set(event, callbacks);\n        }\n        else\n        {\n            callbacks = this.__events.get(event);\n        }\n\n        if (!callbacks.has(handle))\n        {\n            callbacks.set(handle, callback);\n        }\n        else\n        {\n            throw new Error(`Found callback for event '${event}' with the same handle '${handle}'.`);\n        }\n        return this;\n    },\n\n    /**\n     * Unregisters an event handler to stop listening for the event.\n     * \n     * @param {string} event The name of the event listened for.\n     * @param {*} handle The registered handle to refer to the registered\n     * callback. If no handle was provided when calling on(), the callback\n     * is used as the handle instead.\n     * @return {Eventable} Self for method-chaining.\n     */\n    off(event, handle)\n    {\n        if (this.__events.has(event))\n        {\n            const callbacks = this.__events.get(event);\n            if (callbacks.has(handle))\n            {\n                callbacks.delete(handle);\n            }\n            else\n            {\n                throw new Error(`Unable to find callback for event '${event}' with handle '${handle}'.`);\n            }\n        }\n        else\n        {\n            throw new Error(`Unable to find event '${event}'.`);\n        }\n        return this;\n    },\n    \n    /**\n     * Registers a one-off event handler to start listening for the next,\n     * and only the next, event.\n     * \n     * @param {string} event The name of the event to listen for.\n     * @param {function} callback The callback function to handle the event.\n     * @param {*} [handle = callback] The handle to refer to this registered callback.\n     * Used by off() to remove handlers. If none specified, it will use the callback\n     * itself as the handle. This must be unique.\n     * @return {Eventable} Self for method-chaining.\n     */\n    once(event, callback, handle = callback)\n    {\n        const func = (...args) => {\n            this.off(event, handle);\n            callback.apply(this.__context || this, args);\n        };\n        return this.on(event, func, handle);\n    },\n\n    /**\n     * Emits the event with the arguments passed on to the registered handlers.\n     * The context of the handlers, if none were initially bound, could be\n     * defined upon calling the Eventable's creation function. Otherwise, the\n     * handler is called with `this` context of the Eventable instance.\n     * \n     * @param {string} event The name of the event to emit.\n     * @param  {...any} args Any arguments to pass to registered handlers.\n     * @return {Array<any>} Array of any returned values of the callbacks.\n     */\n    emit(event, ...args)\n    {\n        if (this.__events.has(event))\n        {\n            let results = [];\n            const callbacks = Array.from(this.__events.get(event).values());\n            for(const callback of callbacks)\n            {\n                let result = callback.apply(this.__context || this, args);\n                if (result) results.push(result);\n            }\n            return results;\n        }\n        else\n        {\n            this.__events.set(event, new Map());\n            return [];\n        }\n    }\n};\n\n/**\n * Creates an eventable object.\n * \n * @param {Object} [context] The context used for the event handlers.\n * @return {Eventable} The created eventable object.\n */\nfunction create(context = undefined)\n{\n    const result = Object.create(EventableInstance);\n    result.__events = new Map();\n    result.__context = context;\n    return result;\n}\n\n/**\n * Assigns the passed-in object with eventable properties.\n * \n * @param {Object} dst The object to assign with eventable properties.\n * @param {Object} [context] The context used for the event handlers.\n * @return {Eventable} The resultant eventable object.\n */\nfunction assign(dst, context = undefined)\n{\n    const result = Object.assign(dst, EventableInstance);\n    result.__events = new Map();\n    result.__context = context;\n    return result;\n}\n\n/**\n * Mixins eventable properties into the passed-in class.\n * \n * @param {Class} targetClass The class to mixin eventable properties.\n * @param {Object} [context] The context used for the event handlers.\n * @return {Class<Eventable>} The resultant eventable-mixed-in class.\n */\nfunction mixin(targetClass, context = undefined)\n{\n    const targetPrototype = targetClass.prototype;\n    Object.assign(targetPrototype, EventableInstance);\n    targetPrototype.__events = new Map();\n    targetPrototype.__context = context;\n    return targetPrototype;\n}\n\nvar Eventable = {\n    create,\n    assign,\n    mixin\n};\n\nvar Eventable$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    create: create,\n    assign: assign,\n    mixin: mixin,\n    'default': Eventable\n});\n\nconst TOP_INDEX = 0;\n\n// NOTE: Uses a binary heap to sort.\nclass PriorityQueue\n{\n    constructor(comparator)\n    {\n        this._heap = [];\n        this._comparator = comparator;\n    }\n\n    get size() { return this._heap.length; }\n\n    clear()\n    {\n        this._heap.length = 0;\n    }\n\n    push(...values)\n    {\n        for (const value of values)\n        {\n            this._heap.push(value);\n            this._shiftUp();\n        }\n    }\n\n    pop()\n    {\n        const result = this.peek();\n        let bottom = bottomIndex(this);\n        if (bottom > TOP_INDEX)\n        {\n            this._swap(TOP_INDEX, bottom);\n        }\n        this._heap.pop();\n        this._shiftDown();\n        return result;\n    }\n\n    /** Replaces the top value with the new value. */\n    replace(value)\n    {\n        const result = this.peek();\n        this._heap[TOP_INDEX] = value;\n        this._shiftDown();\n        return result;\n    }\n\n    peek()\n    {\n        return this._heap[TOP_INDEX];\n    }\n\n    /** @private */\n    _compare(i, j)\n    {\n        return this._comparator(this._heap[i], this._heap[j]);\n    }\n\n    /** @private */\n    _swap(i, j)\n    {\n        let result = this._heap[i];\n        this._heap[i] = this._heap[j];\n        this._heap[j] = result;\n    }\n\n    /** @private */\n    _shiftUp()\n    {\n        let node = this._heap.length - 1;\n        let nodeParent;\n        while (node > TOP_INDEX && this._compare(node, nodeParent = parentIndex(node)))\n        {\n            this._swap(node, nodeParent);\n            node = nodeParent;\n        }\n    }\n\n    /** @private */\n    _shiftDown()\n    {\n        const length = this._heap.length;\n        let node = TOP_INDEX;\n        let nodeMax;\n\n        let nodeLeft = leftIndex(node);\n        let flagLeft = nodeLeft < length;\n        let nodeRight = rightIndex(node);\n        let flagRight = nodeRight < length;\n\n        while ((flagLeft && this._compare(nodeLeft, node))\n            || (flagRight && this._compare(nodeRight, node)))\n        {\n            nodeMax = (flagRight && this._compare(nodeRight, nodeLeft)) ? nodeRight : nodeLeft;\n            this._swap(node, nodeMax);\n            node = nodeMax;\n\n            nodeLeft = leftIndex(node);\n            flagLeft = nodeLeft < length;\n            nodeRight = rightIndex(node);\n            flagRight = nodeRight < length;\n        }\n    }\n\n    values()\n    {\n        return this._heap;\n    }\n\n    [Symbol.iterator]()\n    {\n        return this._heap[Symbol.iterator]();\n    }\n}\n\nfunction bottomIndex(queue)\n{\n    return queue._heap.length - 1;\n}\n\nfunction parentIndex(i)\n{\n    return ((i + 1) >>> 1) - 1;\n}\n\nfunction leftIndex(i)\n{\n    return (i << 1) + 1;\n}\n\nfunction rightIndex(i)\n{\n    return (i + 1) << 1;\n}\n\nvar PriorityQueue$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    PriorityQueue: PriorityQueue\n});\n\n/**\n * Generates a uuid v4.\n * \n * @param {number} a The placeholder (serves for recursion within function).\n * @returns {string} The universally unique id.\n */\nfunction uuid(a = undefined)\n{\n    // https://gist.github.com/jed/982883\n    return a\n        ? (a ^ Math.random() * 16 >> a / 4).toString(16)\n        : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\n}\n\nfunction lerp(a, b, t)\n{\n    return a + (b - a) * t;\n}\n\nfunction clamp(value, min, max)\n{\n    return Math.min(max, Math.max(min, value));\n}\n\nfunction cycle(value, min, max)\n{\n    let range = max - min;\n    let result = (value - min) % range;\n    if (result < 0) result += range;\n    return result + min;\n}\n\nfunction withinRadius(fromX, fromY, toX, toY, radius)\n{\n    const dx = fromX - toX;\n    const dy = fromY - toY;\n    return dx * dx + dy * dy <= radius * radius\n}\n\nfunction distance2(fromX, fromY, toX, toY)\n{\n    let dx = toX - fromX;\n    let dy = toY - fromY;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction direction2(fromX, fromY, toX, toY)\n{\n    let dx = toX - fromX;\n    let dy = toY - fromY;\n    return Math.atan2(dy, dx);\n}\n\nfunction lookAt2(radians, target, dt)\n{\n    let step = cycle(target - radians, -Math.PI, Math.PI);\n    return clamp(radians + step, radians - dt, radians + dt);\n}\n\nconst TO_RAD_FACTOR = Math.PI / 180;\nconst TO_DEG_FACTOR = 180 / Math.PI;\nfunction toRadians(degrees)\n{\n    return degrees * TO_RAD_FACTOR;\n}\n\nfunction toDegrees(radians)\n{\n    return radians * TO_DEG_FACTOR;\n}\n\nexport { Discrete as D, Eventable$1 as E, Logger$1 as L, PriorityQueue$1 as P, Uploader as U, Downloader as a, cycle as b, clamp as c, direction2 as d, distance2 as e, lookAt2 as f, toRadians as g, lerp as l, toDegrees as t, uuid as u, withinRadius as w };\n","import { mat4, vec3, quat } from 'gl-matrix';\nimport { clamp } from 'milque';\n\nexport class Camera2D\n{\n    constructor(left = -1, right = 1, top = -1, bottom = 1, near = 0, far = 1)\n    {\n        this.position = vec3.create();\n        this.rotation = quat.create();\n        this.scale = vec3.fromValues(1, 1, 1);\n\n        this.clippingPlane = {\n            left, right, top, bottom, near, far,\n        };\n    }\n\n    get x() { return this.position[0]; }\n    set x(value) { this.position[0] = value; }\n    get y() { return this.position[1]; }\n    set y(value) { this.position[1] = value; }\n    get z() { return this.position[2]; }\n    set z(value) { this.position[2] = value; }\n    \n    moveTo(x, y, z = 0, dt = 1)\n    {\n        let nextPosition = vec3.fromValues(x, y, z);\n        vec3.lerp(this.position, this.position, nextPosition, clamp(dt, 0, 1));\n        return this;\n    }\n\n    /** @override */\n    getViewMatrix(out)\n    {\n        let viewX = -Math.round(this.x);\n        let viewY = -Math.round(this.y);\n        let viewZ = this.z === 0 ? 1 : 1 / this.z;\n        let invPosition = vec3.fromValues(viewX, viewY, 0);\n        let invScale = vec3.fromValues(this.scale[0] * viewZ, this.scale[1] * viewZ, 1);\n        mat4.fromRotationTranslationScale(out, this.rotation, invPosition, invScale);\n        return out;\n    }\n\n    /** @override */\n    getProjectionMatrix(out)\n    {\n        let { left, right, top, bottom, near, far } = this.clippingPlane;\n        mat4.ortho(out, left, right, top, bottom, near, far);\n        return out;\n    }\n}\n","import { mat4 } from 'gl-matrix';\nimport { Camera2D } from './Camera2D.js';\n\nexport class CanvasView2D\n{\n    constructor(display, camera = new Camera2D())\n    {\n        this.display = display;\n        this.camera = camera;\n\n        this.viewTransformDOMMatrix = new DOMMatrix();\n    }\n    \n    transformScreenToWorld(screenX, screenY)\n    {\n        let matrix = mat4.create();\n        this.getViewProjectionMatrix(matrix);\n        mat4.invert(matrix, matrix);\n        let result = vec3.fromValues(screenX, screenY, 0);\n        vec3.transformMat4(result, result, matrix);\n        return result;\n    }\n    \n    transformCanvas(ctx)\n    {\n        let domMatrix = this.viewTransformDOMMatrix;\n        let matrix = mat4.create();\n        this.getViewProjectionMatrix(matrix);\n        setDOMMatrix(domMatrix, matrix);\n\n        const { a, b, c, d, e, f } = domMatrix;\n        ctx.transform(a, b, c, d, e, f);\n    }\n\n    getViewProjectionMatrix(out)\n    {\n        const displayWidth = this.display.width;\n        const displayHeight = this.display.height;\n\n        let matrix = mat4.create();\n        const projectionMatrix = this.camera.getProjectionMatrix(matrix);\n        const viewMatrix = this.camera.getViewMatrix(out);\n        mat4.multiply(matrix, viewMatrix, projectionMatrix);\n        // HACK: This is the correct canvas matrix, but since we simply restore the\n        // the aspect ratio by effectively undoing the scaling, we can skip this step\n        // all together to achieve the same effect (albeit incorrect).\n        /*\n        const canvasMatrix = mat4.fromRotationTranslationScale(\n            out,\n            [0, 0, 0, 1],\n            [displayWidth / 2, displayHeight / 2, 0],\n            [displayWidth, displayHeight, 0]);\n        */\n        // HACK: This shouldn't be here. This should really be in the view matrix.\n        const canvasMatrix = mat4.fromTranslation(\n            out,\n            [displayWidth / 2, displayHeight / 2, 0]);\n        mat4.multiply(out, canvasMatrix, matrix);\n        return out;\n    }\n}\n\nexport function setDOMMatrix(domMatrix, glMatrix)\n{\n    domMatrix.a = glMatrix[0];\n    domMatrix.b = glMatrix[1];\n    domMatrix.c = glMatrix[4];\n    domMatrix.d = glMatrix[5];\n    domMatrix.e = glMatrix[12];\n    domMatrix.f = glMatrix[13];\n    return domMatrix;\n}\n","const MAX_DEPTH_LEVEL = 100;\n\n/**\n * @callback WalkCallback Called for each node, before traversing its children.\n * @param {Object} object The current object.\n * @param {SceneNode} node The representative node for the current object.\n * @returns {WalkBackCallback|Boolean} If false, the walk will skip\n * the current node's children. If a function, it will be called after\n * traversing down all of its children.\n * \n * @callback WalkBackCallback Called if returned by {@link WalkCallback}, after\n * traversing the current node's children.\n * @param {Object} object The current object.\n * @param {SceneNode} node The representative node for the current object.\n */\n\n/**\n * A tree-like graph of nodes with n-children.\n */\nexport class SceneGraph\n{\n    /**\n     * Constructs an empty scene graph with nodes to be created from the given constructor.\n     * \n     * @param {Object} [opts] Any additional options.\n     * @param {typeof SceneNode} [opts.nodeConstructor] The scene node constructor that make up the graph.\n     * @param {Object} [opts.root] The root owner, otherwise it is an empty object.\n     */\n    constructor(opts = {})\n    {\n        this.nodeConstructor = opts.nodeConstructor || SceneNode;\n        this.nodes = new Map();\n        \n        const rootOwner = opts.root || {};\n        this.root = new (this.nodeConstructor)(this, rootOwner, null, []);\n        this.nodes.set(rootOwner, this.root);\n    }\n\n    /**\n     * Adds an object to the scene graph.\n     * \n     * @param {Object} child The child object to add.\n     * @param {Object} [parent=null] The parent object to add the child under. If null,\n     * the child will be inserted under the root node.\n     * @returns {SceneNode} The scene node that represents the added child object.\n     */\n    add(child, parent = null)\n    {\n        if (this.nodes.has(parent))\n        {\n            let parentNode = this.nodes.get(parent);\n            if (this.nodes.has(child))\n            {\n                let childNode = this.nodes.get(child);\n                detach(childNode.parent, childNode);\n                attach(parentNode, childNode);\n                return childNode;\n            }\n            else\n            {\n                let childNode = new (this.nodeConstructor)(this, child, null, []);\n                this.nodes.set(child, childNode);\n                attach(parentNode, childNode);\n                return childNode;\n            }\n        }\n        else if (parent === null)\n        {\n            return this.add(child, this.root.owner);\n        }\n        else\n        {\n            throw new Error(`No node in scene graph exists for parent.`);\n        }\n    }\n\n    /**\n     * Removes an object from the scene graph, along with all\n     * of its descendents.\n     * \n     * @param {Object} child The child object to remove. If null, will clear\n     * the entire graph.\n     * @returns {Boolean} Whether any objects were removed from the scene.\n     */\n    remove(child)\n    {\n        if (this.nodes.has(child))\n        {\n            let childNode = this.nodes.get(child);\n            let parentNode = childNode.parent;\n            detach(parentNode, childNode);\n            this.nodeConstructor.walk(childNode, 0, descendent => {\n                this.nodes.delete(descendent);\n            });\n            return true;\n        }\n        else if (child === null)\n        {\n            this.clear();\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    /**\n     * Replaces the target object with the new child object in the graph,\n     * inheriting its parent and children.\n     * \n     * @param {Object} target The target object to replace. If null,\n     * it will replace the root node.\n     * @param {Object} child The object to replace with. If null,\n     * it will remove the target and the target's parent will adopt\n     * its grandchildren.\n     */\n    replace(target, child)\n    {\n        if (this.nodes.has(target))\n        {\n            let targetNode = this.nodes.get(target);\n            let targetParent = targetNode.parent;\n            let targetChildren = [...targetNode.children];\n\n            // Remove target node from the graph\n            detach(targetParent, targetNode);\n\n            // Begin grafting the grandchildren by first removing...\n            targetNode.children.length = 0;\n\n            if (child === null)\n            {\n                // Reattach all grandchildren to target parent.\n                targetParent.children.push(...targetChildren);\n            }\n            else\n            {\n                // Reattach all grandchildren to new child.\n                let childNode;\n                if (this.nodes.has(child))\n                {\n                    childNode = this.nodes.get(child);\n\n                    // Remove child node from prev parent\n                    detach(childNode.parent, childNode);\n\n                    // ...and graft them back.\n                    childNode.children.push(...targetChildren);\n                }\n                else\n                {\n                    childNode = new (this.nodeConstructor)(this, child, null, targetChildren);\n                    this.nodes.set(child, childNode);\n                }\n\n                // And reattach target parent to new child.\n                attach(targetParent, childNode);\n            }\n            \n            // ...and graft them back.\n            for(let targetChild of targetChildren)\n            {\n                targetChild.parent = targetParent;\n            }\n\n            return child;\n        }\n        else if (target === null)\n        {\n            return this.replace(this.root.owner, child);\n        }\n        else\n        {\n            throw new Error('Cannot find target object to replace in scene graph.');\n        }\n    }\n\n    /** Removes all nodes from the graph. */\n    clear()\n    {\n        this.nodes.clear();\n\n        // Reset the graph.\n        const rootOwner = {};\n        this.root = new (this.nodeConstructor)(this, rootOwner, null, []);\n        this.nodes.set(rootOwner, this.root);\n    }\n\n    /**\n     * Gets the scene node for the given object.\n     * \n     * @param {Object} owner The object to retreive the node for.\n     * @returns {SceneNode} The scene node that represents the object.\n     */\n    get(child)\n    {\n        if (child === null)\n        {\n            return this.root;\n        }\n        else\n        {\n            return this.nodes.get(child);\n        }\n    }\n\n    /**\n     * Walks through every node in the graph starting from the root and\n     * down to its children.\n     * \n     * @param {WalkCallback} callback The function called for each node\n     * in the graph, in ordered traversal from parent to child.\n     * @param {Object} [opts] Any additional options.\n     * @param {Boolean} [opts.skipRoot] Whether to skip traversing the root\n     * and start from its children instead.\n     */\n    forEach(callback, opts = {})\n    {\n        if (opts.skipRoot)\n        {\n            for(let childNode of this.root.children)\n            {\n                this.nodeConstructor.walk(childNode, 1, callback);\n            }\n        }\n        else\n        {\n            this.nodeConstructor.walk(this.root, 0, callback);\n        }\n    }\n}\n\nfunction attach(parentNode, childNode)\n{\n    parentNode.children.push(childNode);\n    childNode.parent = parentNode;\n}\n\nfunction detach(parentNode, childNode)\n{\n    let index = parentNode.children.indexOf(childNode);\n    parentNode.children.splice(index, 1);\n    childNode.parent = null;\n}\n\n/**\n * A representative node to keep relational metadata for any object in\n * the {@link SceneGraph}.\n */\nexport class SceneNode\n{\n    /**\n     * Walk down from the parent and through all its descendents.\n     * \n     * @param {SceneNode} parentNode The parent node to start walking from.\n     * @param {Number} level The current call depth level. This is used to limit the call stack.\n     * @param {WalkCallback} callback The function called on each visited node.\n     */\n    static walk(parentNode, level, callback)\n    {\n        if (level >= MAX_DEPTH_LEVEL) return;\n\n        let result = callback(parentNode.owner, parentNode);\n        if (result === false) return;\n\n        for(let childNode of parentNode.children)\n        {\n            this.walk(childNode, level + 1, callback);\n        }\n\n        if (typeof result === 'function')\n        {\n            result(parentNode.owner, parentNode);\n        }\n    }\n\n    /**\n     * Constructs a scene node with the given parent and children. This assumes\n     * the given parent and children satisfy the correctness constraints of the\n     * graph. In other words, This does not validate nor modify other nodes,\n     * such as its parent or children, to maintain correctness. That must be\n     * handled externally.\n     * \n     * @param {SceneGraph} sceneGraph The scene graph this node belongs to.\n     * @param {Object} owner The owner object.\n     * @param {SceneNode} parent The parent node.\n     * @param {Array<SceneNode>} children The list of child nodes.\n     */\n    constructor(sceneGraph, owner, parent, children)\n    {\n        this.sceneGraph = sceneGraph;\n        this.owner = owner;\n\n        this.parent = parent;\n        this.children = children;\n    }\n}\n","export class EntityManager\n{\n    constructor(opts = {})\n    {\n        const { componentFactoryMap = {}, strictMode = false } = opts;\n        let factoryMap = {};\n        let instances = {};\n        for(let componentName in componentFactoryMap)\n        {\n            let factoryOption = componentFactoryMap[componentName];\n            let create, destroy;\n            if (typeof factoryOption === 'function')\n            {\n                create = factoryOption;\n                destroy = null;\n            }\n            else if (typeof factoryOption === 'object')\n            {\n                create = factoryOption.create || null;\n                destroy = factoryOption.destroy || null;\n            }\n            else\n            {\n                throw new Error('Unsupported component factory options.');\n            }\n            factoryMap[componentName] = { owner: factoryOption, create, destroy };\n            instances[componentName] = {};\n        }\n        this.factoryMap = factoryMap;\n        this.instances = instances;\n        this.entities = new Set();\n        this.nextAvailableEntityId = 1;\n        this.strictMode = strictMode;\n    }\n\n    create(entityTemplate = undefined)\n    {\n        let entityId = this.nextAvailableEntityId++;\n        this.entities.add(entityId);\n        if (entityTemplate)\n        {\n            if (Array.isArray(entityTemplate))\n            {\n                for(let componentName of entityTemplate)\n                {\n                    this.add(componentName, entityId);\n                }\n            }\n            else if (typeof entityTemplate === 'object')\n            {\n                for(let componentName in entityTemplate)\n                {\n                    this.add(componentName, entityId, entityTemplate[componentName]);\n                }\n            }\n            else\n            {\n                throw new Error('Invalid component options.');\n            }\n        }\n        return entityId;\n    }\n\n    destroy(entityId)\n    {\n        for(let componentName in this.instances)\n        {\n            this.remove(componentName, entityId);\n        }\n        this.entities.delete(entityId);\n    }\n\n    add(componentName, entityId, props = undefined)\n    {\n        if (!(componentName in this.factoryMap))\n        {\n            if (this.strictMode)\n            {\n                throw new Error(`Missing component factory for '${componentName}'.`);\n            }\n            else\n            {\n                this.factoryMap[componentName] = {\n                    owner: {},\n                    create: null,\n                    destroy: null,\n                };\n                this.instances[componentName] = {};\n            }\n        }\n\n        if (!(componentName in this.instances))\n        {\n            throw new Error(`Missing component instance mapping for '${componentName}'.`);\n        }\n\n        if (!this.entities.has(entityId))\n        {\n            throw new Error(`Entity '${entityId}' does not exist.`);\n        }\n\n        if (this.instances[componentName][entityId])\n        {\n            throw new Error(`Entity already has component '${componentName}'.`);\n        }\n\n        const { create } = this.factoryMap[componentName];\n        let result = create\n            ? create(props, componentName, entityId, this)\n            : (props\n                ? {...props}\n                : {});\n        if (result)\n        {\n            this.instances[componentName][entityId] = result;\n        }\n    }\n\n    remove(componentName, entityId)\n    {\n        if (!(componentName in this.factoryMap))\n        {\n            if (this.strictMode)\n            {\n                throw new Error(`Missing component factory for '${componentName}'.`);\n            }\n            else\n            {\n                return;\n            }\n        }\n\n        if (!(componentName in this.instances))\n        {\n            throw new Error(`Missing component instance mapping for '${componentName}'.`);\n        }\n        \n        let entityComponents = this.instances[componentName];\n        let componentValues = entityComponents[entityId];\n        if (componentValues)\n        {\n            entityComponents[entityId] = null;\n    \n            const { destroy } = this.factoryMap[componentName];\n            if (destroy) destroy(componentValues, componentName, entityId, this);\n        }\n    }\n\n    get(componentName, entityId)\n    {\n        if (!(componentName in this.instances))\n        {\n            throw new Error(`Missing component instance mapping for '${componentName}'.`);\n        }\n        \n        const entityComponents = this.instances[componentName];\n        return entityComponents[entityId] || null;\n    }\n    \n    has(componentName, entityId)\n    {\n        return componentName in this.instances && Boolean(this.instances[componentName][entityId]);\n    }\n\n    clear(componentName)\n    {\n        if (!(componentName in this.factoryMap))\n        {\n            if (this.strictMode)\n            {\n                throw new Error(`Missing component factory for '${componentName}'.`);\n            }\n            else\n            {\n                return;\n            }\n        }\n\n        if (!(componentName in this.instances))\n        {\n            throw new Error(`Missing component instance mapping for '${componentName}'.`);\n        }\n\n        let entityComponents = this.instances[componentName];\n        const { destroy } = this.factoryMap[componentName];\n        if (destroy)\n        {\n            for(let entityId in entityComponents)\n            {\n                let componentValues = entityComponents[entityId];\n                entityComponents[entityId] = null;\n\n                destroy(componentValues, componentName, entityId, this);\n            }\n        }\n        this.instances[componentName] = {};\n    }\n\n    getEntityIds()\n    {\n        return this.entities;\n    }\n\n    getComponentFactory(componentName)\n    {\n        if (componentName in this.factoryMap)\n        {\n            return this.factoryMap[componentName].owner;\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getComponentNames()\n    {\n        return Object.keys(this.factoryMap);\n    }\n\n    getComponentEntityIds(componentName)\n    {\n        if (componentName in this.instances)\n        {\n            return Object.keys(this.instances[componentName]);\n        }\n        else\n        {\n            return [];\n        }\n    }\n    \n    getComponentInstances(componentName)\n    {\n        if (componentName in this.instances)\n        {\n            return Object.values(this.instances[componentName]);\n        }\n        else\n        {\n            return [];\n        }\n    }\n}\n","import { InputContext, IntersectionHelper, IntersectionResolver } from 'milque';\nimport { mat4 } from 'gl-matrix';\n\nimport { CanvasView2D, setDOMMatrix } from '@app/view/CanvasView2D.js';\nimport { SceneGraph, SceneNode } from '@app/scene/SceneGraph.js';\nimport { EntityManager } from '@app/entity/EntityManager.js';\nimport * as inputmap from '../res/inputmap.json';\n\ndocument.addEventListener('DOMContentLoaded', main);\n\n// TODO: Should print the key code of any key somewhere, so we know what to use.\n// NOTE: https://keycode.info/\nconst INPUT_MAPPING = inputmap;\n\nclass SceneTransformNode extends SceneNode\n{\n    constructor(sceneGraph, owner, parent, children)\n    {\n        super(sceneGraph, owner, parent, children);\n\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n\n        this.pitch = 0;\n        this.yaw = 0;\n        this.roll = 0;\n\n        this.scaleX = 1;\n        this.scaleY = 1;\n        this.scaleZ = 1;\n\n        this.worldTransformation = mat4.create();\n        this.localTransformation = mat4.create();\n    }\n}\n\nconst Transform = {\n    create(props, componentName, entityId, entityManager)\n    {\n        const { sceneGraph, parent = undefined, x = 0, y = 0, z = 0} = props;\n        if (!sceneGraph) throw new Error(`Component instantiation is missing required prop 'sceneGraph'.`);\n        let node = sceneGraph.add(entityId, parent);\n        node.x = x;\n        node.y = y;\n        node.z = z;\n        return node;\n    },\n    destroy(component, componentName, entityId, entityManager)\n    {\n        component.sceneGraph.remove(entityId);\n    }\n};\n\nconst Renderable = {\n    create(props)\n    {\n        const { renderType, ...otherProps } = props;\n        if (!renderType) throw new Error(`Component instantiation is missing required prop 'renderType'.`);\n        return {\n            renderType,\n            ...otherProps,\n        };\n    }\n};\n\nconst Motion = {\n    create(props)\n    {\n        return {\n            motionX: 0,\n            motionY: 0,\n            speed: 0.6,\n            friction: 0.25,\n            ...props\n        };\n    }\n};\n\nconst PlayerControlled = {};\n\nconst ENTITY_COMPONENT_FACTORY_MAP = {\n    Transform,\n    Renderable,\n    Motion,\n    PlayerControlled,\n};\n\nasync function main()\n{\n    const display = document.querySelector('display-port');\n    const input = new InputContext(INPUT_MAPPING);\n    document.body.appendChild(input);\n\n    const ctx = display.canvas.getContext('2d');\n    const view = new CanvasView2D(display);\n    const cameraSpeed = 4;\n\n    const scene = new SceneGraph({\n        nodeConstructor: SceneTransformNode\n    });\n    const entityManager = new EntityManager({\n        componentFactoryMap: ENTITY_COMPONENT_FACTORY_MAP,\n    });\n\n    const player = entityManager.create({\n        Transform: { sceneGraph: scene },\n        Renderable: { renderType: 'player' },\n        Motion: {},\n        PlayerControlled: true,\n    });\n    const playerAABB = IntersectionHelper.createAABB(0, 0, 8, 8);\n    scene.add(playerAABB, player);\n\n    const walls = [\n        entityManager.create({\n            Transform: { sceneGraph: scene, x: 0, y: 0 },\n            Renderable: { renderType: 'wall', width: 4, height: 64 },\n        }),\n        entityManager.create({\n            Transform: { sceneGraph: scene, x: 0, y: 0 },\n            Renderable: { renderType: 'wall', width: 64, height: 4 },\n        }),\n        entityManager.create({\n            Transform: { sceneGraph: scene, x: 64, y: 0 },\n            Renderable: { renderType: 'wall', width: 4, height: 16 },\n        }),\n    ];\n    walls.forEach(wall => scene.add(wall));\n\n    const dynamics = [playerAABB];\n    const masks = [];\n    const statics = [...walls.map(wall => wall.mask)];\n\n    display.addEventListener('frame', e => {\n        // Update\n        {\n            const dt = e.detail.deltaTime / 1000;\n            input.poll();\n\n            // Player\n            for(let entityId of entityManager.getComponentEntityIds('Motion'))\n            {\n                let motion = entityManager.get('Motion', entityId);\n\n                if (entityManager.has('PlayerControlled', entityId))\n                {\n                    let dx = input.getInputValue('moveRight') - input.getInputValue('moveLeft');\n                    let dy = input.getInputValue('moveDown') - input.getInputValue('moveUp');\n                    if (dx || dy)\n                    {\n                        let dr = Math.atan2(dy, dx);\n                        motion.motionX += Math.cos(dr) * motion.speed;\n                        motion.motionY += Math.sin(dr) * motion.speed;\n                    }\n                }\n\n                let invFriction = 1 - motion.friction;\n                motion.motionX *= invFriction;\n                motion.motionY *= invFriction;\n\n                if (entityManager.has('Transform', entityId))\n                {\n                    let transform = entityManager.get('Transform', entityId);\n                    transform.x += motion.motionX;\n                    transform.y += motion.motionY;\n                }\n            }\n            \n            // Camera\n            let controlledEntity = entityManager.getComponentEntityIds('PlayerControlled')[0];\n            let controlledTransform = entityManager.get('Transform', controlledEntity);\n            view.camera.moveTo(controlledTransform.x, controlledTransform.y, 0, dt * cameraSpeed);\n\n            // Physics\n            // IntersectionResolver.resolveIntersections(dynamics, statics, dt);\n        }\n\n        // Render\n        {\n            ctx.clearRect(0, 0, display.width, display.height);\n\n            renderSceneGraph(ctx, scene, view,\n                (node) => {\n                    return node;\n                },\n                (ctx, child, node) => {\n                    if (entityManager.has('Renderable', child))\n                    {\n                        const renderable = entityManager.get('Renderable', child);\n                        switch(renderable.renderType)\n                        {\n                            case 'player':\n                                ctx.fillStyle = 'blue';\n                                ctx.fillRect(-8, -8, 16, 16);\n                                break;\n                            case 'wall':\n                                ctx.fillStyle = 'white';\n                                ctx.fillRect(0, 0, renderable.width, renderable.height);\n                                break;\n                        }\n                    }\n                    else\n                    {\n                        ctx.fillStyle = 'red';\n                        ctx.fillRect(-1, -1, 2, 2);\n                    }\n                });\n        }\n    });\n}\n\nfunction renderSceneGraph(ctx, sceneGraph, view, transformCallback, renderer)\n{\n    let rootNode = sceneGraph.get(null);\n    let {\n        localTransformation: rootLocalTransformation,\n        worldTransformation: rootWorldTransformation\n    } = transformCallback(rootNode);\n    view.getViewProjectionMatrix(rootLocalTransformation);\n    mat4.copy(rootWorldTransformation, rootLocalTransformation);\n\n    let domMatrix = new DOMMatrix();\n    sceneGraph.forEach((child, node) => {\n        let { parent } = node;\n        let parentTransform = transformCallback(parent);\n        let childTransform = transformCallback(node);\n\n        let { localTransformation, worldTransformation } = childTransform;\n        const { worldTransformation: parentWorldTransformation } = parentTransform;\n\n        mat4.fromTranslation(localTransformation, [childTransform.x, childTransform.y, childTransform.z]);\n        mat4.multiply(worldTransformation, parentWorldTransformation, localTransformation);\n        \n        setDOMMatrix(domMatrix, worldTransformation);\n        ctx.setTransform(domMatrix);\n\n        renderer(ctx, child, node);\n    },\n    { skipRoot: true });\n\n    ctx.setTransform();\n}\n\nclass AABBSystem\n{\n    add(owner, rx, ry)\n    {\n        let aabb = {\n            owner,\n            rx,\n            ry,\n        };\n    }\n\n    remove(owner)\n    {\n        \n    }\n}\n\nfunction createAABB()\n{\n\n}\n\nfunction testAABB()\n{\n\n}\n"],"names":["INNER_HTML","INNER_STYLE","TEMPLATE_KEY","STYLE_KEY","INNER_HTML$1","INNER_STYLE$1","TEMPLATE_KEY$1","STYLE_KEY$1","glMatrix.ARRAY_TYPE","create","normalize","forEach","glMatrix.EPSILON","vec4.normalize","vec3.create","vec3.fromValues","dot","vec3.dot","vec3.cross","vec3.len","vec3.normalize","mat3.create","vec3$1.fromValues","EPSILON","clamp","quat.create","vec3.lerp","mat4.fromRotationTranslationScale","mat4.ortho","mat4.create","mat4.invert","mat4.multiply","mat4.fromTranslation","inputmap","mat4.copy"],"mappings":";;;IAAA,MAAM,YAAY,GAAG,SAAS,CAAC;IAC/B,MAAM,WAAW,GAAG,QAAQ,CAAC;IAC7B,MAAM,QAAQ,GAAG,KAAK,CAAC;IACvB,MAAM,YAAY,GAAG,SAAS,CAAC;AAC/B;IACA,MAAM,YAAY,GAAG,YAAY,CAAC;IAClC,MAAM,aAAa,GAAG,GAAG,CAAC;IAC1B,MAAM,cAAc,GAAG,GAAG,CAAC;AAC3B;IACA,MAAM,UAAU,GAAG,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC,CAAC;IACR,MAAM,WAAW,GAAG,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,YAAY,CAAC;AAC5B;AACA;AACA;AACA;AACA,aAAa,EAAE,QAAQ,CAAC,kBAAkB,EAAE,WAAW,CAAC,kBAAkB,EAAE,YAAY,CAAC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,CAAC;AACH;IACA,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IACxC,MAAM,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,WAAW,SAAS,WAAW;IACrC;IACA,IAAI,YAAY,YAAY,CAAC;IAC7B,IAAI;IACJ,QAAQ,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IAC1D,QAAQ,QA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C,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IACrD,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IACrD,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACb,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,E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AAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAClB,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAClB,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAClB,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAClB,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAClB,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAClB,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAClB,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAClB,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;IAChC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;IAC1B,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;IAC1B,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;IAC1B,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;IAChC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;IAC1B,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;IAC1B,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;IAC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"}